(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    198763,       4541]
NotebookOptionsPosition[    185416,       4208]
NotebookOutlinePosition[    187586,       4275]
CellTagsIndexPosition[    187250,       4263]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Spreading Particles in a Disc with Global Inputs and Bounded Error \
\>", "DemoTitle",
 CellChangeTimes->{{3.712756850926078*^9, 3.712756892307831*^9}, {
  3.712756948031412*^9, 
  3.712756957302475*^9}},ExpressionUUID->"89e03aa6-ee03-45ec-ba3b-\
82970217c5b8"],

Cell[CellGroupData[{

Cell["", "InitializationSection",ExpressionUUID->"5b5fa80d-a280-4c8e-bd8d-b5194d20da7d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"angToDispArc", "[", 
    RowBox[{"ptAng_", ",", "disp_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]L", ",", "\[Beta]R", ",", "aL", ",", "aR"}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "if", " ", "swarm", " ", "starts", " ", "at", " ", "pt", " ", "given", 
        " ", "by", " ", "ptAng"}], ",", " ", 
       RowBox[{"moves", " ", "in", " ", "direction", " ", "\[Theta]"}], ",", 
       " ", 
       RowBox[{"with", " ", "dispersion", " ", "disp"}], ",", " ", 
       RowBox[{
       "gives", " ", "the", " ", "left", " ", "and", " ", "right", " ", "end",
         " ", "points", " ", "of", " ", "the", " ", "arc", " ", 
        RowBox[{"(", 
         RowBox[{"aL", ",", "aR"}], ")"}], " ", "where", " ", "the", " ", 
        "swarm", " ", "hits"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Beta]L", "=", " ", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "+", "disp", "+", "\[Pi]", "-", "ptAng"}], 
           "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "+", "disp", "+", "\[Pi]", "-", "ptAng"}], 
           "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Beta]L", "=", 
       RowBox[{"\[Theta]", "+", "disp", "+", "\[Pi]", "-", "ptAng"}]}], ";", 
      RowBox[{"\[Beta]L", "=", 
       RowBox[{"\[Beta]L", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Beta]L", ">", "\[Pi]"}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], "\[Pi]"}], ",", "0"}], "]"}], "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Beta]L", "<", 
           RowBox[{"-", "\[Pi]"}]}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Internal", " ", "Angle", " ", "from", " ", "left", " ", "hit", " ", 
        "point", " ", "to", " ", "the", " ", "origin"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"aL", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "\[Beta]L", "]"}], "\[GreaterEqual]", " ", 
          RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", "ptAng", ",", 
         RowBox[{"ptAng", "-", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"2", " ", "\[Beta]L"}]}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"\[Beta]R", "=", " ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "-", "disp", "+", "\[Pi]", "-", "ptAng"}], 
            "]"}], ",", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "-", "disp", "+", "\[Pi]", "-", "ptAng"}], 
            "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Beta]R", "=", " ", 
       RowBox[{"\[Theta]", "-", "disp", "+", "\[Pi]", "-", "ptAng"}]}], ";", 
      RowBox[{"\[Beta]R", "=", 
       RowBox[{"\[Beta]R", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Beta]R", ">", "\[Pi]"}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], "\[Pi]"}], ",", "0"}], "]"}], "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Beta]R", "<", 
           RowBox[{"-", "\[Pi]"}]}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Internal", " ", "Angle", " ", "from", " ", "right", " ", "hit", " ", 
        "point", " ", "to", " ", "the", " ", "origin"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"aR", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "\[Beta]R", "]"}], "\[GreaterEqual]", " ", 
          RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", "ptAng", ",", 
         RowBox[{"ptAng", "+", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "+", 
            RowBox[{"2", " ", "\[Beta]R"}]}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"aR", " ", "=", " ", 
       RowBox[{"aR", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"aR", ">", "aL"}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"aR", "<", 
          RowBox[{"-", "\[Pi]"}]}], " ", "||", 
         RowBox[{"aL", " ", "<", 
          RowBox[{"-", "\[Pi]"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"aR", "=", 
          RowBox[{"aR", "+", 
           RowBox[{"2", "\[Pi]"}]}]}], ";", 
         RowBox[{"aL", "=", 
          RowBox[{"aL", "+", 
           RowBox[{"2", "\[Pi]"}]}]}]}]}], " ", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"aL", "<", "aR"}], ",", 
          RowBox[{"aL", " ", "=", " ", 
           RowBox[{"aL", "+", 
            RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"aL", ",", "aR"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"angleToPt", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ptToAng", "[", "ptin_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "pt", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pt", " ", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Norm", "[", "ptin", "]"}], ">", "0"}], ",", " ", 
         RowBox[{"ptin", "/", 
          RowBox[{"Norm", "[", "ptin", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"pt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{
        "pt", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       "]"}]}]}], 
    RowBox[{"(*", 
     RowBox[{"origin", " ", "to", " ", "the", " ", "starting", " ", "pt"}], 
     "*)"}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isAngleInArc", "[", 
    RowBox[{"aLin_", ",", "aR_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"aL", ",", 
       RowBox[{"\[Epsilon]", "=", "0.001"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"Assume", " ", "aL"}], ">", "aR"}], ",", 
       RowBox[{
        RowBox[{"aL", "-", "aR"}], " ", "<", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], " ", "-", "\[Pi]"}], "\[LessEqual]", "aR", 
        "\[LessEqual]", "\[Pi]"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "\[LessEqual]", "\[Alpha]", "\[LessEqual]", 
        "\[Pi]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"aL", "=", 
       RowBox[{"aLin", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"aLin", "<", "aR"}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "\[Epsilon]", " ", "is", " ", "needed", " ", "because", " ", "Inverse",
         " ", "Trig", " ", "on", " ", "an", " ", "angle", " ", "is", " ", 
        "not", " ", "exactly", " ", "the", " ", "same", " ", "as", " ", 
        "original", " ", "angle"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"aR", "-", "\[Epsilon]"}], "\[LessEqual]", "\[Alpha]", 
         "\[LessEqual]", " ", 
         RowBox[{"aL", "+", "\[Epsilon]"}]}], " ", ")"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"aR", "-", "\[Epsilon]"}], "\[LessEqual]", 
         RowBox[{"\[Alpha]", "-", 
          RowBox[{"2", "\[Pi]"}]}], "\[LessEqual]", " ", 
         RowBox[{"aL", "+", "\[Epsilon]"}]}], " ", ")"}], " ", "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"aR", "-", "\[Epsilon]"}], "\[LessEqual]", 
         RowBox[{"\[Alpha]", "+", 
          RowBox[{"2", "\[Pi]"}]}], "\[LessEqual]", " ", 
         RowBox[{"aL", "+", "\[Epsilon]"}]}], " ", ")"}]}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simprojection", "[", 
    RowBox[{"ptLAng_", ",", "ptRAngIn_", ",", "disp_", ",", "\[Theta]_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rA", ",", "lA"}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Projects", " ", "arc", " ", 
       RowBox[{"(", 
        RowBox[{"ptLin", ",", "ptRin"}], ")"}], " ", "that", " ", "moves", 
       " ", "in", " ", "direction", " ", "\[Theta]", " ", "with", " ", 
       "dispersion", " ", "disp"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rA", ",", "lA"}], "}"}], "=", 
       RowBox[{"projMath", "[", 
        RowBox[{"ptLAng", ",", "ptRAngIn", ",", "disp", ",", "\[Theta]"}], 
        "]"}]}], ";"}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"lA", "-", "rA"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{
     "Not", " ", "sure", " ", "what", " ", "this", " ", "is", " ", "for"}], 
     "*)"}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"projMath", "[", 
    RowBox[{"ptLAng_", ",", "ptRAng_", ",", "disp_", ",", "\[Theta]_"}], 
    "]"}], ":=", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Projects", " ", "arc", " ", 
      RowBox[{"(", 
       RowBox[{"ptLin", ",", "ptRin"}], ")"}], " ", "that", " ", "moves", " ",
       "in", " ", "direction", " ", "\[Theta]", " ", "with", " ", 
      "dispersion", " ", "disp", " ", "assumes", " ", "ptLAng"}], " ", ">", 
     " ", "ptRAng"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "aLhL", ",", "aLhR", ",", "aRhL", ",", "aRhR", ",", "t1", ",", "t2", 
       ",", "rA", ",", "lA"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"aLhL", ",", "aLhR"}], "}"}], "=", 
        RowBox[{"angToDispArc", "[", 
         RowBox[{"ptLAng", ",", "disp", ",", "\[Theta]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Quiet", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"aRhL", ",", "aRhR"}], "}"}], "=", 
        RowBox[{"angToDispArc", "[", 
         RowBox[{"ptRAng", ",", "disp", ",", "\[Theta]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"(*", 
        RowBox[{
        "If", " ", "end", " ", "points", " ", "from", " ", "left", " ", 
         "endpt", " ", "are", " ", "inside", " ", "arc", " ", "from", " ", 
         "right", " ", 
         RowBox[{"endpoint", ":"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"isAngleInArc", "[", 
          RowBox[{"aRhL", ",", "aRhR", ",", "aLhL"}], "]"}], "&&", 
         RowBox[{"isAngleInArc", "[", 
          RowBox[{"aRhL", ",", "aRhR", ",", "aLhR"}], "]"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rA", " ", "=", "aRhR"}], ";", "\[IndentingNewLine]", 
         RowBox[{"lA", " ", "=", " ", "aRhL"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{"(*", 
          RowBox[{
          "If", " ", "end", " ", "points", " ", "from", " ", "right", " ", 
           "endpt", " ", "are", " ", "inside", " ", "arc", " ", "from", " ", 
           "left", " ", 
           RowBox[{"endpoint", ":"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"isAngleInArc", "[", 
            RowBox[{"aLhL", ",", "aLhR", ",", "aRhL"}], "]"}], "&&", 
           RowBox[{"isAngleInArc", "[", 
            RowBox[{"aLhL", ",", "aLhR", ",", "aRhR"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"rA", " ", "=", "aLhR"}], ";", "\[IndentingNewLine]", 
           RowBox[{"lA", " ", "=", " ", "aLhL"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
              RowBox[{
              "If", " ", "all", " ", "end", " ", "points", " ", "from", " ", 
               "left"}], " ", "&"}], " ", "right", " ", "are", " ", "inside", 
             " ", "original", " ", 
             RowBox[{"arc", ":"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"isAngleInArc", "[", 
              RowBox[{"ptLAng", ",", "ptRAng", ",", "aRhL"}], "]"}], "&&", 
             RowBox[{"isAngleInArc", "[", 
              RowBox[{"ptLAng", ",", "ptRAng", ",", "aLhR"}], "]"}], "&&", 
             "\[IndentingNewLine]", 
             RowBox[{"isAngleInArc", "[", 
              RowBox[{"ptLAng", ",", "ptRAng", ",", "aRhR"}], "]"}], "&&", 
             RowBox[{"isAngleInArc", "[", 
              RowBox[{"ptLAng", ",", "ptRAng", ",", "aLhL"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"rA", " ", "=", "aRhR"}], ";", "\[IndentingNewLine]", 
             RowBox[{"lA", " ", "=", " ", "aLhL"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"rA", " ", "=", "aLhR"}], ";", 
             RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"lA", " ", "=", " ", "aRhL"}]}]}], "\[IndentingNewLine]",
            "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"check", " ", "for", " ", "tangent", " ", "points"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"t1", " ", "=", 
       RowBox[{"\[Theta]", "+", "disp", "+", 
        RowBox[{"\[Pi]", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"t2", " ", "=", 
       RowBox[{"\[Theta]", "-", "disp", "+", 
        RowBox[{"3", 
         RowBox[{"\[Pi]", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rA", " ", "=", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"isAngleInArc", "[", 
          RowBox[{"ptLAng", ",", "ptRAng", ",", "t2"}], "]"}], ",", "t2", ",",
          "rA"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lA", " ", "=", " ", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"isAngleInArc", "[", 
          RowBox[{"ptLAng", ",", "ptRAng", ",", "t1"}], "]"}], ",", "t1", ",",
          "lA"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ensure", " ", "lA"}], ">", "rA"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"lA", "=", 
       RowBox[{"lA", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lA", "<", "rA"}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lA", "=", 
       RowBox[{"lA", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lA", "<", "rA"}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lA", "=", 
       RowBox[{"lA", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lA", ">", 
           RowBox[{
            RowBox[{"2", "\[Pi]"}], "+", "rA"}]}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"rA", ",", "lA"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "**", " ", "DRAWING"}], 
    " ", 
    RowBox[{
    "CODE", " ", "**", "**", "**", "**", "**", "**", "**", "**", "**"}]}], 
   "*****)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"drawTangentPt", "[", 
   RowBox[{"aL_", ",", "aR_", ",", "tp_", ",", "disp_", ",", "\[Theta]_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pt", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "tp", "]"}], ",", 
        RowBox[{"Sin", "[", "tp", "]"}]}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"draw", " ", "the", " ", "tangent", " ", 
       RowBox[{"points", ".", " ", "Empty"}], " ", "circles", " ", "if", " ", 
       "not", " ", "in", " ", "originating", " ", "arc"}], ",", " ", 
      RowBox[{"filled", " ", "otherwise"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"isAngleInArc", "[", 
       RowBox[{"aL", ",", "aR", ",", "tp"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"drawDispArc", "[", 
         RowBox[{"tp", ",", "disp", ",", "\[Theta]"}], "]"}], ",", 
        RowBox[{"PointSize", "[", "Large", "]"}], ",", 
        RowBox[{"Point", "[", "pt", "]"}]}], " ", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Circle", "[", 
        RowBox[{"pt", ",", 
         RowBox[{"1", "/", "25"}]}], "]"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"drawMovementVectors", "[", 
   RowBox[{"pt_", ",", "\[Theta]_", ",", "disp_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Red", ",", " ", 
      RowBox[{"Disk", "[", 
       RowBox[{"pt", ",", 
        RowBox[{"1", "/", "5"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]", "-", "disp"}], ",", 
          RowBox[{"\[Theta]", "+", "disp"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "Black", ",", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<\[Delta]\>\"", ",", 
      RowBox[{"pt", "+", 
       RowBox[{
        RowBox[{"1", "/", "7"}], 
        RowBox[{"angleToPt", "[", 
         RowBox[{"\[Theta]", "+", 
          RowBox[{"disp", "/", "2"}]}], "]"}]}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<\[Delta]\>\"", ",", 
      RowBox[{"pt", "+", 
       RowBox[{
        RowBox[{"1", "/", "7"}], 
        RowBox[{"angleToPt", "[", 
         RowBox[{"\[Theta]", "-", 
          RowBox[{"disp", "/", "2"}]}], "]"}]}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", "Red", ",", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{"pt", ",", 
       RowBox[{"pt", "+", 
        RowBox[{
         RowBox[{"1", "/", "3"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}]}], "}"}], 
     "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"drawDispArc", "[", 
   RowBox[{"ptAng_", ",", "disp_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"aL", ",", "aR"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"aL", ",", "aR"}], "}"}], "=", 
      RowBox[{"angToDispArc", "[", 
       RowBox[{"ptAng", ",", "disp", ",", "\[Theta]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"(*", 
           RowBox[{
           "area", " ", "the", " ", "swarm", " ", "covers", " ", "as", " ", 
            "it", " ", "moves"}], "*)"}], 
          RowBox[{"Blue", ",", 
           RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"angleToPt", "[", "ptAng", "]"}], ",", "5", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Theta]", "-", "disp"}], ",", 
               RowBox[{"\[Theta]", "+", "disp"}]}], "}"}]}], "]"}]}], "}"}], 
         ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"arc", " ", "the", " ", "swarm", " ", "ends", " ", "on"}], 
         "*)"}], 
        RowBox[{"Orange", ",", "Thick", ",", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", ".98", ",", 
           RowBox[{"{", 
            RowBox[{"aR", ",", "aL"}], "}"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"left", " ", "end", " ", "point"}], "*)"}], 
        RowBox[{"Green", ",", 
         RowBox[{"Point", "[", 
          RowBox[{".98", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "aL", "]"}], ",", 
             RowBox[{"Sin", "[", "aL", "]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"right", " ", "end", " ", "point"}], "*)"}], 
        RowBox[{"Purple", ",", 
         RowBox[{"Point", "[", 
          RowBox[{".98", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "aR", "]"}], ",", 
             RowBox[{"Sin", "[", "aR", "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawCircleMask", "=", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
       "a", " ", "light", " ", "grey", " ", "square", " ", "with", " ", "a", 
        " ", "disk"}], "-", 
       RowBox[{
       "shaped", " ", "hole", " ", "with", " ", "red", " ", "edges"}]}], ",", 
      
      RowBox[{
      "creates", " ", "a", " ", "blank", " ", "spot", " ", "in", " ", 
       "middle", " ", "with", " ", "radius", " ", "1"}]}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{"LightGray", ",", 
       RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
       RowBox[{"FilledCurve", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Line", "[", 
            RowBox[{"2", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"BSplineCurve", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"SplineDegree", "\[Rule]", "2"}], ",", 
             RowBox[{"SplineKnots", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", 
                RowBox[{"1", "/", "4"}], ",", 
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"3", "/", "4"}], ",", "1", ",", "1", ",", "1"}], 
               "}"}]}], ",", 
             RowBox[{"SplineWeights", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "1", ",", ".5", ",", ".5", ",", "1", ",", ".5", ",", ".5", ",",
                 "1"}], "}"}]}]}], "]"}], "}"}]}], "}"}], "]"}]}], "}"}], 
     "*)"}], 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"Circle", "[", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"loc", "[", "col_", "]"}], ":=", 
   RowBox[{"(*", " ", 
    RowBox[{"a", " ", "colored", " ", "locator", " ", "icon"}], "*)"}], 
   RowBox[{"ToExpression", "@", 
    RowBox[{"GraphicsBox", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"col", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
          RowBox[{"Antialiasing", "\[Rule]", "False"}], ",", 
          RowBox[{"LineBox", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "10"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "10"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "10"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "0"}], "}"}]}], "}"}]}], "}"}], "]"}], ",", 
          RowBox[{"Antialiasing", "\[Rule]", "True"}], ",", 
          RowBox[{"CircleBox", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", "5"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
          RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
          RowBox[{"CircleBox", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", "3"}], "]"}]}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "17"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.712621853174754*^9, 3.712621858351997*^9}, 
   3.712650745824437*^9, {3.712650812576333*^9, 3.712650826779421*^9}, {
   3.712650983434211*^9, 3.7126510047674637`*^9}, {3.712651146606094*^9, 
   3.712651270696479*^9}, {3.7126513046530247`*^9, 3.712651348650093*^9}, 
   3.7126597293858223`*^9, 3.712659940359516*^9, {3.712659983161488*^9, 
   3.712660003000044*^9}, {3.7126601720171843`*^9, 3.712660204881214*^9}, {
   3.7126602403666058`*^9, 3.712660290398259*^9}, {3.712660351314295*^9, 
   3.71266035895474*^9}, {3.7126868718863573`*^9, 3.712686907891822*^9}, {
   3.712733803282465*^9, 3.7127338243561907`*^9}, {3.712733933736865*^9, 
   3.712733994304962*^9}, {3.7127344153329372`*^9, 3.7127345671408377`*^9}, {
   3.7127345995292892`*^9, 3.712734633687956*^9}, {3.712735084756461*^9, 
   3.7127351127723007`*^9}, {3.712735170664446*^9, 3.712735172919551*^9}, {
   3.712735204955105*^9, 3.71273529932549*^9}, {3.712735342684273*^9, 
   3.7127353446284103`*^9}, {3.712735416279395*^9, 3.712735467296404*^9}, {
   3.712735865820312*^9, 3.7127358906436234`*^9}, {3.7127359455844507`*^9, 
   3.7127359513739443`*^9}, {3.712736129941674*^9, 3.712736132292326*^9}, {
   3.712736872732031*^9, 3.712736877792124*^9}, {3.712736959748145*^9, 
   3.712737004236784*^9}, {3.7127372531712503`*^9, 3.7127372534488287`*^9}, {
   3.7127373031803102`*^9, 3.712737312644376*^9}, {3.7127383624149714`*^9, 
   3.712738376540913*^9}, {3.712738522964571*^9, 3.7127385928543367`*^9}, {
   3.7127388238935432`*^9, 3.712738872704702*^9}, {3.7127393898400497`*^9, 
   3.712739399672284*^9}, {3.712739539089566*^9, 3.712739725354026*^9}, {
   3.712739759411626*^9, 3.712740035068359*^9}, {3.7127400768491163`*^9, 
   3.712740163908307*^9}, {3.712740202085061*^9, 3.712740204818551*^9}, {
   3.712740243549749*^9, 3.712740278136116*^9}, 3.712740559183835*^9, {
   3.712740603737501*^9, 3.712740656910798*^9}, {3.712740917010624*^9, 
   3.7127409211229763`*^9}, {3.712741084981913*^9, 3.71274111633981*^9}, 
   3.712741163364451*^9, {3.712741214182919*^9, 3.7127412232743*^9}, {
   3.712741266865041*^9, 3.7127413035486107`*^9}, {3.7127413541908083`*^9, 
   3.712741355148679*^9}, {3.71274166530585*^9, 3.712741738014649*^9}, {
   3.712741858670355*^9, 3.712741872501082*^9}, {3.7127419142077427`*^9, 
   3.712741942776183*^9}, {3.7127419783260403`*^9, 3.7127419818629208`*^9}, {
   3.712742022984776*^9, 3.712742026040448*^9}, 3.712742057623505*^9, 
   3.712742106572197*^9, 3.712742287885231*^9, 3.712744325076044*^9, {
   3.712744540843858*^9, 3.712744544777207*^9}, {3.712744588080348*^9, 
   3.7127446022068787`*^9}, {3.71274483053629*^9, 3.712744845521636*^9}, {
   3.712744967908514*^9, 3.712745035940843*^9}, {3.712745077563458*^9, 
   3.71274508321929*^9}, {3.712745216880636*^9, 3.712745259346052*^9}, {
   3.712745294631652*^9, 3.712745327433535*^9}, {3.712745426458592*^9, 
   3.712745454831151*^9}, 3.712745491782112*^9, {3.712745766263397*^9, 
   3.712745776853806*^9}, {3.7127458456753073`*^9, 3.712745847410563*^9}, {
   3.712745897458902*^9, 3.7127459059498577`*^9}, {3.712746174590583*^9, 
   3.712746235611372*^9}, {3.712746334550112*^9, 3.712746403053541*^9}, 
   3.712754015268705*^9, {3.712754059541668*^9, 3.7127540658464823`*^9}, {
   3.712754323631556*^9, 3.712754338214858*^9}, {3.712754416377592*^9, 
   3.712754419545517*^9}, 3.712754498472455*^9, {3.7127549814283047`*^9, 
   3.712755024725423*^9}, {3.7127555973287582`*^9, 3.712755600991796*^9}, {
   3.712755830194263*^9, 3.7127558623859787`*^9}, {3.712756014037532*^9, 
   3.712756077831493*^9}, {3.712756140345491*^9, 3.7127561757560797`*^9}, 
   3.712756257156393*^9, {3.7127563604745207`*^9, 3.712756422187972*^9}, {
   3.71275648022023*^9, 3.712756481147134*^9}, {3.712756590420414*^9, 
   3.712756598058182*^9}, 3.712756650573962*^9, 3.712756715525979*^9, {
   3.712756774480654*^9, 3.7127567749517317`*^9}, {3.712756991664147*^9, 
   3.7127570054717407`*^9}, {3.7127570582044353`*^9, 
   3.7127571754820557`*^9}, {3.712757208629757*^9, 3.712757371134172*^9}, {
   3.712757466419517*^9, 3.7127575510347443`*^9}, {3.7132025188773136`*^9, 
   3.713202525789031*^9}, 3.713202563653131*^9, {3.7132027149263353`*^9, 
   3.7132027261610756`*^9}, {3.7132029340534925`*^9, 
   3.7132029372530107`*^9}, {3.7132067012582417`*^9, 3.713206718017827*^9}, {
   3.7132072695648594`*^9, 3.7132072701335897`*^9}, {3.7132088339653435`*^9, 
   3.7132088409051113`*^9}, {3.713210158453849*^9, 3.713210178243497*^9}},
 CellID->1697015281,ExpressionUUID->"57898fcb-d24f-4f39-9f56-daebe5cddfb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection",ExpressionUUID->"680265a2-4154-42a6-8394-1dd8a23b7be4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ptLAng", ",", "ptRAng", ",", "t1", ",", "t2", ",", "rA", ",", "lA", 
       ",", "lTable", ",", "rTable", ",", "totalTable", ",", "rInt", ",", 
       "lInt", ",", "totalInt"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "left", " ", "and", " ", "right", " ", "are", " ", "defined", " ", 
        "from", " ", "the", " ", "center", " ", "facing", " ", 
        RowBox[{"out", ".", "  ", "the"}], " ", "left"}], "  ", ">", "  ", 
       "right"}], "*)"}], "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"ptLAng", "=", 
       RowBox[{"ptToAng", "[", "ptLin", "]"}]}], ";", " ", 
      RowBox[{"ptRAng", "=", 
       RowBox[{"ptToAng", "[", "ptRin", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ptRAng", "=", 
         RowBox[{"ptRAng", "+", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ptRAng", "<", "0"}], ",", 
            RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ptLAng", "<", " ", "ptRAng"}], ",", 
        RowBox[{"ptLAng", "=", 
         RowBox[{"ptLAng", "+", 
          RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"enforce", " ", "left"}], "  ", ">", "  ", "right"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ptRAng", "<", 
         RowBox[{"ptLAng", "-", 
          RowBox[{"2", "\[Pi]"}]}]}], ",", 
        RowBox[{"ptRAng", "=", 
         RowBox[{"ptRAng", "+", 
          RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"t1", " ", "=", 
       RowBox[{"\[Theta]", "+", "disp", "+", 
        RowBox[{"\[Pi]", "/", "2"}]}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"tangent", " ", "points"}], ",", " ", 
        RowBox[{
        "where", " ", "arc", " ", "can", " ", "break", " ", "away", " ", 
         "from", " ", "edge", " ", 
         RowBox[{"(", 
          RowBox[{"no", " ", "particles", " ", "left"}], ")"}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"t2", " ", "=", 
       RowBox[{"\[Theta]", "-", "disp", "+", 
        RowBox[{"3", 
         RowBox[{"\[Pi]", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rA", ",", "lA"}], "}"}], "=", 
       RowBox[{"projMath", "[", 
        RowBox[{"ptLAng", ",", "ptRAng", ",", "disp", ",", "\[Theta]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Tables", " ", "for", " ", "discretized", " ", "points"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"lInt", "=", 
       RowBox[{"Interval", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"rA", ">", 
             RowBox[{"2", "\[Pi]"}]}], ",", 
            RowBox[{"Mod", "[", 
             RowBox[{"rA", ",", 
              RowBox[{"2", "\[Pi]"}]}], "]"}], ",", "rA"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"lA", "+", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"lA", "<", "rA"}], ",", 
                RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}], ">", 
             RowBox[{"2", "\[Pi]"}]}], ",", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"lA", "+", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"lA", "<", "rA"}], ",", 
                 RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}], ",", 
              RowBox[{"2", "\[Pi]"}]}], "]"}], ",", 
            RowBox[{"lA", "+", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"lA", "<", "rA"}], ",", 
               RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], "]"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rInt", "=", 
       RowBox[{"Interval", "[", 
        RowBox[{"{", 
         RowBox[{"ptRAng", ",", "ptLAng"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lTable", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.99", "*", 
            RowBox[{"N", "[", 
             RowBox[{"Cos", "[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"0.99", "*", 
            RowBox[{"N", "[", 
             RowBox[{"Sin", "[", "i", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{
            RowBox[{
            "lInt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
            RowBox[{
            "lInt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           "0.01"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rTable", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.99", "*", 
            RowBox[{"N", "[", 
             RowBox[{"Cos", "[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"0.99", "*", 
            RowBox[{"N", "[", 
             RowBox[{"Sin", "[", "i", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "ptRAng", ",", "ptLAng", ",", "0.01"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"totalTable", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"rTable", ",", "lTable"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"IntervalIntersection", "[", 
           RowBox[{"lInt", ",", "rInt"}], "]"}], "]"}], "\[Equal]", "0"}], 
        ",", ",", 
        RowBox[{
         RowBox[{"totalInt", "=", 
          RowBox[{"IntervalUnion", "[", 
           RowBox[{"rInt", ",", "lInt"}], "]"}]}], ";", 
         RowBox[{"totalTable", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0.99", "*", 
               RowBox[{"N", "[", 
                RowBox[{"Cos", "[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"0.99", "*", 
               RowBox[{"N", "[", 
                RowBox[{"Sin", "[", "i", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{
               RowBox[{
               "totalInt", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{
               "totalInt", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], ",", "0.01"}], "}"}]}], "]"}]}]}]}],
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "A", " ", "problem", " ", "arises", " ", "when", " ", "the", " ", 
        "two", " ", "starting", " ", "and", " ", "ending", " ", "arcs", " ", 
        RowBox[{"overlap", ".", " ", "The"}], " ", "union", " ", "allows", 
        " ", "us", " ", "to", " ", "get", " ", "the", " ", "best", " ", 
        "result"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"However", ",", " ", 
        RowBox[{
        "if", " ", "the", " ", "two", " ", "arcs", " ", "are", " ", "the", 
         " ", "same"}], ",", " ", 
        RowBox[{
        "we", " ", "should", " ", "have", " ", "no", " ", "polygon"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Coordinates", " ", "and", " ", "angles", " ", "get", " ", "mixed", 
         " ", "up", " ", "easily"}], ",", " ", 
        RowBox[{
        "the", " ", "interval", " ", "checks", " ", "angles", " ", "that", 
         " ", "need", " ", "to", " ", "be", " ", "adjusted", " ", "to", " ", 
         "get", " ", "the", " ", "right", " ", "points"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "The", " ", "only", " ", "major", " ", "flaw", " ", "is", " ", "when",
          " ", "the", " ", "angles", " ", "need", " ", "to", " ", "be", " ", 
         "negative", " ", "on", " ", "the", " ", "rA", " ", "and", " ", "lA", 
         " ", "calculations"}], ",", " ", 
        RowBox[{
        "the", " ", "union", " ", "of", " ", "the", " ", "angle", " ", 
         "intervals", " ", 
         RowBox[{"won", "'"}], "t", " ", "be", " ", "true", " ", "so", " ", 
         RowBox[{"it", "'"}], "ll", " ", "cover", " ", "the", " ", "whole", 
         " ", "region", " ", "very", " ", 
         RowBox[{"briefly", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Row", "[", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"drawDispArc", "[", 
                RowBox[{"a", ",", "disp", ",", "\[Theta]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "ptRAng", ",", "ptLAng", ",", 
                 FractionBox[
                  RowBox[{"ptLAng", "-", "ptRAng"}], 
                  RowBox[{"If", "[", 
                   RowBox[{"ShowPaths", ",", "10", ",", "1"}], "]"}]]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"draw", " ", "the", " ", "tangent", " ", 
                RowBox[{"points", ".", " ", "Empty"}], " ", "circles", " ", 
                "if", " ", "not", " ", "in", " ", "originating", " ", "arc"}],
                ",", " ", 
               RowBox[{"filled", " ", "otherwise"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"drawTangentPt", "[", 
              RowBox[{
              "ptLAng", ",", "ptRAng", ",", "t1", ",", "disp", ",", 
               "\[Theta]"}], "]"}], ",", 
             RowBox[{"drawTangentPt", "[", 
              RowBox[{
              "ptLAng", ",", "ptRAng", ",", "t2", ",", "disp", ",", 
               "\[Theta]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", "drawCircleMask", "*)"}], 
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"LightBlue", ",", 
               RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "lInt", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[Equal]", 
                  RowBox[{
                  "rInt", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ",", ",", 
                 RowBox[{"Polygon", "[", "totalTable", "]"}]}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"\"\<rA \>\"", "<>", 
                  RowBox[{"ToString", "[", "rA", "]"}], "<>", "\"\<\\n\>\"", 
                  "<>", "\"\<lA \>\"", "<>", 
                  RowBox[{"ToString", "[", "lA", "]"}], "<>", "\"\<\\n\>\"", 
                  "<>", "\"\<ptRAng \>\"", "<>", 
                  RowBox[{"ToString", "[", "ptRAng", "]"}], "<>", 
                  "\"\<\\n\>\"", "<>", "\"\<ptLAng \>\"", "<>", 
                  RowBox[{"ToString", "[", "ptLAng", "]"}], "<>", 
                  "\"\<\\n\>\"", "<>", 
                  RowBox[{"ToString", "[", "lInt", "]"}], "<>", "\"\<\\n\>\"",
                   "<>", 
                  RowBox[{"ToString", "[", "rInt", "]"}], "<>", "\"\<\\n\>\"",
                   "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{
                    RowBox[{
                    "lInt", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    RowBox[{
                    "rInt", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"draw", " ", "projection"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "\[IndentingNewLine]", 
               RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "1.04", ",", 
                 RowBox[{"{", 
                  RowBox[{"rA", ",", 
                   RowBox[{"lA", "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"lA", "<", "rA"}], ",", 
                    RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], "}"}]}], 
                "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "arc", " ", "the", " ", "swarm", " ", "starts", " ", "on"}], 
              "*)"}], "Green", ",", 
             RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "1.01", ",", 
               RowBox[{"{", 
                RowBox[{"ptLAng", ",", " ", "ptRAng"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"draw", " ", "movement", " ", "vectors"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"drawMovementVectors", "[", 
              RowBox[{
               RowBox[{"angleToPt", "[", "ptLAng", "]"}], ",", "\[Theta]", 
               ",", "disp"}], "]"}], ",", 
             RowBox[{"drawMovementVectors", "[", 
              RowBox[{
               RowBox[{"angleToPt", "[", "ptRAng", "]"}], ",", "\[Theta]", 
               ",", "disp"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Locator", "[", 
              RowBox[{
               RowBox[{"angleToPt", "[", "ptLAng", "]"}], ",", 
               RowBox[{"loc", "[", "Blue", "]"}]}], "]"}], ",", 
             RowBox[{"Locator", "[", 
              RowBox[{
               RowBox[{"angleToPt", "[", "ptRAng", "]"}], ",", 
               RowBox[{"loc", "[", "Red", "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"1.25", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"simprojection", "[", 
            RowBox[{"ptLAng", ",", "ptRAng", ",", "disp", ",", "\[Phi]"}], 
            "]"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"simprojection", "[", 
             RowBox[{
              RowBox[{"ptToAng", "[", "ptLin", "]"}], ",", 
              RowBox[{"ptToAng", "[", "ptRin", "]"}], ",", "disp", ",", 
              "\[Phi]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]", ",", 
             RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", " ", 
           RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", ".9"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[Pi]"}], "-", ".1"}], ",", 
                RowBox[{"\[Pi]", "+", ".1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".3"}], ",", 
                RowBox[{
                 RowBox[{"2", "\[Pi]"}], "+", ".2"}]}], "}"}]}], "}"}]}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Arc Length\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Prolog", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Green", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "\[Pi]"}], ",", 
                   RowBox[{"ptLAng", "-", "ptRAng"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Pi]", ",", 
                   RowBox[{"ptLAng", "-", "ptRAng"}]}], "}"}]}], "}"}], 
               "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Epilog", "\[Rule]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "[", "Blue", "]"}], ",", "Dashed", ",", 
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<Min\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{
                    RowBox[{"4", " ", "disp"}], "-", ".2"}]}], "}"}]}], "]"}],
                 ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], ",", 
                    RowBox[{"4", " ", "disp"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Pi]", ",", 
                    RowBox[{"4", " ", "disp"}]}], "}"}]}], "}"}], "]"}], ",", 
                
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<Max\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"\[Pi]", "+", 
                    RowBox[{"2", " ", "disp"}], "+", ".1"}]}], "}"}]}], "]"}],
                 ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], ",", 
                    RowBox[{"\[Pi]", "+", 
                    RowBox[{"2", " ", "disp"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Pi]", ",", 
                    RowBox[{"\[Pi]", "+", 
                    RowBox[{"2", " ", "disp"}]}]}], "}"}]}], "}"}], "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", "Red", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Theta]", ",", 
                   RowBox[{
                    RowBox[{"2", "\[Pi]"}], "-", ".2"}]}], "}"}]}], "}"}], 
               "]"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<\[Theta]\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"\[Theta]", ",", 
                  RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "}"}]}]}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"disp", ",", ".1", ",", "\"\<\[Delta]\>\""}], "}"}], ",", 
         "0", ",", 
         RowBox[{
          RowBox[{"\[Pi]", "/", "2"}], "-", "0.001"}], ",", ".001", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "240"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", 
           RowBox[{"-", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"-", "3.142"}], ",", "3.142", ",", ".001", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "240"}]}], "}"}]}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ptLin", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", ".3"}], "}"}]}], "}"}], ",", "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ptRin", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", ".3"}]}], "}"}]}], "}"}], ",", "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Propagate\>\"", ",", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"left", ",", "right", ",", "ptRAng", ",", "ptLAng"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ptLAng", "=", 
            RowBox[{"ptToAng", "[", "ptLin", "]"}]}], ";", 
           RowBox[{"ptRAng", "=", 
            RowBox[{"ptToAng", "[", "ptRin", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"ptLAng", "<", " ", "ptRAng"}], ",", 
             RowBox[{"ptLAng", "=", 
              RowBox[{"ptLAng", "+", 
               RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";", " ", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"enforce", " ", "left"}], "  ", ">", "  ", "right"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ptRAng", "<", 
              RowBox[{"ptLAng", "-", 
               RowBox[{"2", "\[Pi]"}]}]}], ",", 
             RowBox[{"ptRAng", "=", 
              RowBox[{"ptRAng", "+", 
               RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"right", ",", "left"}], "}"}], "=", 
            RowBox[{"projMath", "[", 
             RowBox[{"ptLAng", ",", "ptRAng", ",", "disp", ",", "\[Theta]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"ptLin", "=", 
            RowBox[{"angleToPt", "[", "left", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ptRin", "=", 
            RowBox[{"angleToPt", "[", "right", "]"}]}]}]}], "]"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ShowPaths", ",", "False", ",", "\"\<Show Paths\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.712757376174015*^9, {3.712757694859412*^9, 3.7127578218580112`*^9}, {
   3.7131448260628505`*^9, 3.713144871547446*^9}, {3.713145152111251*^9, 
   3.713145213862577*^9}, {3.7131453034062753`*^9, 3.7131453597336645`*^9}, {
   3.7131454223870535`*^9, 3.713145449309023*^9}, {3.7131455550546*^9, 
   3.7131455697007227`*^9}, {3.713145620161696*^9, 3.7131456248489904`*^9}, {
   3.7132024429282312`*^9, 3.7132024432286663`*^9}, {3.7132024997580614`*^9, 
   3.7132025038802533`*^9}, 3.71320254637262*^9, {3.7132025854148912`*^9, 
   3.7132026122299547`*^9}, {3.7132066693475633`*^9, 3.713206671671461*^9}, {
   3.7132068695564404`*^9, 3.713206872524453*^9}, {3.713206937797472*^9, 
   3.7132069550393744`*^9}, {3.7132076809318185`*^9, 
   3.7132076962044935`*^9}, {3.7132088561292906`*^9, 3.713209018914744*^9}, {
   3.7132091490488625`*^9, 3.7132091562070932`*^9}, 3.713210113076535*^9, 
   3.7132101910766563`*^9, {3.7132205278215275`*^9, 3.7132207098254933`*^9}, {
   3.713220754448948*^9, 3.7132209217119102`*^9}, {3.7132211834929757`*^9, 
   3.7132212060326223`*^9}, 3.7132213002055917`*^9, {3.713221334086244*^9, 
   3.7132213632533617`*^9}, {3.7132214145746627`*^9, 
   3.7132214193999877`*^9}, {3.7132214970784845`*^9, 3.713221512263488*^9}, {
   3.713221570987275*^9, 3.7132215924614863`*^9}, {3.713221853419064*^9, 
   3.713221864650422*^9}, {3.7132221215219965`*^9, 3.713222135107009*^9}, {
   3.7132224281683407`*^9, 3.713222479426408*^9}, {3.7132225258916907`*^9, 
   3.7132225921028347`*^9}, {3.7132226254298983`*^9, 3.713222730316897*^9}, {
   3.71322340275235*^9, 3.7132234179382753`*^9}, {3.713223527369141*^9, 
   3.7132236369114285`*^9}, {3.713224038948698*^9, 3.7132240899009223`*^9}, {
   3.7132248163482513`*^9, 3.7132248241448402`*^9}, {3.7132249005012293`*^9, 
   3.7132249447647667`*^9}, {3.7132250605192766`*^9, 3.713225092831437*^9}, {
   3.713225186254548*^9, 3.713225266951085*^9}, {3.713225501002324*^9, 
   3.713225543196726*^9}},ExpressionUUID->"85bec0b2-2d91-424a-b183-\
ffb448604810"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`disp$$ = 0.1, $CellContext`ptLin$$ = {
    0.6719999999999999, 0.8250000000000002}, $CellContext`ptRin$$ = {0.988, 
    0.03499999999999992}, $CellContext`ShowPaths$$ = 
    False, $CellContext`\[Theta]$$ = -2.359, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`disp$$], 0.1, "\[Delta]"}, 0, 1.5697963267948967`, 
      0.001}, {{
       Hold[$CellContext`\[Theta]$$], -Pi}, -3.142, 3.142, 0.001}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ptLin$$], {1, 0.3}}, Automatic}, {{
       Hold[$CellContext`ptRin$$], {1, -0.3}}, Automatic}, {{
       Hold[$CellContext`ShowPaths$$], False, "Show Paths"}, {True, False}}, {
     
      Hold[
       Row[{
         Button["Propagate", 
          
          Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
           While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
           If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
              Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
              2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {900., {221., 229.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`disp$1746066$$ = 0, $CellContext`\[Theta]$1746067$$ = 
    0, $CellContext`ShowPaths$1746068$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`disp$$ = 
        0.1, $CellContext`ptLin$$ = {1, 0.3}, $CellContext`ptRin$$ = {
         1, -0.3}, $CellContext`ShowPaths$$ = 
        False, $CellContext`\[Theta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`disp$$, $CellContext`disp$1746066$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$1746067$$, 0], 
        Hold[$CellContext`ShowPaths$$, $CellContext`ShowPaths$1746068$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`ptLAng$, $CellContext`ptRAng$, $CellContext`t1$, \
$CellContext`t2$, $CellContext`rA$, $CellContext`lA$, $CellContext`lTable$, \
$CellContext`rTable$, $CellContext`totalTable$, $CellContext`rInt$, \
$CellContext`lInt$, $CellContext`totalInt$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
        If[$CellContext`ptLAng$ < $CellContext`ptRAng$, $CellContext`ptLAng$ = \
$CellContext`ptLAng$ + 2 Pi]; 
        If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
           Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
           2 Pi]; $CellContext`t1$ = $CellContext`\[Theta]$$ + \
$CellContext`disp$$ + 
          Pi/2; $CellContext`t2$ = $CellContext`\[Theta]$$ - \
$CellContext`disp$$ + 
          3 (Pi/2); {$CellContext`rA$, $CellContext`lA$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`lInt$ = 
         Interval[{
            If[$CellContext`rA$ > 2 Pi, 
             Mod[$CellContext`rA$, 2 Pi], $CellContext`rA$], 
            
            If[$CellContext`lA$ + 
              If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0] > 2 Pi, 
             
             Mod[$CellContext`lA$ + 
              If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0], 2 
              Pi], $CellContext`lA$ + 
             If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 
               0]]}]; $CellContext`rInt$ = 
         Interval[{$CellContext`ptRAng$, $CellContext`ptLAng$}]; \
$CellContext`lTable$ = Table[{0.99 N[
              Cos[$CellContext`i]], 0.99 N[
              Sin[$CellContext`i]]}, {$CellContext`i, 
            Part[
             Part[$CellContext`lInt$, 1], 1], 
            Part[
             Part[$CellContext`lInt$, 1], 2], 0.01}]; $CellContext`rTable$ = 
         Table[{0.99 N[
              Cos[$CellContext`i]], 0.99 N[
              
              Sin[$CellContext`i]]}, {$CellContext`i, $CellContext`ptRAng$, \
$CellContext`ptLAng$, 0.01}]; $CellContext`totalTable$ = 
         Join[$CellContext`rTable$, $CellContext`lTable$]; If[Length[
            IntervalIntersection[$CellContext`lInt$, $CellContext`rInt$]] == 
          0, Null, $CellContext`totalInt$ = 
           IntervalUnion[$CellContext`rInt$, $CellContext`lInt$]; \
$CellContext`totalTable$ = Table[{0.99 N[
                Cos[$CellContext`i]], 0.99 N[
                Sin[$CellContext`i]]}, {$CellContext`i, 
              Part[
               Part[$CellContext`totalInt$, 1], 1], 
              Part[
               Part[$CellContext`totalInt$, 1], 2], 0.01}]]; Row[{
           Graphics[{
             Table[
              $CellContext`drawDispArc[$CellContext`a, $CellContext`disp$$, \
$CellContext`\[Theta]$$], {$CellContext`a, $CellContext`ptRAng$, \
$CellContext`ptLAng$, ($CellContext`ptLAng$ - $CellContext`ptRAng$)/
               If[$CellContext`ShowPaths$$, 10, 1]}], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t1$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t2$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], {Red, 
              Circle[]}, {LightBlue, 
              Opacity[0.5], 
              If[
              Part[$CellContext`lInt$, 1] == Part[$CellContext`rInt$, 1], 
               Null, 
               Polygon[$CellContext`totalTable$]]}, {Black, 
              Text[
               StringJoin["rA ", 
                ToString[$CellContext`rA$], "\n", "lA ", 
                ToString[$CellContext`lA$], "\n", "ptRAng ", 
                ToString[$CellContext`ptRAng$], "\n", "ptLAng ", 
                ToString[$CellContext`ptLAng$], "\n", 
                ToString[$CellContext`lInt$], "\n", 
                ToString[$CellContext`rInt$], "\n", 
                ToString[
                Part[$CellContext`lInt$, 1] == 
                 Part[$CellContext`rInt$, 1]]], {0, 0}]}, {Blue, 
              Thickness[0.02], 
              
              Circle[{0, 0}, 
               1.04, {$CellContext`rA$, $CellContext`lA$ + 
                If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0]}]}, Green, 
             Thickness[0.01], 
             
             Circle[{0, 0}, 
              1.01, {$CellContext`ptLAng$, $CellContext`ptRAng$}], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptLAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptRAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptLAng$], 
              $CellContext`loc[Blue]], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptRAng$], 
              $CellContext`loc[Red]]}, PlotRange -> 1.25 {{-1, 1}, {-1, 1}}, 
            ImageSize -> 300], 
           Plot[
            $CellContext`simprojection[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`disp$$, $CellContext`\[Phi]], \
{$CellContext`\[Phi], -Pi, Pi}, PlotStyle -> Blue, ImageSize -> 300, 
            AspectRatio -> 0.9, 
            PlotRange -> {{-Pi - 0.1, Pi + 0.1}, {-0.3, 2 Pi + 0.2}}, 
            PlotLabel -> "Arc Length", Prolog -> {Green, 
              
              Line[{{-Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}, {
                Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}}]}, 
            Epilog -> {{
               Darker[Blue], Dashed, 
               Text["Min", {-3, 4 $CellContext`disp$$ - 0.2}], 
               
               Line[{{-Pi, 4 $CellContext`disp$$}, {
                 Pi, 4 $CellContext`disp$$}}], 
               Text["Max", {-3, Pi + 2 $CellContext`disp$$ + 0.1}], 
               
               Line[{{-Pi, Pi + 2 $CellContext`disp$$}, {
                 Pi, Pi + 2 $CellContext`disp$$}}]}, Red, 
              
              Line[{{$CellContext`\[Theta]$$, 0}, {$CellContext`\[Theta]$$, 
                 2 Pi - 0.2}}], 
              Text["\[Theta]", {$CellContext`\[Theta]$$, 2 Pi}]}]}]], 
      "Specifications" :> {{{$CellContext`disp$$, 0.1, "\[Delta]"}, 0, 
         1.5697963267948967`, 0.001, Appearance -> "Labeled", ImageSize -> 
         240, ControlPlacement -> 1}, {{$CellContext`\[Theta]$$, -Pi}, -3.142,
          3.142, 0.001, Appearance -> "Labeled", ImageSize -> 240, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`ptLin$$, {1, 0.3}}, Automatic,
          ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ptRin$$, {1, -0.3}}, Automatic, ControlType -> 
         Locator, Appearance -> 
         None}, {{$CellContext`ShowPaths$$, False, "Show Paths"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Button["Propagate", 
           
           Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
            While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
            If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
               Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
               2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
          Manipulate`Place[3]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{989., {311., 319.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ptToAng[
         Pattern[$CellContext`ptin, 
          Blank[]]] := 
       Module[{$CellContext`pt}, $CellContext`pt = 
          If[Norm[$CellContext`ptin] > 0, $CellContext`ptin/
            Norm[$CellContext`ptin], {1, 0}]; ArcTan[
           Part[$CellContext`pt, 1], 
           Part[$CellContext`pt, 2]]], $CellContext`projMath[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aLhL, $CellContext`aLhR, $CellContext`aRhL, \
$CellContext`aRhR, $CellContext`t1, $CellContext`t2, $CellContext`rA, \
$CellContext`lA}, 
         Quiet[{$CellContext`aLhL, $CellContext`aLhR} = \
$CellContext`angToDispArc[$CellContext`ptLAng, $CellContext`disp, \
$CellContext`\[Theta]]]; 
         Quiet[{$CellContext`aRhL, $CellContext`aRhR} = \
$CellContext`angToDispArc[$CellContext`ptRAng, $CellContext`disp, \
$CellContext`\[Theta]]]; If[
           And[
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhL], 
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhR]], $CellContext`rA = $CellContext`aRhR; $CellContext`lA = \
$CellContext`aRhL, 
           If[
            And[
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhL], 
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhR]], $CellContext`rA = $CellContext`aLhR; $CellContext`lA = \
$CellContext`aLhL, 
            If[
             And[
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhL], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhL]], $CellContext`rA = $CellContext`aRhR; \
$CellContext`lA = $CellContext`aLhL, $CellContext`rA = $CellContext`aLhR; \
$CellContext`lA = $CellContext`aRhL]]]; $CellContext`t1 = $CellContext`\
\[Theta] + $CellContext`disp + 
           Pi/2; $CellContext`t2 = $CellContext`\[Theta] - $CellContext`disp + 
           3 (Pi/2); $CellContext`rA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t2], $CellContext`t2, $CellContext`rA]; \
$CellContext`lA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t1], $CellContext`t1, $CellContext`lA]; \
$CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA > 2 Pi + $CellContext`rA, (-2) Pi, 
             0]; {$CellContext`rA, $CellContext`lA}], \
$CellContext`angToDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`\[Beta]L, $CellContext`\[Beta]R, $CellContext`aL, \
$CellContext`aR}, $CellContext`\[Beta]L = $CellContext`\[Theta] + \
$CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]L = $CellContext`\
\[Beta]L + If[$CellContext`\[Beta]L > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]L < -Pi, 2 Pi, 0]; $CellContext`aL = 
          If[Abs[$CellContext`\[Beta]L] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng - (Pi - 
            2 $CellContext`\[Beta]L)]; $CellContext`\[Beta]R = $CellContext`\
\[Theta] - $CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]R = $CellContext`\
\[Beta]R + If[$CellContext`\[Beta]R > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]R < -Pi, 2 Pi, 0]; $CellContext`aR = 
          If[Abs[$CellContext`\[Beta]R] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng + (Pi + 
             2 $CellContext`\[Beta]R)]; $CellContext`aR = $CellContext`aR + 
           If[$CellContext`aR > $CellContext`aL, (-2) Pi, 0]; If[
           
           Or[$CellContext`aR < -Pi, $CellContext`aL < -
             Pi], $CellContext`aR = $CellContext`aR + 
             2 Pi; $CellContext`aL = $CellContext`aL + 2 Pi]; 
         Return[{$CellContext`aL, $CellContext`aR}]], \
$CellContext`isAngleInArc[
         Pattern[$CellContext`aLin, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`\[Epsilon] = 
          0.001}, $CellContext`aL = $CellContext`aLin + 
           If[$CellContext`aLin < $CellContext`aR, 2 Pi, 0]; 
         Or[$CellContext`aR - $CellContext`\[Epsilon] <= \
$CellContext`\[Alpha] <= $CellContext`aL + $CellContext`\[Epsilon], \
$CellContext`aR - $CellContext`\[Epsilon] <= $CellContext`\[Alpha] - 2 
            Pi <= $CellContext`aL + $CellContext`\[Epsilon], $CellContext`aR - \
$CellContext`\[Epsilon] <= $CellContext`\[Alpha] + 
            2 Pi <= $CellContext`aL + $CellContext`\[Epsilon]]], \
$CellContext`drawDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`aR}, {$CellContext`aL, \
$CellContext`aR} = $CellContext`angToDispArc[$CellContext`ptAng, \
$CellContext`disp, $CellContext`\[Theta]]; {
           PointSize[Large], {Orange, Thick, 
            Circle[{0, 0}, 0.98, {$CellContext`aR, $CellContext`aL}]}, {Green, 
            Point[0.98 {
               Cos[$CellContext`aL], 
               Sin[$CellContext`aL]}]}, {Purple, 
            Point[0.98 {
               Cos[$CellContext`aR], 
               Sin[$CellContext`aR]}]}}], $CellContext`drawTangentPt[
         Pattern[$CellContext`aL, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`tp, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := Module[{$CellContext`pt = {
            Cos[$CellContext`tp], 
            Sin[$CellContext`tp]}}, 
         If[
          $CellContext`isAngleInArc[$CellContext`aL, $CellContext`aR, \
$CellContext`tp], {
           $CellContext`drawDispArc[$CellContext`tp, $CellContext`disp, \
$CellContext`\[Theta]], 
           PointSize[Large], 
           Point[$CellContext`pt]}, {
           Circle[$CellContext`pt, 1/25]}]], $CellContext`drawMovementVectors[
        
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]]] := {{
          Opacity[0.5], Red, 
          
          Disk[$CellContext`pt, 1/
           5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, Black, 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            
            7) $CellContext`angleToPt[$CellContext`\[Theta] + \
$CellContext`disp/2]], 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] - \
$CellContext`disp/2]], Red, 
         Arrow[{$CellContext`pt, $CellContext`pt + (1/3) {
              Cos[$CellContext`\[Theta]], 
              Sin[$CellContext`\[Theta]]}}]}, $CellContext`angleToPt[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {
         Cos[$CellContext`\[Theta]], 
         Sin[$CellContext`\[Theta]]}, $CellContext`loc[
         Pattern[$CellContext`col, 
          Blank[]]] := ToExpression[
         GraphicsBox[{$CellContext`col, {
            AbsoluteThickness[1], Antialiasing -> False, 
            
            LineBox[{{{0, -10}, {0, -2}}, {{0, 2}, {0, 10}}, {{-10, 0}, {-2, 
             0}}, {{2, 0}, {10, 0}}}], Antialiasing -> True, 
            CircleBox[{-0.5, 0.5}, 5]}, {
            AbsoluteThickness[3], 
            Opacity[0.3], 
            CircleBox[{-0.5, 0.5}, 3]}}, ImageSize -> 17, 
          PlotRange -> {{-8, 8}, {-8, 8}}]], $CellContext`simprojection[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAngIn, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`rA, $CellContext`lA}, {$CellContext`rA, \
$CellContext`lA} = $CellContext`projMath[$CellContext`ptLAng, \
$CellContext`ptRAngIn, $CellContext`disp, $CellContext`\[Theta]]; Null]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.713223603184589*^9, 3.7132236377282743`*^9, 
  3.7132240919247956`*^9, 3.7132248246988077`*^9, 3.7132250967367535`*^9, 
  3.713225268437781*^9},
 CellID->205727611,ExpressionUUID->"05575ac2-996e-4051-8fb3-b476543f824d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection",ExpressionUUID->"24dc8994-46f5-44f1-aa81-e4b6eaf09cb1"],

Cell[TextData[{
 "This Demonstration examines pushing particles inside a disc workspace, \
perhaps magnetized particles inside a Petri dish pushed by an external \
magnetic field. The particles start along the green arc, bounded by red and \
blue locators. When ",
 StyleBox["propagated",
  FontSlant->"Italic"],
 ", particles are pushed in the direction \[Theta] and end up along the arc \
drawn in blue. Often particles cannot be controlled perfectly, which is \
modelled by movement \[PlusMinus]\[Delta] to either side of \[Theta]. This \
demonstration shows the maxmimum and minimum particle spread (arc length) to \
which the particles can be manipulated."
}], "ManipulateCaption",
 CellChangeTimes->{{3.712757869861171*^9, 3.712758175850383*^9}, {
  3.7127582640297527`*^9, 
  3.712758276092718*^9}},ExpressionUUID->"07ae0970-96c8-4b6e-b9bd-\
874028bc60c4"]
}, Open  ]],

Cell["", "ThumbnailSection",ExpressionUUID->"7164f042-3d4f-4fea-b813-686c8e1d413a"],

Cell[CellGroupData[{

Cell["", "SnapshotsSection",ExpressionUUID->"de376d82-a2ce-40c5-ae9e-798a05450000"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`disp$$ = 0.075, $CellContext`ptLin$$ = {
    1, 0.3}, $CellContext`ptRin$$ = {
    0.9159999999999999, -0.58}, $CellContext`ShowPaths$$ = 
    True, $CellContext`\[Theta]$$ = 2.8160000000000003`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`disp$$], 0.1, "\[Delta]"}, 0, 1.5697963267948967`, 
      0.001}, {{
       Hold[$CellContext`\[Theta]$$], -Pi}, -3.142, 3.142, 0.001}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ptLin$$], {1, 0.3}}, Automatic}, {{
       Hold[$CellContext`ptRin$$], {1, -0.3}}, Automatic}, {{
       Hold[$CellContext`ShowPaths$$], False, "Show Paths"}, {True, False}}, {
     
      Hold[
       Row[{
         Button["Propagate", 
          
          Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
           While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
           If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
              Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
              2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {900., {221., 229.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`disp$10365364$$ = 
    0, $CellContext`\[Theta]$10365365$$ = 
    0, $CellContext`ShowPaths$10365366$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`disp$$ = 
        0.1, $CellContext`ptLin$$ = {1, 0.3}, $CellContext`ptRin$$ = {
         1, -0.3}, $CellContext`ShowPaths$$ = 
        False, $CellContext`\[Theta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`disp$$, $CellContext`disp$10365364$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$10365365$$, 0], 
        Hold[$CellContext`ShowPaths$$, $CellContext`ShowPaths$10365366$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`ptLAng$, $CellContext`ptRAng$, $CellContext`t1$, \
$CellContext`t2$, $CellContext`rA$, $CellContext`lA$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
        While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
        If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
           Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
           2 Pi]; $CellContext`t1$ = $CellContext`\[Theta]$$ + \
$CellContext`disp$$ + 
          Pi/2; $CellContext`t2$ = $CellContext`\[Theta]$$ - \
$CellContext`disp$$ + 
          3 (Pi/2); {$CellContext`rA$, $CellContext`lA$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; Row[{
           Graphics[{
             Table[
              $CellContext`drawDispArc[$CellContext`a, $CellContext`disp$$, \
$CellContext`\[Theta]$$], {$CellContext`a, $CellContext`ptRAng$, \
$CellContext`ptLAng$, ($CellContext`ptLAng$ - $CellContext`ptRAng$)/
               If[$CellContext`ShowPaths$$, 10, 1]}], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t1$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t2$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], $CellContext`drawCircleMask, {Blue, 
              Thickness[0.02], 
              
              Circle[{0, 0}, 
               1.04, {$CellContext`rA$, $CellContext`lA$ + 
                If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0]}]}, Green, 
             Thickness[0.01], 
             
             Circle[{0, 0}, 
              1.01, {$CellContext`ptLAng$, $CellContext`ptRAng$}], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptLAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptRAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptLAng$], 
              $CellContext`loc[Blue]], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptRAng$], 
              $CellContext`loc[Red]]}, PlotRange -> 1.25 {{-1, 1}, {-1, 1}}, 
            ImageSize -> 300], 
           Plot[
            $CellContext`simprojection[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`disp$$, $CellContext`\[Phi]], \
{$CellContext`\[Phi], -Pi, Pi}, PlotStyle -> Blue, ImageSize -> 300, 
            AspectRatio -> 0.9, 
            PlotRange -> {{-Pi - 0.1, Pi + 0.1}, {-0.3, 2 Pi + 0.2}}, 
            PlotLabel -> "Arc Length", Prolog -> {Green, 
              
              Line[{{-Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}, {
                Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}}]}, 
            Epilog -> {{
               Darker[Blue], Dashed, 
               Text["Min", {-3, 4 $CellContext`disp$$ - 0.2}], 
               Line[{{-Pi, 4 $CellContext`disp$$}, {
                 Pi, 4 $CellContext`disp$$}}], 
               Text["Max", {-3, Pi + 2 $CellContext`disp$$ + 0.1}], 
               
               Line[{{-Pi, Pi + 2 $CellContext`disp$$}, {
                 Pi, Pi + 2 $CellContext`disp$$}}]}, Red, 
              
              Line[{{$CellContext`\[Theta]$$, 0}, {$CellContext`\[Theta]$$, 
                 2 Pi - 0.2}}], 
              Text["\[Theta]", {$CellContext`\[Theta]$$, 2 Pi}]}]}]], 
      "Specifications" :> {{{$CellContext`disp$$, 0.1, "\[Delta]"}, 0, 
         1.5697963267948967`, 0.001, Appearance -> "Labeled", ImageSize -> 
         240, ControlPlacement -> 1}, {{$CellContext`\[Theta]$$, -Pi}, -3.142,
          3.142, 0.001, Appearance -> "Labeled", ImageSize -> 240, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`ptLin$$, {1, 0.3}}, Automatic,
          ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ptRin$$, {1, -0.3}}, Automatic, ControlType -> 
         Locator, Appearance -> 
         None}, {{$CellContext`ShowPaths$$, False, "Show Paths"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Button["Propagate", 
           
           Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
            While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
            If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
               Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
               2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
          Manipulate`Place[3]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{989., {311., 319.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ptToAng[
         Pattern[$CellContext`ptin, 
          Blank[]]] := 
       Module[{$CellContext`pt}, $CellContext`pt = 
          If[Norm[$CellContext`ptin] > 0, $CellContext`ptin/
            Norm[$CellContext`ptin], {1, 0}]; ArcTan[
           Part[$CellContext`pt, 1], 
           Part[$CellContext`pt, 2]]], $CellContext`projMath[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aLhL, $CellContext`aLhR, $CellContext`aRhL, \
$CellContext`aRhR, $CellContext`t1, $CellContext`t2, $CellContext`rA, \
$CellContext`lA}, {$CellContext`aLhL, $CellContext`aLhR} = \
$CellContext`angToDispArc[$CellContext`ptLAng, $CellContext`disp, \
$CellContext`\[Theta]]; {$CellContext`aRhL, $CellContext`aRhR} = \
$CellContext`angToDispArc[$CellContext`ptRAng, $CellContext`disp, \
$CellContext`\[Theta]]; If[
           And[
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhL], 
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhR]], $CellContext`rA = $CellContext`aRhR; $CellContext`lA = \
$CellContext`aRhL, 
           If[
            And[
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhL], 
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhR]], $CellContext`rA = $CellContext`aLhR; $CellContext`lA = \
$CellContext`aLhL, 
            If[
             And[
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhL], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhL]], $CellContext`rA = $CellContext`aRhR; \
$CellContext`lA = $CellContext`aLhL, $CellContext`rA = $CellContext`aLhR; \
$CellContext`lA = $CellContext`aRhL]]]; $CellContext`t1 = $CellContext`\
\[Theta] + $CellContext`disp + 
           Pi/2; $CellContext`t2 = $CellContext`\[Theta] - $CellContext`disp + 
           3 (Pi/2); $CellContext`rA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t2], $CellContext`t2, $CellContext`rA]; \
$CellContext`lA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t1], $CellContext`t1, $CellContext`lA]; \
$CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA > 2 Pi + $CellContext`rA, (-2) Pi, 
             0]; {$CellContext`rA, $CellContext`lA}], \
$CellContext`angToDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`\[Beta]L, $CellContext`\[Beta]R, $CellContext`aL, \
$CellContext`aR}, $CellContext`\[Beta]L = $CellContext`\[Theta] + \
$CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]L = $CellContext`\
\[Beta]L + If[$CellContext`\[Beta]L > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]L < -Pi, 2 Pi, 0]; $CellContext`aL = 
          If[Abs[$CellContext`\[Beta]L] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng - (Pi - 
            2 $CellContext`\[Beta]L)]; $CellContext`\[Beta]R = $CellContext`\
\[Theta] - $CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]R = $CellContext`\
\[Beta]R + If[$CellContext`\[Beta]R > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]R < -Pi, 2 Pi, 0]; $CellContext`aR = 
          If[Abs[$CellContext`\[Beta]R] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng + (Pi + 
             2 $CellContext`\[Beta]R)]; $CellContext`aR = $CellContext`aR + 
           If[$CellContext`aR > $CellContext`aL, (-2) Pi, 0]; If[
           
           Or[$CellContext`aR < -Pi, $CellContext`aL < -
             Pi], $CellContext`aR = $CellContext`aR + 
             2 Pi; $CellContext`aL = $CellContext`aL + 2 Pi]; 
         Return[{$CellContext`aL, $CellContext`aR}]], \
$CellContext`isAngleInArc[
         Pattern[$CellContext`aLin, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`\[Epsilon] = 
          0.001}, $CellContext`aL = $CellContext`aLin + 
           If[$CellContext`aLin < $CellContext`aR, 2 Pi, 0]; 
         Or[$CellContext`aR - $CellContext`\[Epsilon] <= \
$CellContext`\[Alpha] <= $CellContext`aL + $CellContext`\[Epsilon], \
$CellContext`aR - $CellContext`\[Epsilon] <= $CellContext`\[Alpha] - 2 
            Pi <= $CellContext`aL + $CellContext`\[Epsilon], $CellContext`aR - \
$CellContext`\[Epsilon] <= $CellContext`\[Alpha] + 
            2 Pi <= $CellContext`aL + $CellContext`\[Epsilon]]], \
$CellContext`drawDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`aR}, {$CellContext`aL, \
$CellContext`aR} = $CellContext`angToDispArc[$CellContext`ptAng, \
$CellContext`disp, $CellContext`\[Theta]]; {
           PointSize[Large], {Blue, 
            Opacity[0.3], 
            Disk[
             $CellContext`angleToPt[$CellContext`ptAng], 
             5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, {Orange, Thick, 
            Circle[{0, 0}, 0.98, {$CellContext`aR, $CellContext`aL}]}, {Green, 
            Point[0.98 {
               Cos[$CellContext`aL], 
               Sin[$CellContext`aL]}]}, {Purple, 
            Point[0.98 {
               Cos[$CellContext`aR], 
               Sin[$CellContext`aR]}]}}], $CellContext`angleToPt[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {
         Cos[$CellContext`\[Theta]], 
         Sin[$CellContext`\[Theta]]}, $CellContext`drawTangentPt[
         Pattern[$CellContext`aL, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`tp, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := Module[{$CellContext`pt = {
            Cos[$CellContext`tp], 
            Sin[$CellContext`tp]}}, 
         If[
          $CellContext`isAngleInArc[$CellContext`aL, $CellContext`aR, \
$CellContext`tp], {
           $CellContext`drawDispArc[$CellContext`tp, $CellContext`disp, \
$CellContext`\[Theta]], 
           PointSize[Large], 
           Point[$CellContext`pt]}, {
           Circle[$CellContext`pt, 1/50]}]], $CellContext`drawCircleMask = {
         GrayLevel[0.85], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         FilledCurve[{{
            Line[{{2, -2}, {2, 2}, {-2, 2}, {-2, -2}}]}, {
            
            BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, SplineDegree -> 2, 
             SplineKnots -> {0, 0, 0, 1/4, 1/2, 1/2, 3/4, 1, 1, 1}, 
             SplineWeights -> {
              1, 0.5, 0.5, 1, 0.5, 0.5, 
               1}]}}]}, $CellContext`drawMovementVectors[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]]] := {{
          Opacity[0.5], Red, 
          
          Disk[$CellContext`pt, 1/
           5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, Black, 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] + \
$CellContext`disp/2]], 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] - \
$CellContext`disp/2]], Red, 
         Arrow[{$CellContext`pt, $CellContext`pt + (1/3) {
              Cos[$CellContext`\[Theta]], 
              Sin[$CellContext`\[Theta]]}}]}, $CellContext`loc[
         Pattern[$CellContext`col, 
          Blank[]]] := ToExpression[
         GraphicsBox[{$CellContext`col, {
            AbsoluteThickness[1], Antialiasing -> False, 
            
            LineBox[{{{0, -10}, {0, -2}}, {{0, 2}, {0, 10}}, {{-10, 0}, {-2, 
             0}}, {{2, 0}, {10, 0}}}], Antialiasing -> True, 
            CircleBox[{-0.5, 0.5}, 5]}, {
            AbsoluteThickness[3], 
            Opacity[0.3], 
            CircleBox[{-0.5, 0.5}, 3]}}, ImageSize -> 17, 
          PlotRange -> {{-8, 8}, {-8, 8}}]], $CellContext`simprojection[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAngIn, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`rA, $CellContext`lA}, {$CellContext`rA, \
$CellContext`lA} = $CellContext`projMath[$CellContext`ptLAng, \
$CellContext`ptRAngIn, $CellContext`disp, $CellContext`\[Theta]]; \
$CellContext`lA - $CellContext`rA]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7127573774344587`*^9, 3.7127575301512136`*^9, {3.7127576971241903`*^9, 
   3.7127577608106747`*^9}, {3.712757803665715*^9, 3.7127578224929247`*^9}},
 CellID->1483989157,ExpressionUUID->"823ab04e-d7f3-40c1-9ac6-52e893dae1a1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`disp$$ = 
    0.075, $CellContext`ptLin$$ = {-0.9979984767915432, \
-0.06323796582559867}, $CellContext`ptRin$$ = {0.8359999999999999, 
    0.32200000000000006`}, $CellContext`ShowPaths$$ = 
    True, $CellContext`\[Theta]$$ = -0.33899999999999997`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`disp$$], 0.1, "\[Delta]"}, 0, 1.5697963267948967`, 
      0.001}, {{
       Hold[$CellContext`\[Theta]$$], -Pi}, -3.142, 3.142, 0.001}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ptLin$$], {1, 0.3}}, Automatic}, {{
       Hold[$CellContext`ptRin$$], {1, -0.3}}, Automatic}, {{
       Hold[$CellContext`ShowPaths$$], False, "Show Paths"}, {True, False}}, {
     
      Hold[
       Row[{
         Button["Propagate", 
          
          Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
           While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
           If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
              Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
              2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {307.5, {463., 153.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`disp$10365364$$ = 
    0, $CellContext`\[Theta]$10365365$$ = 
    0, $CellContext`ShowPaths$10365366$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`disp$$ = 
        0.1, $CellContext`ptLin$$ = {1, 0.3}, $CellContext`ptRin$$ = {
         1, -0.3}, $CellContext`ShowPaths$$ = 
        False, $CellContext`\[Theta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`disp$$, $CellContext`disp$10365364$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$10365365$$, 0], 
        Hold[$CellContext`ShowPaths$$, $CellContext`ShowPaths$10365366$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`ptLAng$, $CellContext`ptRAng$, $CellContext`t1$, \
$CellContext`t2$, $CellContext`rA$, $CellContext`lA$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
        While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
        If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
           Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
           2 Pi]; $CellContext`t1$ = $CellContext`\[Theta]$$ + \
$CellContext`disp$$ + 
          Pi/2; $CellContext`t2$ = $CellContext`\[Theta]$$ - \
$CellContext`disp$$ + 
          3 (Pi/2); {$CellContext`rA$, $CellContext`lA$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; Row[{
           Graphics[{
             Table[
              $CellContext`drawDispArc[$CellContext`a, $CellContext`disp$$, \
$CellContext`\[Theta]$$], {$CellContext`a, $CellContext`ptRAng$, \
$CellContext`ptLAng$, ($CellContext`ptLAng$ - $CellContext`ptRAng$)/
               If[$CellContext`ShowPaths$$, 10, 1]}], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t1$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t2$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], $CellContext`drawCircleMask, {Blue, 
              Thickness[0.02], 
              
              Circle[{0, 0}, 
               1.04, {$CellContext`rA$, $CellContext`lA$ + 
                If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0]}]}, Green, 
             Thickness[0.01], 
             
             Circle[{0, 0}, 
              1.01, {$CellContext`ptLAng$, $CellContext`ptRAng$}], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptLAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptRAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptLAng$], 
              $CellContext`loc[Blue]], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptRAng$], 
              $CellContext`loc[Red]]}, PlotRange -> 1.25 {{-1, 1}, {-1, 1}}, 
            ImageSize -> 300], 
           Plot[
            $CellContext`simprojection[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`disp$$, $CellContext`\[Phi]], \
{$CellContext`\[Phi], -Pi, Pi}, PlotStyle -> Blue, ImageSize -> 300, 
            AspectRatio -> 0.9, 
            PlotRange -> {{-Pi - 0.1, Pi + 0.1}, {-0.3, 2 Pi + 0.2}}, 
            PlotLabel -> "Arc Length", Prolog -> {Green, 
              
              Line[{{-Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}, {
                Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}}]}, 
            Epilog -> {{
               Darker[Blue], Dashed, 
               Text["Min", {-3, 4 $CellContext`disp$$ - 0.2}], 
               
               Line[{{-Pi, 4 $CellContext`disp$$}, {
                 Pi, 4 $CellContext`disp$$}}], 
               Text["Max", {-3, Pi + 2 $CellContext`disp$$ + 0.1}], 
               
               Line[{{-Pi, Pi + 2 $CellContext`disp$$}, {
                 Pi, Pi + 2 $CellContext`disp$$}}]}, Red, 
              
              Line[{{$CellContext`\[Theta]$$, 0}, {$CellContext`\[Theta]$$, 
                 2 Pi - 0.2}}], 
              Text["\[Theta]", {$CellContext`\[Theta]$$, 2 Pi}]}]}]], 
      "Specifications" :> {{{$CellContext`disp$$, 0.1, "\[Delta]"}, 0, 
         1.5697963267948967`, 0.001, Appearance -> "Labeled", ImageSize -> 
         240, ControlPlacement -> 1}, {{$CellContext`\[Theta]$$, -Pi}, -3.142,
          3.142, 0.001, Appearance -> "Labeled", ImageSize -> 240, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`ptLin$$, {1, 0.3}}, Automatic,
          ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ptRin$$, {1, -0.3}}, Automatic, ControlType -> 
         Locator, Appearance -> 
         None}, {{$CellContext`ShowPaths$$, False, "Show Paths"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Button["Propagate", 
           
           Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
            While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
            If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
               Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
               2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
          Manipulate`Place[3]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{529., {394., 400.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ptToAng[
         Pattern[$CellContext`ptin, 
          Blank[]]] := 
       Module[{$CellContext`pt}, $CellContext`pt = 
          If[Norm[$CellContext`ptin] > 0, $CellContext`ptin/
            Norm[$CellContext`ptin], {1, 0}]; ArcTan[
           Part[$CellContext`pt, 1], 
           Part[$CellContext`pt, 2]]], $CellContext`projMath[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aLhL, $CellContext`aLhR, $CellContext`aRhL, \
$CellContext`aRhR, $CellContext`t1, $CellContext`t2, $CellContext`rA, \
$CellContext`lA}, {$CellContext`aLhL, $CellContext`aLhR} = \
$CellContext`angToDispArc[$CellContext`ptLAng, $CellContext`disp, \
$CellContext`\[Theta]]; {$CellContext`aRhL, $CellContext`aRhR} = \
$CellContext`angToDispArc[$CellContext`ptRAng, $CellContext`disp, \
$CellContext`\[Theta]]; If[
           And[
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhL], 
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhR]], $CellContext`rA = $CellContext`aRhR; $CellContext`lA = \
$CellContext`aRhL, 
           If[
            And[
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhL], 
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhR]], $CellContext`rA = $CellContext`aLhR; $CellContext`lA = \
$CellContext`aLhL, 
            If[
             And[
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhL], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhL]], $CellContext`rA = $CellContext`aRhR; \
$CellContext`lA = $CellContext`aLhL, $CellContext`rA = $CellContext`aLhR; \
$CellContext`lA = $CellContext`aRhL]]]; $CellContext`t1 = $CellContext`\
\[Theta] + $CellContext`disp + 
           Pi/2; $CellContext`t2 = $CellContext`\[Theta] - $CellContext`disp + 
           3 (Pi/2); $CellContext`rA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t2], $CellContext`t2, $CellContext`rA]; \
$CellContext`lA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t1], $CellContext`t1, $CellContext`lA]; \
$CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA > 2 Pi + $CellContext`rA, (-2) Pi, 
             0]; {$CellContext`rA, $CellContext`lA}], \
$CellContext`angToDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`\[Beta]L, $CellContext`\[Beta]R, $CellContext`aL, \
$CellContext`aR}, $CellContext`\[Beta]L = $CellContext`\[Theta] + \
$CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]L = $CellContext`\
\[Beta]L + If[$CellContext`\[Beta]L > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]L < -Pi, 2 Pi, 0]; $CellContext`aL = 
          If[Abs[$CellContext`\[Beta]L] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng - (Pi - 
            2 $CellContext`\[Beta]L)]; $CellContext`\[Beta]R = $CellContext`\
\[Theta] - $CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]R = $CellContext`\
\[Beta]R + If[$CellContext`\[Beta]R > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]R < -Pi, 2 Pi, 0]; $CellContext`aR = 
          If[Abs[$CellContext`\[Beta]R] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng + (Pi + 
             2 $CellContext`\[Beta]R)]; $CellContext`aR = $CellContext`aR + 
           If[$CellContext`aR > $CellContext`aL, (-2) Pi, 0]; If[
           
           Or[$CellContext`aR < -Pi, $CellContext`aL < -
             Pi], $CellContext`aR = $CellContext`aR + 
             2 Pi; $CellContext`aL = $CellContext`aL + 2 Pi]; 
         Return[{$CellContext`aL, $CellContext`aR}]], \
$CellContext`isAngleInArc[
         Pattern[$CellContext`aLin, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`\[Epsilon] = 
          0.001}, $CellContext`aL = $CellContext`aLin + 
           If[$CellContext`aLin < $CellContext`aR, 2 Pi, 0]; 
         Or[$CellContext`aR - $CellContext`\[Epsilon] <= \
$CellContext`\[Alpha] <= $CellContext`aL + $CellContext`\[Epsilon], \
$CellContext`aR - $CellContext`\[Epsilon] <= $CellContext`\[Alpha] - 2 
            Pi <= $CellContext`aL + $CellContext`\[Epsilon], $CellContext`aR - \
$CellContext`\[Epsilon] <= $CellContext`\[Alpha] + 
            2 Pi <= $CellContext`aL + $CellContext`\[Epsilon]]], \
$CellContext`drawDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`aR}, {$CellContext`aL, \
$CellContext`aR} = $CellContext`angToDispArc[$CellContext`ptAng, \
$CellContext`disp, $CellContext`\[Theta]]; {
           PointSize[Large], {Blue, 
            Opacity[0.3], 
            Disk[
             $CellContext`angleToPt[$CellContext`ptAng], 
             5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, {Orange, Thick, 
            Circle[{0, 0}, 0.98, {$CellContext`aR, $CellContext`aL}]}, {Green, 
            Point[0.98 {
               Cos[$CellContext`aL], 
               Sin[$CellContext`aL]}]}, {Purple, 
            Point[0.98 {
               Cos[$CellContext`aR], 
               Sin[$CellContext`aR]}]}}], $CellContext`angleToPt[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {
         Cos[$CellContext`\[Theta]], 
         Sin[$CellContext`\[Theta]]}, $CellContext`drawTangentPt[
         Pattern[$CellContext`aL, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`tp, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := Module[{$CellContext`pt = {
            Cos[$CellContext`tp], 
            Sin[$CellContext`tp]}}, 
         If[
          $CellContext`isAngleInArc[$CellContext`aL, $CellContext`aR, \
$CellContext`tp], {
           $CellContext`drawDispArc[$CellContext`tp, $CellContext`disp, \
$CellContext`\[Theta]], 
           PointSize[Large], 
           Point[$CellContext`pt]}, {
           Circle[$CellContext`pt, 1/50]}]], $CellContext`drawCircleMask = {
         GrayLevel[0.85], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         FilledCurve[{{
            Line[{{2, -2}, {2, 2}, {-2, 2}, {-2, -2}}]}, {
            
            BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, SplineDegree -> 2, 
             SplineKnots -> {0, 0, 0, 1/4, 1/2, 1/2, 3/4, 1, 1, 1}, 
             SplineWeights -> {
              1, 0.5, 0.5, 1, 0.5, 0.5, 
               1}]}}]}, $CellContext`drawMovementVectors[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]]] := {{
          Opacity[0.5], Red, 
          
          Disk[$CellContext`pt, 1/
           5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, Black, 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] + \
$CellContext`disp/2]], 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] - \
$CellContext`disp/2]], Red, 
         Arrow[{$CellContext`pt, $CellContext`pt + (1/3) {
              Cos[$CellContext`\[Theta]], 
              Sin[$CellContext`\[Theta]]}}]}, $CellContext`loc[
         Pattern[$CellContext`col, 
          Blank[]]] := ToExpression[
         GraphicsBox[{$CellContext`col, {
            AbsoluteThickness[1], Antialiasing -> False, 
            
            LineBox[{{{0, -10}, {0, -2}}, {{0, 2}, {0, 10}}, {{-10, 0}, {-2, 
             0}}, {{2, 0}, {10, 0}}}], Antialiasing -> True, 
            CircleBox[{-0.5, 0.5}, 5]}, {
            AbsoluteThickness[3], 
            Opacity[0.3], 
            CircleBox[{-0.5, 0.5}, 3]}}, ImageSize -> 17, 
          PlotRange -> {{-8, 8}, {-8, 8}}]], $CellContext`simprojection[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAngIn, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`rA, $CellContext`lA}, {$CellContext`rA, \
$CellContext`lA} = $CellContext`projMath[$CellContext`ptLAng, \
$CellContext`ptRAngIn, $CellContext`disp, $CellContext`\[Theta]]; \
$CellContext`lA - $CellContext`rA]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7127573774344587`*^9, 3.7127575301512136`*^9, {3.7127576971241903`*^9, 
   3.7127577608106747`*^9}, {3.712757803665715*^9, 3.7127578224929247`*^9}},
 CellID->530685441,ExpressionUUID->"64caf135-01d0-48df-b3e4-8802b0eb503c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`disp$$ = 
    0.388, $CellContext`ptLin$$ = {-0.5991396091220528, -0.8006445708184586}, \
$CellContext`ptRin$$ = {0.5694575243468091, 
    0.8220207588405559}, $CellContext`ShowPaths$$ = 
    False, $CellContext`\[Theta]$$ = 2.8160000000000003`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`disp$$], 0.1, "\[Delta]"}, 0, 1.5697963267948967`, 
      0.001}, {{
       Hold[$CellContext`\[Theta]$$], -Pi}, -3.142, 3.142, 0.001}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ptLin$$], {1, 0.3}}, Automatic}, {{
       Hold[$CellContext`ptRin$$], {1, -0.3}}, Automatic}, {{
       Hold[$CellContext`ShowPaths$$], False, "Show Paths"}, {True, False}}, {
     
      Hold[
       Row[{
         Button["Propagate", 
          
          Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
           While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
           If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
              Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
              2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {307.5, {463., 153.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`disp$10365364$$ = 
    0, $CellContext`\[Theta]$10365365$$ = 
    0, $CellContext`ShowPaths$10365366$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`disp$$ = 
        0.1, $CellContext`ptLin$$ = {1, 0.3}, $CellContext`ptRin$$ = {
         1, -0.3}, $CellContext`ShowPaths$$ = 
        False, $CellContext`\[Theta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`disp$$, $CellContext`disp$10365364$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$10365365$$, 0], 
        Hold[$CellContext`ShowPaths$$, $CellContext`ShowPaths$10365366$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`ptLAng$, $CellContext`ptRAng$, $CellContext`t1$, \
$CellContext`t2$, $CellContext`rA$, $CellContext`lA$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
        While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
        If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
           Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
           2 Pi]; $CellContext`t1$ = $CellContext`\[Theta]$$ + \
$CellContext`disp$$ + 
          Pi/2; $CellContext`t2$ = $CellContext`\[Theta]$$ - \
$CellContext`disp$$ + 
          3 (Pi/2); {$CellContext`rA$, $CellContext`lA$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; Row[{
           Graphics[{
             Table[
              $CellContext`drawDispArc[$CellContext`a, $CellContext`disp$$, \
$CellContext`\[Theta]$$], {$CellContext`a, $CellContext`ptRAng$, \
$CellContext`ptLAng$, ($CellContext`ptLAng$ - $CellContext`ptRAng$)/
               If[$CellContext`ShowPaths$$, 10, 1]}], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t1$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t2$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], $CellContext`drawCircleMask, {Blue, 
              Thickness[0.02], 
              
              Circle[{0, 0}, 
               1.04, {$CellContext`rA$, $CellContext`lA$ + 
                If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0]}]}, Green, 
             Thickness[0.01], 
             
             Circle[{0, 0}, 
              1.01, {$CellContext`ptLAng$, $CellContext`ptRAng$}], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptLAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptRAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptLAng$], 
              $CellContext`loc[Blue]], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptRAng$], 
              $CellContext`loc[Red]]}, PlotRange -> 1.25 {{-1, 1}, {-1, 1}}, 
            ImageSize -> 300], 
           Plot[
            $CellContext`simprojection[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`disp$$, $CellContext`\[Phi]], \
{$CellContext`\[Phi], -Pi, Pi}, PlotStyle -> Blue, ImageSize -> 300, 
            AspectRatio -> 0.9, 
            PlotRange -> {{-Pi - 0.1, Pi + 0.1}, {-0.3, 2 Pi + 0.2}}, 
            PlotLabel -> "Arc Length", Prolog -> {Green, 
              
              Line[{{-Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}, {
                Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}}]}, 
            Epilog -> {{
               Darker[Blue], Dashed, 
               Text["Min", {-3, 4 $CellContext`disp$$ - 0.2}], 
               
               Line[{{-Pi, 4 $CellContext`disp$$}, {
                 Pi, 4 $CellContext`disp$$}}], 
               Text["Max", {-3, Pi + 2 $CellContext`disp$$ + 0.1}], 
               
               Line[{{-Pi, Pi + 2 $CellContext`disp$$}, {
                 Pi, Pi + 2 $CellContext`disp$$}}]}, Red, 
              
              Line[{{$CellContext`\[Theta]$$, 0}, {$CellContext`\[Theta]$$, 
                 2 Pi - 0.2}}], 
              Text["\[Theta]", {$CellContext`\[Theta]$$, 2 Pi}]}]}]], 
      "Specifications" :> {{{$CellContext`disp$$, 0.1, "\[Delta]"}, 0, 
         1.5697963267948967`, 0.001, Appearance -> "Labeled", ImageSize -> 
         240, ControlPlacement -> 1}, {{$CellContext`\[Theta]$$, -Pi}, -3.142,
          3.142, 0.001, Appearance -> "Labeled", ImageSize -> 240, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`ptLin$$, {1, 0.3}}, Automatic,
          ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ptRin$$, {1, -0.3}}, Automatic, ControlType -> 
         Locator, Appearance -> 
         None}, {{$CellContext`ShowPaths$$, False, "Show Paths"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Button["Propagate", 
           
           Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
            While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
            If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
               Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
               2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
          Manipulate`Place[3]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{529., {394., 400.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ptToAng[
         Pattern[$CellContext`ptin, 
          Blank[]]] := 
       Module[{$CellContext`pt}, $CellContext`pt = 
          If[Norm[$CellContext`ptin] > 0, $CellContext`ptin/
            Norm[$CellContext`ptin], {1, 0}]; ArcTan[
           Part[$CellContext`pt, 1], 
           Part[$CellContext`pt, 2]]], $CellContext`projMath[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aLhL, $CellContext`aLhR, $CellContext`aRhL, \
$CellContext`aRhR, $CellContext`t1, $CellContext`t2, $CellContext`rA, \
$CellContext`lA}, {$CellContext`aLhL, $CellContext`aLhR} = \
$CellContext`angToDispArc[$CellContext`ptLAng, $CellContext`disp, \
$CellContext`\[Theta]]; {$CellContext`aRhL, $CellContext`aRhR} = \
$CellContext`angToDispArc[$CellContext`ptRAng, $CellContext`disp, \
$CellContext`\[Theta]]; If[
           And[
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhL], 
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhR]], $CellContext`rA = $CellContext`aRhR; $CellContext`lA = \
$CellContext`aRhL, 
           If[
            And[
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhL], 
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhR]], $CellContext`rA = $CellContext`aLhR; $CellContext`lA = \
$CellContext`aLhL, 
            If[
             And[
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhL], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhL]], $CellContext`rA = $CellContext`aRhR; \
$CellContext`lA = $CellContext`aLhL, $CellContext`rA = $CellContext`aLhR; \
$CellContext`lA = $CellContext`aRhL]]]; $CellContext`t1 = $CellContext`\
\[Theta] + $CellContext`disp + 
           Pi/2; $CellContext`t2 = $CellContext`\[Theta] - $CellContext`disp + 
           3 (Pi/2); $CellContext`rA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t2], $CellContext`t2, $CellContext`rA]; \
$CellContext`lA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t1], $CellContext`t1, $CellContext`lA]; \
$CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA > 2 Pi + $CellContext`rA, (-2) Pi, 
             0]; {$CellContext`rA, $CellContext`lA}], \
$CellContext`angToDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`\[Beta]L, $CellContext`\[Beta]R, $CellContext`aL, \
$CellContext`aR}, $CellContext`\[Beta]L = $CellContext`\[Theta] + \
$CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]L = $CellContext`\
\[Beta]L + If[$CellContext`\[Beta]L > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]L < -Pi, 2 Pi, 0]; $CellContext`aL = 
          If[Abs[$CellContext`\[Beta]L] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng - (Pi - 
            2 $CellContext`\[Beta]L)]; $CellContext`\[Beta]R = $CellContext`\
\[Theta] - $CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]R = $CellContext`\
\[Beta]R + If[$CellContext`\[Beta]R > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]R < -Pi, 2 Pi, 0]; $CellContext`aR = 
          If[Abs[$CellContext`\[Beta]R] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng + (Pi + 
             2 $CellContext`\[Beta]R)]; $CellContext`aR = $CellContext`aR + 
           If[$CellContext`aR > $CellContext`aL, (-2) Pi, 0]; If[
           
           Or[$CellContext`aR < -Pi, $CellContext`aL < -
             Pi], $CellContext`aR = $CellContext`aR + 
             2 Pi; $CellContext`aL = $CellContext`aL + 2 Pi]; 
         Return[{$CellContext`aL, $CellContext`aR}]], \
$CellContext`isAngleInArc[
         Pattern[$CellContext`aLin, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`\[Epsilon] = 
          0.001}, $CellContext`aL = $CellContext`aLin + 
           If[$CellContext`aLin < $CellContext`aR, 2 Pi, 0]; 
         Or[$CellContext`aR - $CellContext`\[Epsilon] <= \
$CellContext`\[Alpha] <= $CellContext`aL + $CellContext`\[Epsilon], \
$CellContext`aR - $CellContext`\[Epsilon] <= $CellContext`\[Alpha] - 2 
            Pi <= $CellContext`aL + $CellContext`\[Epsilon], $CellContext`aR - \
$CellContext`\[Epsilon] <= $CellContext`\[Alpha] + 
            2 Pi <= $CellContext`aL + $CellContext`\[Epsilon]]], \
$CellContext`drawDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`aR}, {$CellContext`aL, \
$CellContext`aR} = $CellContext`angToDispArc[$CellContext`ptAng, \
$CellContext`disp, $CellContext`\[Theta]]; {
           PointSize[Large], {Blue, 
            Opacity[0.3], 
            Disk[
             $CellContext`angleToPt[$CellContext`ptAng], 
             5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, {Orange, Thick, 
            Circle[{0, 0}, 0.98, {$CellContext`aR, $CellContext`aL}]}, {Green, 
            Point[0.98 {
               Cos[$CellContext`aL], 
               Sin[$CellContext`aL]}]}, {Purple, 
            Point[0.98 {
               Cos[$CellContext`aR], 
               Sin[$CellContext`aR]}]}}], $CellContext`angleToPt[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {
         Cos[$CellContext`\[Theta]], 
         Sin[$CellContext`\[Theta]]}, $CellContext`drawTangentPt[
         Pattern[$CellContext`aL, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`tp, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := Module[{$CellContext`pt = {
            Cos[$CellContext`tp], 
            Sin[$CellContext`tp]}}, 
         If[
          $CellContext`isAngleInArc[$CellContext`aL, $CellContext`aR, \
$CellContext`tp], {
           $CellContext`drawDispArc[$CellContext`tp, $CellContext`disp, \
$CellContext`\[Theta]], 
           PointSize[Large], 
           Point[$CellContext`pt]}, {
           Circle[$CellContext`pt, 1/50]}]], $CellContext`drawCircleMask = {
         GrayLevel[0.85], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         FilledCurve[{{
            Line[{{2, -2}, {2, 2}, {-2, 2}, {-2, -2}}]}, {
            
            BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, SplineDegree -> 2, 
             SplineKnots -> {0, 0, 0, 1/4, 1/2, 1/2, 3/4, 1, 1, 1}, 
             SplineWeights -> {
              1, 0.5, 0.5, 1, 0.5, 0.5, 
               1}]}}]}, $CellContext`drawMovementVectors[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]]] := {{
          Opacity[0.5], Red, 
          
          Disk[$CellContext`pt, 1/
           5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, Black, 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] + \
$CellContext`disp/2]], 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] - \
$CellContext`disp/2]], Red, 
         Arrow[{$CellContext`pt, $CellContext`pt + (1/3) {
              Cos[$CellContext`\[Theta]], 
              Sin[$CellContext`\[Theta]]}}]}, $CellContext`loc[
         Pattern[$CellContext`col, 
          Blank[]]] := ToExpression[
         GraphicsBox[{$CellContext`col, {
            AbsoluteThickness[1], Antialiasing -> False, 
            
            LineBox[{{{0, -10}, {0, -2}}, {{0, 2}, {0, 10}}, {{-10, 0}, {-2, 
             0}}, {{2, 0}, {10, 0}}}], Antialiasing -> True, 
            CircleBox[{-0.5, 0.5}, 5]}, {
            AbsoluteThickness[3], 
            Opacity[0.3], 
            CircleBox[{-0.5, 0.5}, 3]}}, ImageSize -> 17, 
          PlotRange -> {{-8, 8}, {-8, 8}}]], $CellContext`simprojection[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAngIn, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`rA, $CellContext`lA}, {$CellContext`rA, \
$CellContext`lA} = $CellContext`projMath[$CellContext`ptLAng, \
$CellContext`ptRAngIn, $CellContext`disp, $CellContext`\[Theta]]; \
$CellContext`lA - $CellContext`rA]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7127573774344587`*^9, 3.7127575301512136`*^9, {3.7127576971241903`*^9, 
   3.7127577608106747`*^9}, {3.712757803665715*^9, 3.7127578224929247`*^9}},
 CellID->722475178,ExpressionUUID->"1bcaeb86-2e31-43a4-bc97-873d6cd6b823"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`disp$$ = 
    0.8190000000000001, $CellContext`ptLin$$ = {0.16599999999999993`, 
    0.9500000000000002}, $CellContext`ptRin$$ = {
    0.3500000000000001, -1.055}, $CellContext`ShowPaths$$ = 
    True, $CellContext`\[Theta]$$ = -Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`disp$$], 0.1, "\[Delta]"}, 0, 1.5697963267948967`, 
      0.001}, {{
       Hold[$CellContext`\[Theta]$$], -Pi}, -3.142, 3.142, 0.001}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ptLin$$], {1, 0.3}}, Automatic}, {{
       Hold[$CellContext`ptRin$$], {1, -0.3}}, Automatic}, {{
       Hold[$CellContext`ShowPaths$$], False, "Show Paths"}, {True, False}}, {
     
      Hold[
       Row[{
         Button["Propagate", 
          
          Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
           While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
           If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
              Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
              2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {148., 152.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`disp$10365364$$ = 
    0, $CellContext`\[Theta]$10365365$$ = 
    0, $CellContext`ShowPaths$10365366$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`disp$$ = 
        0.1, $CellContext`ptLin$$ = {1, 0.3}, $CellContext`ptRin$$ = {
         1, -0.3}, $CellContext`ShowPaths$$ = 
        False, $CellContext`\[Theta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`disp$$, $CellContext`disp$10365364$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$10365365$$, 0], 
        Hold[$CellContext`ShowPaths$$, $CellContext`ShowPaths$10365366$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`ptLAng$, $CellContext`ptRAng$, $CellContext`t1$, \
$CellContext`t2$, $CellContext`rA$, $CellContext`lA$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
        While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
        If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
           Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
           2 Pi]; $CellContext`t1$ = $CellContext`\[Theta]$$ + \
$CellContext`disp$$ + 
          Pi/2; $CellContext`t2$ = $CellContext`\[Theta]$$ - \
$CellContext`disp$$ + 
          3 (Pi/2); {$CellContext`rA$, $CellContext`lA$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; Row[{
           Graphics[{
             Table[
              $CellContext`drawDispArc[$CellContext`a, $CellContext`disp$$, \
$CellContext`\[Theta]$$], {$CellContext`a, $CellContext`ptRAng$, \
$CellContext`ptLAng$, ($CellContext`ptLAng$ - $CellContext`ptRAng$)/
               If[$CellContext`ShowPaths$$, 10, 1]}], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t1$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t2$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], $CellContext`drawCircleMask, {Blue, 
              Thickness[0.02], 
              
              Circle[{0, 0}, 
               1.04, {$CellContext`rA$, $CellContext`lA$ + 
                If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0]}]}, Green, 
             Thickness[0.01], 
             
             Circle[{0, 0}, 
              1.01, {$CellContext`ptLAng$, $CellContext`ptRAng$}], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptLAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptRAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptLAng$], 
              $CellContext`loc[Blue]], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptRAng$], 
              $CellContext`loc[Red]]}, PlotRange -> 1.25 {{-1, 1}, {-1, 1}}, 
            ImageSize -> 300], 
           Plot[
            $CellContext`simprojection[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`disp$$, $CellContext`\[Phi]], \
{$CellContext`\[Phi], -Pi, Pi}, PlotStyle -> Blue, ImageSize -> 300, 
            AspectRatio -> 0.9, 
            PlotRange -> {{-Pi - 0.1, Pi + 0.1}, {-0.3, 2 Pi + 0.2}}, 
            PlotLabel -> "Arc Length", Prolog -> {Green, 
              
              Line[{{-Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}, {
                Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}}]}, 
            Epilog -> {{
               Darker[Blue], Dashed, 
               Text["Min", {-3, 4 $CellContext`disp$$ - 0.2}], 
               Line[{{-Pi, 4 $CellContext`disp$$}, {
                 Pi, 4 $CellContext`disp$$}}], 
               Text["Max", {-3, Pi + 2 $CellContext`disp$$ + 0.1}], 
               
               Line[{{-Pi, Pi + 2 $CellContext`disp$$}, {
                 Pi, Pi + 2 $CellContext`disp$$}}]}, Red, 
              
              Line[{{$CellContext`\[Theta]$$, 0}, {$CellContext`\[Theta]$$, 
                 2 Pi - 0.2}}], 
              Text["\[Theta]", {$CellContext`\[Theta]$$, 2 Pi}]}]}]], 
      "Specifications" :> {{{$CellContext`disp$$, 0.1, "\[Delta]"}, 0, 
         1.5697963267948967`, 0.001, Appearance -> "Labeled", ImageSize -> 
         240, ControlPlacement -> 1}, {{$CellContext`\[Theta]$$, -Pi}, -3.142,
          3.142, 0.001, Appearance -> "Labeled", ImageSize -> 240, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`ptLin$$, {1, 0.3}}, Automatic,
          ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ptRin$$, {1, -0.3}}, Automatic, ControlType -> 
         Locator, Appearance -> 
         None}, {{$CellContext`ShowPaths$$, False, "Show Paths"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Button["Propagate", 
           
           Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
            While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
            If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
               Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
               2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
          Manipulate`Place[3]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{32780., {236., 242.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ptToAng[
         Pattern[$CellContext`ptin, 
          Blank[]]] := 
       Module[{$CellContext`pt}, $CellContext`pt = 
          If[Norm[$CellContext`ptin] > 0, $CellContext`ptin/
            Norm[$CellContext`ptin], {1, 0}]; ArcTan[
           Part[$CellContext`pt, 1], 
           Part[$CellContext`pt, 2]]], $CellContext`projMath[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aLhL, $CellContext`aLhR, $CellContext`aRhL, \
$CellContext`aRhR, $CellContext`t1, $CellContext`t2, $CellContext`rA, \
$CellContext`lA}, {$CellContext`aLhL, $CellContext`aLhR} = \
$CellContext`angToDispArc[$CellContext`ptLAng, $CellContext`disp, \
$CellContext`\[Theta]]; {$CellContext`aRhL, $CellContext`aRhR} = \
$CellContext`angToDispArc[$CellContext`ptRAng, $CellContext`disp, \
$CellContext`\[Theta]]; If[
           And[
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhL], 
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhR]], $CellContext`rA = $CellContext`aRhR; $CellContext`lA = \
$CellContext`aRhL, 
           If[
            And[
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhL], 
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhR]], $CellContext`rA = $CellContext`aLhR; $CellContext`lA = \
$CellContext`aLhL, 
            If[
             And[
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhL], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhL]], $CellContext`rA = $CellContext`aRhR; \
$CellContext`lA = $CellContext`aLhL, $CellContext`rA = $CellContext`aLhR; \
$CellContext`lA = $CellContext`aRhL]]]; $CellContext`t1 = $CellContext`\
\[Theta] + $CellContext`disp + 
           Pi/2; $CellContext`t2 = $CellContext`\[Theta] - $CellContext`disp + 
           3 (Pi/2); $CellContext`rA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t2], $CellContext`t2, $CellContext`rA]; \
$CellContext`lA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t1], $CellContext`t1, $CellContext`lA]; \
$CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA > 2 Pi + $CellContext`rA, (-2) Pi, 
             0]; {$CellContext`rA, $CellContext`lA}], \
$CellContext`angToDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`\[Beta]L, $CellContext`\[Beta]R, $CellContext`aL, \
$CellContext`aR}, $CellContext`\[Beta]L = $CellContext`\[Theta] + \
$CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]L = $CellContext`\
\[Beta]L + If[$CellContext`\[Beta]L > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]L < -Pi, 2 Pi, 0]; $CellContext`aL = 
          If[Abs[$CellContext`\[Beta]L] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng - (Pi - 
            2 $CellContext`\[Beta]L)]; $CellContext`\[Beta]R = $CellContext`\
\[Theta] - $CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]R = $CellContext`\
\[Beta]R + If[$CellContext`\[Beta]R > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]R < -Pi, 2 Pi, 0]; $CellContext`aR = 
          If[Abs[$CellContext`\[Beta]R] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng + (Pi + 
             2 $CellContext`\[Beta]R)]; $CellContext`aR = $CellContext`aR + 
           If[$CellContext`aR > $CellContext`aL, (-2) Pi, 0]; If[
           
           Or[$CellContext`aR < -Pi, $CellContext`aL < -
             Pi], $CellContext`aR = $CellContext`aR + 
             2 Pi; $CellContext`aL = $CellContext`aL + 2 Pi]; 
         Return[{$CellContext`aL, $CellContext`aR}]], \
$CellContext`isAngleInArc[
         Pattern[$CellContext`aLin, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`\[Epsilon] = 
          0.001}, $CellContext`aL = $CellContext`aLin + 
           If[$CellContext`aLin < $CellContext`aR, 2 Pi, 0]; 
         Or[$CellContext`aR - $CellContext`\[Epsilon] <= \
$CellContext`\[Alpha] <= $CellContext`aL + $CellContext`\[Epsilon], \
$CellContext`aR - $CellContext`\[Epsilon] <= $CellContext`\[Alpha] - 2 
            Pi <= $CellContext`aL + $CellContext`\[Epsilon], $CellContext`aR - \
$CellContext`\[Epsilon] <= $CellContext`\[Alpha] + 
            2 Pi <= $CellContext`aL + $CellContext`\[Epsilon]]], \
$CellContext`drawDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`aR}, {$CellContext`aL, \
$CellContext`aR} = $CellContext`angToDispArc[$CellContext`ptAng, \
$CellContext`disp, $CellContext`\[Theta]]; {
           PointSize[Large], {Blue, 
            Opacity[0.3], 
            Disk[
             $CellContext`angleToPt[$CellContext`ptAng], 
             5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, {Orange, Thick, 
            Circle[{0, 0}, 0.98, {$CellContext`aR, $CellContext`aL}]}, {Green, 
            Point[0.98 {
               Cos[$CellContext`aL], 
               Sin[$CellContext`aL]}]}, {Purple, 
            Point[0.98 {
               Cos[$CellContext`aR], 
               Sin[$CellContext`aR]}]}}], $CellContext`angleToPt[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {
         Cos[$CellContext`\[Theta]], 
         Sin[$CellContext`\[Theta]]}, $CellContext`drawTangentPt[
         Pattern[$CellContext`aL, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`tp, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := Module[{$CellContext`pt = {
            Cos[$CellContext`tp], 
            Sin[$CellContext`tp]}}, 
         If[
          $CellContext`isAngleInArc[$CellContext`aL, $CellContext`aR, \
$CellContext`tp], {
           $CellContext`drawDispArc[$CellContext`tp, $CellContext`disp, \
$CellContext`\[Theta]], 
           PointSize[Large], 
           Point[$CellContext`pt]}, {
           Circle[$CellContext`pt, 1/50]}]], $CellContext`drawCircleMask = {
         GrayLevel[0.85], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         FilledCurve[{{
            Line[{{2, -2}, {2, 2}, {-2, 2}, {-2, -2}}]}, {
            
            BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, SplineDegree -> 2, 
             SplineKnots -> {0, 0, 0, 1/4, 1/2, 1/2, 3/4, 1, 1, 1}, 
             SplineWeights -> {
              1, 0.5, 0.5, 1, 0.5, 0.5, 
               1}]}}]}, $CellContext`drawMovementVectors[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]]] := {{
          Opacity[0.5], Red, 
          
          Disk[$CellContext`pt, 1/
           5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, Black, 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] + \
$CellContext`disp/2]], 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] - \
$CellContext`disp/2]], Red, 
         Arrow[{$CellContext`pt, $CellContext`pt + (1/3) {
              Cos[$CellContext`\[Theta]], 
              Sin[$CellContext`\[Theta]]}}]}, $CellContext`loc[
         Pattern[$CellContext`col, 
          Blank[]]] := ToExpression[
         GraphicsBox[{$CellContext`col, {
            AbsoluteThickness[1], Antialiasing -> False, 
            
            LineBox[{{{0, -10}, {0, -2}}, {{0, 2}, {0, 10}}, {{-10, 0}, {-2, 
             0}}, {{2, 0}, {10, 0}}}], Antialiasing -> True, 
            CircleBox[{-0.5, 0.5}, 5]}, {
            AbsoluteThickness[3], 
            Opacity[0.3], 
            CircleBox[{-0.5, 0.5}, 3]}}, ImageSize -> 17, 
          PlotRange -> {{-8, 8}, {-8, 8}}]], $CellContext`simprojection[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAngIn, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`rA, $CellContext`lA}, {$CellContext`rA, \
$CellContext`lA} = $CellContext`projMath[$CellContext`ptLAng, \
$CellContext`ptRAngIn, $CellContext`disp, $CellContext`\[Theta]]; \
$CellContext`lA - $CellContext`rA]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7127573774344587`*^9, 3.7127575301512136`*^9, {3.7127576971241903`*^9, 
   3.7127577608106747`*^9}, {3.712757803665715*^9, 3.7127578224929247`*^9}},
 CellID->1270197132,ExpressionUUID->"59fe4bb2-26e2-4312-b6e3-908d1fc6d1e1"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   9,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429207483187`*^9},
 CellID->75644595,ExpressionUUID->"dbea49e6-811f-44b6-8637-9b2c3a43fffa"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   10,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142920872317*^9},
 CellID->526668773,ExpressionUUID->"b4ad5576-19aa-40d2-9837-a3b2259615af"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   11,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142920974827*^9},
 CellID->200566274,ExpressionUUID->"d47f9119-9d3c-4888-9f01-0c4fc8473d25"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,1,12,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429210905066`*^9},
 CellID->116373377,ExpressionUUID->"31653e66-05c4-4f1e-8766-e115068695dd"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   13,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429316968403`*^9},
 CellID->105237640,ExpressionUUID->"721347ad-4c00-42d4-84c7-770febeae21e"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   14,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429318368764`*^9},
 CellID->654770800,ExpressionUUID->"6d18617c-f8a0-4e69-a1ec-a19f6ded89d0"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   15,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429319393473`*^9},
 CellID->239454240,ExpressionUUID->"9b42969c-9dda-4d36-8363-74b0a107e3db"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,1,16,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142932052343*^9},
 CellID->115116314,ExpressionUUID->"fffc2c4d-bcee-4bfe-86d1-bb3ba69dd8ce"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   25,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.71314296423359*^9},
 CellID->285892936,ExpressionUUID->"12628f37-7aa3-4a35-8e9e-dfd3fba27c95"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   26,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142964316592*^9},
 CellID->313167365,ExpressionUUID->"11d5e084-fa92-4ef8-9955-78b6a5e84621"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   27,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142964424093*^9},
 CellID->1134390,ExpressionUUID->"b12326e7-57bb-4163-ad9a-9fc27528b719"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,2,28,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429645350914`*^9},
 CellID->94438515,ExpressionUUID->"3136a74a-2e6e-42d8-bfc5-51953316b00e"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   64,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209471979757*^9},
 CellID->257939488,ExpressionUUID->"ec081178-b95b-4c98-bd29-5b5f3bb8ea5d"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   65,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132094720927534`*^9},
 CellID->324066474,ExpressionUUID->"fdb8ed61-b5cd-47bc-ae46-8a3d8d968ccc"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   66,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209472158256*^9},
 CellID->320175543,ExpressionUUID->"b07e3e32-5f19-4e72-b2d9-447a2f70a0b9"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,57,67,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209472220254*^9},
 CellID->90494497,ExpressionUUID->"90a8f698-1f66-4c51-b519-24c370a93a4f"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   68,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209478156755*^9},
 CellID->200196842,ExpressionUUID->"659e04ef-262f-430a-a6ac-bee42551d8c2"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   69,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132094782127542`*^9},
 CellID->56402983,ExpressionUUID->"856eae6d-d16a-49c9-8f02-10d19761dc1b"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   70,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209478277253*^9},
 CellID->93079506,ExpressionUUID->"20d8b62b-6b45-4595-ad3e-e2afe64b2666"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,57,71,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209478331252*^9},
 CellID->419704165,ExpressionUUID->"5735ab19-572a-4d84-8a21-750b79cf3ff2"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   72,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132094864329767`*^9},
 CellID->1008230685,ExpressionUUID->"6e55d48e-124f-4866-8842-0127e94e98e7"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   73,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209486531977*^9},
 CellID->7069697,ExpressionUUID->"695fd0e5-8e3f-4110-ada0-6bbd862df45b"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   74,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132094865949783`*^9},
 CellID->80561186,ExpressionUUID->"5e60ba86-1a4f-47fc-b572-18c7545f8bc0"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,57,75,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209486654476*^9},
 CellID->185599658,ExpressionUUID->"15b0b2e1-60c9-4e9c-8ac7-c25e7f29189f"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   76,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209494293493*^9},
 CellID->496210364,ExpressionUUID->"697f3657-35e6-47f8-9980-4e4c51dce305"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   77,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209494344493*^9},
 CellID->186742169,ExpressionUUID->"73d375d1-3098-4ad0-be6c-19bd4cb9a9a9"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   78,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132094944774914`*^9},
 CellID->240978432,ExpressionUUID->"2f11c926-58e8-47d3-9542-9c3de35b805a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,57,79,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209494545991*^9},
 CellID->310372575,ExpressionUUID->"9f17a633-d24e-4564-8f28-c91823b8af59"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   80,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209497030492*^9},
 CellID->360712555,ExpressionUUID->"b3c7a9f6-862b-4565-bba3-49472b89be98"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   81,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132094971154914`*^9},
 CellID->195991562,ExpressionUUID->"886da45b-8a53-488a-8114-31e47ed5dba5"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,57,
   82,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132094972119937`*^9},
 CellID->334729242,ExpressionUUID->"f66f3653-0b93-440a-889e-e4c9ac5145d8"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,57,83,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132094973119926`*^9},
 CellID->534982691,ExpressionUUID->"a26d84d1-f2ed-40cd-aabd-64accaa16943"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,58,
   104,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132098624941993`*^9},
 CellID->136946770,ExpressionUUID->"5973e878-2ee9-490b-a99f-af96a7daa80f"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,58,
   105,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132098625486965`*^9},
 CellID->572953024,ExpressionUUID->"d80693c5-3f49-4351-abe3-44daac6477e7"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,58,
   106,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132098626146955`*^9},
 CellID->350716406,ExpressionUUID->"e98deeae-4e68-4ed5-850e-4fcf9d4412b0"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,58,107,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132098626771965`*^9},
 CellID->759076660,ExpressionUUID->"490e7014-1739-4acf-b730-36901d71a19c"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,60,
   132,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132099631709757`*^9},
 CellID->11541251,ExpressionUUID->"2fb6d9d5-fc3d-453c-97c9-5b9a4c7322a9"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,60,
   133,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209963226984*^9},
 CellID->359512102,ExpressionUUID->"f209b368-8e17-4ed1-b859-db71b098408a"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,60,
   134,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132099633104763`*^9},
 CellID->450924606,ExpressionUUID->"6e3385d6-2167-4296-9699-ef759d939cb6"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,60,135,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713209963364977*^9},
 CellID->331605437,ExpressionUUID->"f37521ea-7490-4815-a7db-898f36d93748"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   156,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132100601055427`*^9},
 CellID->546080835,ExpressionUUID->"225fc735-3bba-4b1d-a3c8-0959dc1494bf"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   157,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132100601950483`*^9},
 CellID->23010566,ExpressionUUID->"f54df312-e0f1-4c47-b53b-a036db2fe7d9"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   158,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713210060255044*^9},
 CellID->133951249,ExpressionUUID->"579c35ae-3f17-44ef-8191-6a572e40402a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,2,159,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132100603060446`*^9},
 CellID->284204562,ExpressionUUID->"b33c4859-2190-4d05-b857-83bd6ec2d97e"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   164,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132100680595484`*^9},
 CellID->17647194,ExpressionUUID->"ed90fcff-2b95-48b6-b635-222909af78bf"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   165,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713210068119047*^9},
 CellID->546089921,ExpressionUUID->"2b62f75a-0568-43e7-b159-889fe6899a01"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   166,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713210068199046*^9},
 CellID->21969531,ExpressionUUID->"d859eb2b-88f6-4faa-a2d7-b21160c65cbd"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,2,167,19073099070479317425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7132100683155537`*^9},
 CellID->63841815,ExpressionUUID->"03dc5d87-9239-4c82-838f-6206427335b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection",ExpressionUUID->"1b037800-e016-474f-baa3-2440663021ba"],

Cell["", "DetailNotes",
 CellChangeTimes->{{3.712758535854062*^9, 3.712758549818181*^9}},
 CellID->1190852696,ExpressionUUID->"1c5e5ab8-0a2d-4c62-a010-26fdbd52ca95"],

Cell["\<\
We assume at least one global input has been applied, so the particles start \
in an arc along a boundary. The left image shows the current particle \
distribution in green, and in blue the distribution they will achieve if they \
are propagated in the current \[Theta] direction. The \[Theta] direction is \
shown by two red arrows, each starting from either the left or right endpoint \
of the arc.  The particle dispersion \[PlusMinus]\[Delta] is shown with \
transparent circle sectors, and the path from their current position to an \
ending arc is shown with a transparent blue sector, which ends along an \
orange arc whose extent are highlighted by green and purple points.  If \
\"Show Paths\" is selected, additional starting points along the current arc \
are shown.\
\>", "DetailNotes",
 CellChangeTimes->{{3.712758551644495*^9, 3.71275891950762*^9}},
 CellID->829621493,ExpressionUUID->"371ecda0-a7b1-4a0d-aa6a-fbae8b8e0a64"],

Cell["The arc may be initialized to be of longth 0 to 2\[Pi] radians.", \
"DetailNotes",
 CellChangeTimes->{{3.712758535854062*^9, 3.712758549804687*^9}, {
  3.712758941132319*^9, 3.712759000628985*^9}},
 CellID->110179048,ExpressionUUID->"c2c4ac6c-816d-442c-bd35-5e2ff8956965"],

Cell[TextData[{
 "Any initial distribution can be steered to a minimum arc length of \
4\[Delta], and a maximum arc length of \[Pi] +2\[Delta]. Once the arc length \
exceeds the minimum, it can never be reduced to less than 4\[Delta].  \
Similarly, if the arc length is ever less than the maximum, it can never be \
increased to  more than \[Pi] +2\[Delta]. \nEvery propagation step can add no \
more than 2\[Delta] to the arc length, or decrease the arc length by ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"current", "-", "min"}], "2"], TraditionalForm]],ExpressionUUID->
  "25269be6-2aa2-45bf-9bdb-0689a297236e"],
 ". "
}], "DetailNotes",
 CellChangeTimes->{{3.712758535854062*^9, 3.712758549804687*^9}, {
  3.712758941132319*^9, 3.712759147752969*^9}},
 CellID->2037994890,ExpressionUUID->"aae2d56c-4f0b-4c59-a3d2-e341d03a94a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection",ExpressionUUID->"b602abe7-2deb-48f5-bb64-339beecf5bb2"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Resize Images",ExpressionUUID->"1c5bb472-1d6e-4749-a4cf-0f1a09cccca8"]}],
  
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\""]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "ResizeImages",ExpressionUUID->"62bb3923-463e-4bf6-ba6a-bed8c7f52af7"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Rotate and Zoom in 3D",ExpressionUUID->
    "5e6f9431-36ca-4bd1-be1d-6f751653d6be"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" on Mac) and drag up and down to zoom.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "RotateAndZoomIn3D",ExpressionUUID->"8a154714-048a-4ec1-ab2f-804be21464db"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Drag Locators",ExpressionUUID->"15573844-f9a2-4645-b70f-f4955bb0621f"]}],
  
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}]]], "ControlSuggestions",
 CellChangeTimes->{3.712759154217491*^9},
 FontFamily->"Verdana",
 CellTags->
  "DragLocators",ExpressionUUID->"297c9eb7-0715-4053-a66f-936a65a58792"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Create and Delete Locators",ExpressionUUID->
    "c7b0bae1-32dd-4298-a111-02904d7b0fcb"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "CreateAndDeleteLocators",ExpressionUUID->"4c2fac1a-6c3f-4dab-9426-\
ca6283a32332"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Slider Zoom",ExpressionUUID->"efc2a8bd-8c4e-4a70-9158-1680c8c510f0"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" to make ever finer adjustments.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "SliderZoom",ExpressionUUID->"bc6b60d1-72a2-4afa-bf30-db77e49ac078"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Gamepad Controls",ExpressionUUID->
    "4f72d486-c45b-4a54-b499-148c4f8bec47"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\""]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->
  "GamepadControls",ExpressionUUID->"a70b80e3-0bf2-44aa-bc93-9c90a25ff4ff"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Automatic Animation",ExpressionUUID->
    "20965c94-607b-45d0-b610-a616d6d3a657"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "AutomaticAnimation",ExpressionUUID->"150a8f39-5b03-41dc-969e-23c5f7248837"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Bookmark Animation",ExpressionUUID->
    "35e6b63a-ba86-40f4-807c-863d4652f9b0"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "BookmarkAnimation",ExpressionUUID->"0ffdfea0-405d-415f-bba8-a6b1aca8285e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection",ExpressionUUID->"b942ea60-753e-4d8b-8b9e-6ab6a7261694"],

Cell["particle spread", "SearchTerms",
 CellChangeTimes->{{3.712758502335486*^9, 3.712758505154503*^9}},
 CellID->714373906,ExpressionUUID->"2e7faf3d-de8d-4162-a639-b031a9740157"],

Cell["global input", "SearchTerms",
 CellChangeTimes->{{3.712758502335486*^9, 3.712758511185615*^9}},
 CellID->1078969133,ExpressionUUID->"8ed66560-0496-4427-9995-85c25fb0e15a"],

Cell["particle manipulation", "SearchTerms",
 CellChangeTimes->{{3.712758502335486*^9, 3.712758516409938*^9}},
 CellID->1651977216,ExpressionUUID->"8aed4088-38bf-4460-bac8-b957d7f337c7"],

Cell["billiards", "SearchTerms",
 CellChangeTimes->{{3.712758502335486*^9, 3.712758516403821*^9}, {
  3.712759184146854*^9, 3.712759185265789*^9}},
 CellID->119283221,ExpressionUUID->"ea7cc816-b554-4d9a-8c83-4bf59924ac57"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection",ExpressionUUID->"5a932c43-c111-4bcb-b74d-99cc3087bd95"],

Cell[TextData[ButtonBox["Circle",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/Circle.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/Circle.html"]], "RelatedLinks",
 CellChangeTimes->{{3.7127592152137337`*^9, 3.71275922331411*^9}},
 CellID->1836540886,ExpressionUUID->"e41abb0e-3e7a-4fb1-aad8-e74a3ff31005"],

Cell[TextData[ButtonBox["Billiards",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/Billiards.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/Billiards.html"]], "RelatedLinks",
 CellChangeTimes->{{3.7127592453919487`*^9, 3.712759263941943*^9}},
 CellID->960212671,ExpressionUUID->"b9076192-4bcf-4f33-bfcc-d3c07d209e41"],

Cell[TextData[ButtonBox["Illumination Problem",
 BaseStyle->"Hyperlink",
 ButtonData->{
  "", "http://mathworld.wolfram.com/IlluminationProblem.html"}]], \
"RelatedLinks",
 CellChangeTimes->{{3.712759356914119*^9, 3.7127593726149*^9}},
 CellID->309414417,ExpressionUUID->"05554d8f-365f-400f-b3ea-3049e5a915a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection",ExpressionUUID->"a165f064-ff51-4ae9-8d6f-0f8fd19b9415"],

Cell["Contributed by: Daniel Bao and Tate Song and Aaron T. Becker", "Author",
 CellChangeTimes->{
  3.35696210375764*^9, {3.432333043774981*^9, 3.432333045441087*^9}, {
   3.712758475696752*^9, 
   3.712758488454652*^9}},ExpressionUUID->"602c8353-3573-4ec3-bc89-\
cd5732e95ed0"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1367, 820},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
Magnification->1.5,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "AutomaticAnimation"->{
  Cell[180365, 4083, 1564, 33, 
  64, "ControlSuggestions", "ExpressionUUID" -> "
   150a8f39-5b03-41dc-969e-23c5f7248837",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[181932, 4118, 1008, 23, 
  64, "ControlSuggestions", "ExpressionUUID" -> "0ffdfea0-405d-415f-bba8-
   a6b1aca8285e",
   CellTags->"BookmarkAnimation"]},
 "CreateAndDeleteLocators"->{
  Cell[178204, 4025, 739, 18, 
  64, "ControlSuggestions", "ExpressionUUID" -> "4c2fac1a-6c3f-4dab-9426-
   ca6283a32332",
   CellTags->"CreateAndDeleteLocators"]},
 "DragLocators"->{
  Cell[177722, 4009, 479, 14, 
  64, "ControlSuggestions", "ExpressionUUID" -> "297c9eb7-0715-4053-
   a66f-936a65a58792",
   CellTags->"DragLocators"]},
 "GamepadControls"->{
  Cell[179893, 4070, 469, 11, 
  64, "ControlSuggestions", "ExpressionUUID" -> "a70b80e3-0bf2-44aa-
   bc93-9c90a25ff4ff",
   CellTags->"GamepadControls"]},
 "ResizeImages"->{
  Cell[176523, 3976, 410, 10, 
  64, "ControlSuggestions", "ExpressionUUID" -> "62bb3923-463e-4bf6-ba6a-
   bed8c7f52af7",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[176936, 3988, 783, 19, 
  64, "ControlSuggestions", "ExpressionUUID" -> "8a154714-048a-4ec1-
   ab2f-804be21464db",
   CellTags->"RotateAndZoomIn3D"]},
 "SliderZoom"->{
  Cell[178946, 4045, 944, 23, 
  64, "ControlSuggestions", "ExpressionUUID" -> "bc6b60d1-72a2-4afa-bf30-
   db77e49ac078",
   CellTags->"SliderZoom"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"AutomaticAnimation", 185810, 4220},
 {"BookmarkAnimation", 185995, 4225},
 {"CreateAndDeleteLocators", 186185, 4230},
 {"DragLocators", 186369, 4235},
 {"GamepadControls", 186545, 4240},
 {"ResizeImages", 186721, 4245},
 {"RotateAndZoomIn3D", 186899, 4250},
 {"SliderZoom", 187075, 4255}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 271, 6, 158, "DemoTitle", "ExpressionUUID" -> \
"89e03aa6-ee03-45ec-ba3b-82970217c5b8"],
Cell[CellGroupData[{
Cell[876, 32, 88, 0, 421, "InitializationSection", "ExpressionUUID" -> \
"5b5fa80d-a280-4c8e-bd8d-b5194d20da7d"],
Cell[967, 34, 32179, 788, 2840, "Input", "ExpressionUUID" -> \
"57898fcb-d24f-4f39-9f56-daebe5cddfb3",
 CellID->1697015281]
}, Open  ]],
Cell[CellGroupData[{
Cell[33183, 827, 84, 0, 353, "ManipulateSection", "ExpressionUUID" -> \
"680265a2-4154-42a6-8394-1dd8a23b7be4"],
Cell[CellGroupData[{
Cell[33292, 831, 26259, 612, 2066, "Input", "ExpressionUUID" -> \
"85bec0b2-2d91-424a-b183-ffb448604810"],
Cell[59554, 1445, 20693, 431, 647, "Output", "ExpressionUUID" -> \
"05575ac2-996e-4051-8fb3-b476543f824d",
 CellID->205727611]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80296, 1882, 91, 0, 256, "ManipulateCaptionSection", "ExpressionUUID" -> \
"24dc8994-46f5-44f1-aa81-e4b6eaf09cb1"],
Cell[80390, 1884, 863, 16, 118, "ManipulateCaption", "ExpressionUUID" -> \
"07ae0970-96c8-4b6e-b9bd-874028bc60c4"]
}, Open  ]],
Cell[81268, 1903, 83, 0, 259, "ThumbnailSection", "ExpressionUUID" -> \
"7164f042-3d4f-4fea-b813-686c8e1d413a"],
Cell[CellGroupData[{
Cell[81376, 1907, 83, 0, 203, "SnapshotsSection", "ExpressionUUID" -> \
"de376d82-a2ce-40c5-ae9e-798a05450000"],
Cell[81462, 1909, 18800, 389, 970, "Output", "ExpressionUUID" -> \
"823ab04e-d7f3-40c1-9ac6-52e893dae1a1",
 CellID->1483989157],
Cell[100265, 2300, 18870, 391, 1813, "Output", "ExpressionUUID" -> \
"64caf135-01d0-48df-b3e4-8802b0eb503c",
 CellID->530685441],
Cell[119138, 2693, 18866, 391, 1813, "Output", "ExpressionUUID" -> \
"1bcaeb86-2e31-43a4-bc97-873d6cd6b823",
 CellID->722475178],
Cell[138007, 3086, 18839, 390, 1102, "Output", "ExpressionUUID" -> \
"59fe4bb2-26e2-4312-b6e3-908d1fc6d1e1",
 CellID->1270197132],
Cell[156849, 3478, 330, 7, 42, "Message", "ExpressionUUID" -> \
"dbea49e6-811f-44b6-8637-9b2c3a43fffa",
 CellID->75644595],
Cell[157182, 3487, 330, 7, 42, "Message", "ExpressionUUID" -> \
"b4ad5576-19aa-40d2-9837-a3b2259615af",
 CellID->526668773],
Cell[157515, 3496, 330, 7, 42, "Message", "ExpressionUUID" -> \
"d47f9119-9d3c-4888-9f01-0c4fc8473d25",
 CellID->200566274],
Cell[157848, 3505, 425, 8, 42, "Message", "ExpressionUUID" -> \
"31653e66-05c4-4f1e-8766-e115068695dd",
 CellID->116373377],
Cell[158276, 3515, 332, 7, 42, "Message", "ExpressionUUID" -> \
"721347ad-4c00-42d4-84c7-770febeae21e",
 CellID->105237640],
Cell[158611, 3524, 332, 7, 42, "Message", "ExpressionUUID" -> \
"6d18617c-f8a0-4e69-a1ec-a19f6ded89d0",
 CellID->654770800],
Cell[158946, 3533, 332, 7, 42, "Message", "ExpressionUUID" -> \
"9b42969c-9dda-4d36-8363-74b0a107e3db",
 CellID->239454240],
Cell[159281, 3542, 423, 8, 42, "Message", "ExpressionUUID" -> \
"fffc2c4d-bcee-4bfe-86d1-bb3ba69dd8ce",
 CellID->115116314],
Cell[159707, 3552, 329, 7, 42, "Message", "ExpressionUUID" -> \
"12628f37-7aa3-4a35-8e9e-dfd3fba27c95",
 CellID->285892936],
Cell[160039, 3561, 330, 7, 42, "Message", "ExpressionUUID" -> \
"11d5e084-fa92-4ef8-9955-78b6a5e84621",
 CellID->313167365],
Cell[160372, 3570, 328, 7, 42, "Message", "ExpressionUUID" -> \
"b12326e7-57bb-4163-ad9a-9fc27528b719",
 CellID->1134390],
Cell[160703, 3579, 424, 8, 42, "Message", "ExpressionUUID" -> \
"3136a74a-2e6e-42d8-bfc5-51953316b00e",
 CellID->94438515],
Cell[161130, 3589, 331, 7, 42, "Message", "ExpressionUUID" -> \
"ec081178-b95b-4c98-bd29-5b5f3bb8ea5d",
 CellID->257939488],
Cell[161464, 3598, 333, 7, 42, "Message", "ExpressionUUID" -> \
"fdb8ed61-b5cd-47bc-ae46-8a3d8d968ccc",
 CellID->324066474],
Cell[161800, 3607, 331, 7, 42, "Message", "ExpressionUUID" -> \
"b07e3e32-5f19-4e72-b2d9-447a2f70a0b9",
 CellID->320175543],
Cell[162134, 3616, 423, 8, 42, "Message", "ExpressionUUID" -> \
"90a8f698-1f66-4c51-b519-24c370a93a4f",
 CellID->90494497],
Cell[162560, 3626, 331, 7, 42, "Message", "ExpressionUUID" -> \
"659e04ef-262f-430a-a6ac-bee42551d8c2",
 CellID->200196842],
Cell[162894, 3635, 332, 7, 42, "Message", "ExpressionUUID" -> \
"856eae6d-d16a-49c9-8f02-10d19761dc1b",
 CellID->56402983],
Cell[163229, 3644, 330, 7, 42, "Message", "ExpressionUUID" -> \
"20d8b62b-6b45-4595-ad3e-e2afe64b2666",
 CellID->93079506],
Cell[163562, 3653, 424, 8, 42, "Message", "ExpressionUUID" -> \
"5735ab19-572a-4d84-8a21-750b79cf3ff2",
 CellID->419704165],
Cell[163989, 3663, 334, 7, 42, "Message", "ExpressionUUID" -> \
"6e55d48e-124f-4866-8842-0127e94e98e7",
 CellID->1008230685],
Cell[164326, 3672, 329, 7, 42, "Message", "ExpressionUUID" -> \
"695fd0e5-8e3f-4110-ada0-6bbd862df45b",
 CellID->7069697],
Cell[164658, 3681, 332, 7, 42, "Message", "ExpressionUUID" -> \
"5e60ba86-1a4f-47fc-b572-18c7545f8bc0",
 CellID->80561186],
Cell[164993, 3690, 424, 8, 42, "Message", "ExpressionUUID" -> \
"15b0b2e1-60c9-4e9c-8ac7-c25e7f29189f",
 CellID->185599658],
Cell[165420, 3700, 331, 7, 42, "Message", "ExpressionUUID" -> \
"697f3657-35e6-47f8-9980-4e4c51dce305",
 CellID->496210364],
Cell[165754, 3709, 331, 7, 42, "Message", "ExpressionUUID" -> \
"73d375d1-3098-4ad0-be6c-19bd4cb9a9a9",
 CellID->186742169],
Cell[166088, 3718, 333, 7, 42, "Message", "ExpressionUUID" -> \
"2f11c926-58e8-47d3-9542-9c3de35b805a",
 CellID->240978432],
Cell[166424, 3727, 424, 8, 42, "Message", "ExpressionUUID" -> \
"9f17a633-d24e-4564-8f28-c91823b8af59",
 CellID->310372575],
Cell[166851, 3737, 331, 7, 42, "Message", "ExpressionUUID" -> \
"b3c7a9f6-862b-4565-bba3-49472b89be98",
 CellID->360712555],
Cell[167185, 3746, 333, 7, 42, "Message", "ExpressionUUID" -> \
"886da45b-8a53-488a-8114-31e47ed5dba5",
 CellID->195991562],
Cell[167521, 3755, 333, 7, 42, "Message", "ExpressionUUID" -> \
"f66f3653-0b93-440a-889e-e4c9ac5145d8",
 CellID->334729242],
Cell[167857, 3764, 426, 8, 42, "Message", "ExpressionUUID" -> \
"a26d84d1-f2ed-40cd-aabd-64accaa16943",
 CellID->534982691],
Cell[168286, 3774, 334, 7, 42, "Message", "ExpressionUUID" -> \
"5973e878-2ee9-490b-a99f-af96a7daa80f",
 CellID->136946770],
Cell[168623, 3783, 334, 7, 42, "Message", "ExpressionUUID" -> \
"d80693c5-3f49-4351-abe3-44daac6477e7",
 CellID->572953024],
Cell[168960, 3792, 334, 7, 42, "Message", "ExpressionUUID" -> \
"e98deeae-4e68-4ed5-850e-4fcf9d4412b0",
 CellID->350716406],
Cell[169297, 3801, 427, 8, 42, "Message", "ExpressionUUID" -> \
"490e7014-1739-4acf-b730-36901d71a19c",
 CellID->759076660],
Cell[169727, 3811, 333, 7, 42, "Message", "ExpressionUUID" -> \
"2fb6d9d5-fc3d-453c-97c9-5b9a4c7322a9",
 CellID->11541251],
Cell[170063, 3820, 332, 7, 42, "Message", "ExpressionUUID" -> \
"f209b368-8e17-4ed1-b859-db71b098408a",
 CellID->359512102],
Cell[170398, 3829, 334, 7, 42, "Message", "ExpressionUUID" -> \
"6e3385d6-2167-4296-9699-ef759d939cb6",
 CellID->450924606],
Cell[170735, 3838, 425, 8, 42, "Message", "ExpressionUUID" -> \
"f37521ea-7490-4815-a7db-898f36d93748",
 CellID->331605437],
Cell[171163, 3848, 333, 7, 42, "Message", "ExpressionUUID" -> \
"225fc735-3bba-4b1d-a3c8-0959dc1494bf",
 CellID->546080835],
Cell[171499, 3857, 332, 7, 42, "Message", "ExpressionUUID" -> \
"f54df312-e0f1-4c47-b53b-a036db2fe7d9",
 CellID->23010566],
Cell[171834, 3866, 331, 7, 42, "Message", "ExpressionUUID" -> \
"579c35ae-3f17-44ef-8191-6a572e40402a",
 CellID->133951249],
Cell[172168, 3875, 426, 8, 42, "Message", "ExpressionUUID" -> \
"b33c4859-2190-4d05-b857-83bd6ec2d97e",
 CellID->284204562],
Cell[172597, 3885, 332, 7, 42, "Message", "ExpressionUUID" -> \
"ed90fcff-2b95-48b6-b635-222909af78bf",
 CellID->17647194],
Cell[172932, 3894, 331, 7, 42, "Message", "ExpressionUUID" -> \
"2b62f75a-0568-43e7-b159-889fe6899a01",
 CellID->546089921],
Cell[173266, 3903, 330, 7, 42, "Message", "ExpressionUUID" -> \
"d859eb2b-88f6-4faa-a2d7-b21160c65cbd",
 CellID->21969531],
Cell[173599, 3912, 425, 8, 42, "Message", "ExpressionUUID" -> \
"03dc5d87-9239-4c82-838f-6206427335b3",
 CellID->63841815]
}, Open  ]],
Cell[CellGroupData[{
Cell[174061, 3925, 81, 0, 802, "DetailsSection", "ExpressionUUID" -> \
"1b037800-e016-474f-baa3-2440663021ba"],
Cell[174145, 3927, 165, 2, 51, "DetailNotes", "ExpressionUUID" -> \
"1c5e5ab8-0a2d-4c62-a010-26fdbd52ca95",
 CellID->1190852696],
Cell[174313, 3931, 948, 14, 231, "DetailNotes", "ExpressionUUID" -> \
"371ecda0-a7b1-4a0d-aa6a-fbae8b8e0a64",
 CellID->829621493],
Cell[175264, 3947, 278, 4, 51, "DetailNotes", "ExpressionUUID" -> \
"c2c4ac6c-816d-442c-bd35-5e2ff8956965",
 CellID->110179048],
Cell[175545, 3953, 846, 16, 180, "DetailNotes", "ExpressionUUID" -> \
"aae2d56c-4f0b-4c59-a3d2-e341d03a94a6",
 CellID->2037994890]
}, Open  ]],
Cell[CellGroupData[{
Cell[176428, 3974, 92, 0, 294, "ControlSuggestionsSection", "ExpressionUUID" \
-> "b602abe7-2deb-48f5-bb64-339beecf5bb2"],
Cell[176523, 3976, 410, 10, 64, "ControlSuggestions", "ExpressionUUID" -> \
"62bb3923-463e-4bf6-ba6a-bed8c7f52af7",
 CellTags->"ResizeImages"],
Cell[176936, 3988, 783, 19, 64, "ControlSuggestions", "ExpressionUUID" -> \
"8a154714-048a-4ec1-ab2f-804be21464db",
 CellTags->"RotateAndZoomIn3D"],
Cell[177722, 4009, 479, 14, 64, "ControlSuggestions", "ExpressionUUID" -> \
"297c9eb7-0715-4053-a66f-936a65a58792",
 CellTags->"DragLocators"],
Cell[178204, 4025, 739, 18, 64, "ControlSuggestions", "ExpressionUUID" -> \
"4c2fac1a-6c3f-4dab-9426-ca6283a32332",
 CellTags->"CreateAndDeleteLocators"],
Cell[178946, 4045, 944, 23, 64, "ControlSuggestions", "ExpressionUUID" -> \
"bc6b60d1-72a2-4afa-bf30-db77e49ac078",
 CellTags->"SliderZoom"],
Cell[179893, 4070, 469, 11, 64, "ControlSuggestions", "ExpressionUUID" -> \
"a70b80e3-0bf2-44aa-bc93-9c90a25ff4ff",
 CellTags->"GamepadControls"],
Cell[180365, 4083, 1564, 33, 64, "ControlSuggestions", "ExpressionUUID" -> \
"150a8f39-5b03-41dc-969e-23c5f7248837",
 CellTags->"AutomaticAnimation"],
Cell[181932, 4118, 1008, 23, 64, "ControlSuggestions", "ExpressionUUID" -> \
"0ffdfea0-405d-415f-bba8-a6b1aca8285e",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182977, 4146, 85, 0, 370, "SearchTermsSection", "ExpressionUUID" -> \
"b942ea60-753e-4d8b-8b9e-6ab6a7261694"],
Cell[183065, 4148, 179, 2, 51, "SearchTerms", "ExpressionUUID" -> \
"2e7faf3d-de8d-4162-a639-b031a9740157",
 CellID->714373906],
Cell[183247, 4152, 177, 2, 51, "SearchTerms", "ExpressionUUID" -> \
"8ed66560-0496-4427-9995-85c25fb0e15a",
 CellID->1078969133],
Cell[183427, 4156, 186, 2, 51, "SearchTerms", "ExpressionUUID" -> \
"8aed4088-38bf-4460-bac8-b957d7f337c7",
 CellID->1651977216],
Cell[183616, 4160, 222, 3, 51, "SearchTerms", "ExpressionUUID" -> \
"ea7cc816-b554-4d9a-8c83-4bf59924ac57",
 CellID->119283221]
}, Open  ]],
Cell[CellGroupData[{
Cell[183875, 4168, 86, 0, 334, "RelatedLinksSection", "ExpressionUUID" -> \
"5a932c43-c111-4bcb-b74d-99cc3087bd95"],
Cell[183964, 4170, 350, 6, 51, "RelatedLinks", "ExpressionUUID" -> \
"e41abb0e-3e7a-4fb1-aad8-e74a3ff31005",
 CellID->1836540886],
Cell[184317, 4178, 359, 6, 51, "RelatedLinks", "ExpressionUUID" -> \
"b9076192-4bcf-4f33-bfcc-d3c07d209e41",
 CellID->960212671],
Cell[184679, 4186, 310, 6, 51, "RelatedLinks", "ExpressionUUID" -> \
"05554d8f-365f-400f-b3ea-3049e5a915a7",
 CellID->309414417]
}, Open  ]],
Cell[CellGroupData[{
Cell[185026, 4197, 80, 0, 334, "AuthorSection", "ExpressionUUID" -> \
"a165f064-ff51-4ae9-8d6f-0f8fd19b9415"],
Cell[185109, 4199, 279, 5, 51, "Author", "ExpressionUUID" -> \
"602c8353-3573-4ec3-bc89-cd5732e95ed0"]
}, Open  ]]
}, Open  ]]
}
]
*)

