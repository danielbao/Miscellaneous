(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    201209,       4564]
NotebookOptionsPosition[    189252,       4263]
NotebookOutlinePosition[    191403,       4329]
CellTagsIndexPosition[    191067,       4317]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Spreading Particles in a Disc with Global Inputs and Bounded Error \
\>", "DemoTitle",
 CellChangeTimes->{{3.712756850926078*^9, 3.712756892307831*^9}, {
  3.712756948031412*^9, 
  3.712756957302475*^9}},ExpressionUUID->"1116befa-872b-4c73-8b24-\
383d1725f14b"],

Cell[CellGroupData[{

Cell["", "InitializationSection",ExpressionUUID->"b9ba872a-72c7-434e-b555-ee4310277ffd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"angToDispArc", "[", 
    RowBox[{"ptAng_", ",", "disp_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]L", ",", "\[Beta]R", ",", "aL", ",", "aR"}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "if", " ", "swarm", " ", "starts", " ", "at", " ", "pt", " ", "given", 
        " ", "by", " ", "ptAng"}], ",", " ", 
       RowBox[{"moves", " ", "in", " ", "direction", " ", "\[Theta]"}], ",", 
       " ", 
       RowBox[{"with", " ", "dispersion", " ", "disp"}], ",", " ", 
       RowBox[{
       "gives", " ", "the", " ", "left", " ", "and", " ", "right", " ", "end",
         " ", "points", " ", "of", " ", "the", " ", "arc", " ", 
        RowBox[{"(", 
         RowBox[{"aL", ",", "aR"}], ")"}], " ", "where", " ", "the", " ", 
        "swarm", " ", "hits"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Beta]L", "=", " ", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "+", "disp", "+", "\[Pi]", "-", "ptAng"}], 
           "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "+", "disp", "+", "\[Pi]", "-", "ptAng"}], 
           "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Beta]L", "=", 
       RowBox[{"\[Theta]", "+", "disp", "+", "\[Pi]", "-", "ptAng"}]}], ";", 
      RowBox[{"\[Beta]L", "=", 
       RowBox[{"\[Beta]L", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Beta]L", ">", "\[Pi]"}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], "\[Pi]"}], ",", "0"}], "]"}], "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Beta]L", "<", 
           RowBox[{"-", "\[Pi]"}]}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Internal", " ", "Angle", " ", "from", " ", "left", " ", "hit", " ", 
        "point", " ", "to", " ", "the", " ", "origin"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"aL", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "\[Beta]L", "]"}], "\[GreaterEqual]", " ", 
          RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", "ptAng", ",", 
         RowBox[{"ptAng", "-", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"2", " ", "\[Beta]L"}]}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"\[Beta]R", "=", " ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "-", "disp", "+", "\[Pi]", "-", "ptAng"}], 
            "]"}], ",", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "-", "disp", "+", "\[Pi]", "-", "ptAng"}], 
            "]"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Beta]R", "=", " ", 
       RowBox[{"\[Theta]", "-", "disp", "+", "\[Pi]", "-", "ptAng"}]}], ";", 
      RowBox[{"\[Beta]R", "=", 
       RowBox[{"\[Beta]R", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Beta]R", ">", "\[Pi]"}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], "\[Pi]"}], ",", "0"}], "]"}], "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Beta]R", "<", 
           RowBox[{"-", "\[Pi]"}]}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Internal", " ", "Angle", " ", "from", " ", "right", " ", "hit", " ", 
        "point", " ", "to", " ", "the", " ", "origin"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"aR", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "\[Beta]R", "]"}], "\[GreaterEqual]", " ", 
          RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", "ptAng", ",", 
         RowBox[{"ptAng", "+", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "+", 
            RowBox[{"2", " ", "\[Beta]R"}]}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"aR", " ", "=", " ", 
       RowBox[{"aR", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"aR", ">", "aL"}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"aR", "<", 
          RowBox[{"-", "\[Pi]"}]}], " ", "||", 
         RowBox[{"aL", " ", "<", 
          RowBox[{"-", "\[Pi]"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"aR", "=", 
          RowBox[{"aR", "+", 
           RowBox[{"2", "\[Pi]"}]}]}], ";", 
         RowBox[{"aL", "=", 
          RowBox[{"aL", "+", 
           RowBox[{"2", "\[Pi]"}]}]}]}]}], " ", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"aL", "<", "aR"}], ",", 
          RowBox[{"aL", " ", "=", " ", 
           RowBox[{"aL", "+", 
            RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"aL", ",", "aR"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"angleToPt", "[", "\[Theta]_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ptToAng", "[", "ptin_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "pt", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pt", " ", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Norm", "[", "ptin", "]"}], ">", "0"}], ",", " ", 
         RowBox[{"ptin", "/", 
          RowBox[{"Norm", "[", "ptin", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"pt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{
        "pt", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       "]"}]}]}], 
    RowBox[{"(*", 
     RowBox[{"origin", " ", "to", " ", "the", " ", "starting", " ", "pt"}], 
     "*)"}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isAngleInArc", "[", 
    RowBox[{"aLin_", ",", "aR_", ",", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"aL", ",", 
       RowBox[{"\[Epsilon]", "=", "0.001"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"Assume", " ", "aL"}], ">", "aR"}], ",", 
       RowBox[{
        RowBox[{"aL", "-", "aR"}], " ", "<", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], " ", "-", "\[Pi]"}], "\[LessEqual]", "aR", 
        "\[LessEqual]", "\[Pi]"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "\[LessEqual]", "\[Alpha]", "\[LessEqual]", 
        "\[Pi]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"aL", "=", 
       RowBox[{"aLin", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"aLin", "<", "aR"}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "\[Epsilon]", " ", "is", " ", "needed", " ", "because", " ", "Inverse",
         " ", "Trig", " ", "on", " ", "an", " ", "angle", " ", "is", " ", 
        "not", " ", "exactly", " ", "the", " ", "same", " ", "as", " ", 
        "original", " ", "angle"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"aR", "-", "\[Epsilon]"}], "\[LessEqual]", "\[Alpha]", 
         "\[LessEqual]", " ", 
         RowBox[{"aL", "+", "\[Epsilon]"}]}], " ", ")"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"aR", "-", "\[Epsilon]"}], "\[LessEqual]", 
         RowBox[{"\[Alpha]", "-", 
          RowBox[{"2", "\[Pi]"}]}], "\[LessEqual]", " ", 
         RowBox[{"aL", "+", "\[Epsilon]"}]}], " ", ")"}], " ", "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"aR", "-", "\[Epsilon]"}], "\[LessEqual]", 
         RowBox[{"\[Alpha]", "+", 
          RowBox[{"2", "\[Pi]"}]}], "\[LessEqual]", " ", 
         RowBox[{"aL", "+", "\[Epsilon]"}]}], " ", ")"}]}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simprojection", "[", 
    RowBox[{"ptLAng_", ",", "ptRAngIn_", ",", "disp_", ",", "\[Theta]_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rA", ",", "lA"}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Projects", " ", "arc", " ", 
       RowBox[{"(", 
        RowBox[{"ptLin", ",", "ptRin"}], ")"}], " ", "that", " ", "moves", 
       " ", "in", " ", "direction", " ", "\[Theta]", " ", "with", " ", 
       "dispersion", " ", "disp"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rA", ",", "lA"}], "}"}], "=", 
       RowBox[{"projMath", "[", 
        RowBox[{"ptLAng", ",", "ptRAngIn", ",", "disp", ",", "\[Theta]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lA", "-", "rA"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"projMath", "[", 
    RowBox[{"ptLAng_", ",", "ptRAng_", ",", "disp_", ",", "\[Theta]_"}], 
    "]"}], ":=", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Projects", " ", "arc", " ", 
      RowBox[{"(", 
       RowBox[{"ptLin", ",", "ptRin"}], ")"}], " ", "that", " ", "moves", " ",
       "in", " ", "direction", " ", "\[Theta]", " ", "with", " ", 
      "dispersion", " ", "disp", " ", "assumes", " ", "ptLAng"}], " ", ">", 
     " ", "ptRAng"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "aLhL", ",", "aLhR", ",", "aRhL", ",", "aRhR", ",", "t1", ",", "t2", 
       ",", "rA", ",", "lA"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aLhL", ",", "aLhR"}], "}"}], "=", 
       RowBox[{"angToDispArc", "[", 
        RowBox[{"ptLAng", ",", "disp", ",", "\[Theta]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aRhL", ",", "aRhR"}], "}"}], "=", 
       RowBox[{"angToDispArc", "[", 
        RowBox[{"ptRAng", ",", "disp", ",", "\[Theta]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"(*", 
        RowBox[{
        "If", " ", "end", " ", "points", " ", "from", " ", "left", " ", 
         "endpt", " ", "are", " ", "inside", " ", "arc", " ", "from", " ", 
         "right", " ", 
         RowBox[{"endpoint", ":"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"isAngleInArc", "[", 
          RowBox[{"aRhL", ",", "aRhR", ",", "aLhL"}], "]"}], "&&", 
         RowBox[{"isAngleInArc", "[", 
          RowBox[{"aRhL", ",", "aRhR", ",", "aLhR"}], "]"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rA", " ", "=", "aRhR"}], ";", "\[IndentingNewLine]", 
         RowBox[{"lA", " ", "=", " ", "aRhL"}]}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{"(*", 
          RowBox[{
          "If", " ", "end", " ", "points", " ", "from", " ", "right", " ", 
           "endpt", " ", "are", " ", "inside", " ", "arc", " ", "from", " ", 
           "left", " ", 
           RowBox[{"endpoint", ":"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"isAngleInArc", "[", 
            RowBox[{"aLhL", ",", "aLhR", ",", "aRhL"}], "]"}], "&&", 
           RowBox[{"isAngleInArc", "[", 
            RowBox[{"aLhL", ",", "aLhR", ",", "aRhR"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"rA", " ", "=", "aLhR"}], ";", "\[IndentingNewLine]", 
           RowBox[{"lA", " ", "=", " ", "aLhL"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
              RowBox[{
              "If", " ", "all", " ", "end", " ", "points", " ", "from", " ", 
               "left"}], " ", "&"}], " ", "right", " ", "are", " ", "inside", 
             " ", "original", " ", 
             RowBox[{"arc", ":"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"isAngleInArc", "[", 
              RowBox[{"ptLAng", ",", "ptRAng", ",", "aRhL"}], "]"}], "&&", 
             RowBox[{"isAngleInArc", "[", 
              RowBox[{"ptLAng", ",", "ptRAng", ",", "aLhR"}], "]"}], "&&", 
             "\[IndentingNewLine]", 
             RowBox[{"isAngleInArc", "[", 
              RowBox[{"ptLAng", ",", "ptRAng", ",", "aRhR"}], "]"}], "&&", 
             RowBox[{"isAngleInArc", "[", 
              RowBox[{"ptLAng", ",", "ptRAng", ",", "aLhL"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"rA", " ", "=", "aRhR"}], ";", "\[IndentingNewLine]", 
             RowBox[{"lA", " ", "=", " ", "aLhL"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"rA", " ", "=", "aLhR"}], ";", 
             RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"lA", " ", "=", " ", "aRhL"}]}]}], "\[IndentingNewLine]",
            "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"check", " ", "for", " ", "tangent", " ", "points"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"t1", " ", "=", 
       RowBox[{"\[Theta]", "+", "disp", "+", 
        RowBox[{"\[Pi]", "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"t2", " ", "=", 
       RowBox[{"\[Theta]", "-", "disp", "+", 
        RowBox[{"3", 
         RowBox[{"\[Pi]", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rA", " ", "=", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"isAngleInArc", "[", 
          RowBox[{"ptLAng", ",", "ptRAng", ",", "t2"}], "]"}], ",", "t2", ",",
          "rA"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lA", " ", "=", " ", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"isAngleInArc", "[", 
          RowBox[{"ptLAng", ",", "ptRAng", ",", "t1"}], "]"}], ",", "t1", ",",
          "lA"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ensure", " ", "lA"}], ">", "rA"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"lA", "=", 
       RowBox[{"lA", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lA", "<", "rA"}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lA", "=", 
       RowBox[{"lA", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lA", "<", "rA"}], ",", 
          RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lA", "=", 
       RowBox[{"lA", "+", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lA", ">", 
           RowBox[{
            RowBox[{"2", "\[Pi]"}], "+", "rA"}]}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], "\[Pi]"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"rA", ",", "lA"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "**", " ", "DRAWING"}], 
    " ", 
    RowBox[{
    "CODE", " ", "**", "**", "**", "**", "**", "**", "**", "**", "**"}]}], 
   "*****)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"drawTangentPt", "[", 
   RowBox[{"aL_", ",", "aR_", ",", "tp_", ",", "disp_", ",", "\[Theta]_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pt", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "tp", "]"}], ",", 
        RowBox[{"Sin", "[", "tp", "]"}]}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"draw", " ", "the", " ", "tangent", " ", 
       RowBox[{"points", ".", " ", "Empty"}], " ", "circles", " ", "if", " ", 
       "not", " ", "in", " ", "originating", " ", "arc"}], ",", " ", 
      RowBox[{"filled", " ", "otherwise"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"isAngleInArc", "[", 
       RowBox[{"aL", ",", "aR", ",", "tp"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"drawDispArc", "[", 
         RowBox[{"tp", ",", "disp", ",", "\[Theta]"}], "]"}], ",", 
        RowBox[{"PointSize", "[", "Large", "]"}], ",", 
        RowBox[{"Point", "[", "pt", "]"}]}], " ", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Circle", "[", 
        RowBox[{"pt", ",", 
         RowBox[{"1", "/", "50"}]}], "]"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"drawMovementVectors", "[", 
   RowBox[{"pt_", ",", "\[Theta]_", ",", "disp_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Red", ",", " ", 
      RowBox[{"Disk", "[", 
       RowBox[{"pt", ",", 
        RowBox[{"1", "/", "5"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]", "-", "disp"}], ",", 
          RowBox[{"\[Theta]", "+", "disp"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "Black", ",", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<\[Delta]\>\"", ",", 
      RowBox[{"pt", "+", 
       RowBox[{
        RowBox[{"1", "/", "7"}], 
        RowBox[{"angleToPt", "[", 
         RowBox[{"\[Theta]", "+", 
          RowBox[{"disp", "/", "2"}]}], "]"}]}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<\[Delta]\>\"", ",", 
      RowBox[{"pt", "+", 
       RowBox[{
        RowBox[{"1", "/", "7"}], 
        RowBox[{"angleToPt", "[", 
         RowBox[{"\[Theta]", "-", 
          RowBox[{"disp", "/", "2"}]}], "]"}]}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", "Red", ",", 
    RowBox[{"Arrow", "[", 
     RowBox[{"{", 
      RowBox[{"pt", ",", 
       RowBox[{"pt", "+", 
        RowBox[{
         RowBox[{"1", "/", "3"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}]}], "}"}], 
     "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"drawDispArc", "[", 
   RowBox[{"ptAng_", ",", "disp_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"aL", ",", "aR"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"aL", ",", "aR"}], "}"}], "=", 
      RowBox[{"angToDispArc", "[", 
       RowBox[{"ptAng", ",", "disp", ",", "\[Theta]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Large", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{"(*", 
         RowBox[{
         "area", " ", "the", " ", "swarm", " ", "covers", " ", "as", " ", 
          "it", " ", "moves"}], "*)"}], 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"angleToPt", "[", "ptAng", "]"}], ",", "5", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Theta]", "-", "disp"}], ",", 
             RowBox[{"\[Theta]", "+", "disp"}]}], "}"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"arc", " ", "the", " ", "swarm", " ", "ends", " ", "on"}], 
         "*)"}], 
        RowBox[{"Orange", ",", "Thick", ",", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", ".98", ",", 
           RowBox[{"{", 
            RowBox[{"aR", ",", "aL"}], "}"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"left", " ", "end", " ", "point"}], "*)"}], 
        RowBox[{"Green", ",", 
         RowBox[{"Point", "[", 
          RowBox[{".98", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "aL", "]"}], ",", 
             RowBox[{"Sin", "[", "aL", "]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"right", " ", "end", " ", "point"}], "*)"}], 
        RowBox[{"Purple", ",", 
         RowBox[{"Point", "[", 
          RowBox[{".98", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "aR", "]"}], ",", 
             RowBox[{"Sin", "[", "aR", "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawCircleMask", "=", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
       "a", " ", "light", " ", "grey", " ", "square", " ", "with", " ", "a", 
        " ", "disk"}], "-", 
       RowBox[{
       "shaped", " ", "hole", " ", "with", " ", "red", " ", "edges"}]}], ",", 
      
      RowBox[{
      "creates", " ", "a", " ", "blank", " ", "spot", " ", "in", " ", 
       "middle", " ", "with", " ", "radius", " ", "1"}]}], "*)"}], 
    RowBox[{"{", 
     RowBox[{"LightGray", ",", 
      RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
      RowBox[{"FilledCurve", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Line", "[", 
           RowBox[{"2", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"BSplineCurve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"SplineDegree", "\[Rule]", "2"}], ",", 
            RowBox[{"SplineKnots", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", 
               RowBox[{"1", "/", "4"}], ",", 
               RowBox[{"1", "/", "2"}], ",", 
               RowBox[{"1", "/", "2"}], ",", 
               RowBox[{"3", "/", "4"}], ",", "1", ",", "1", ",", "1"}], 
              "}"}]}], ",", 
            RowBox[{"SplineWeights", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", ".5", ",", ".5", ",", "1", ",", ".5", ",", ".5", ",", 
               "1"}], "}"}]}]}], "]"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"loc", "[", "col_", "]"}], ":=", 
   RowBox[{"(*", " ", 
    RowBox[{"a", " ", "colored", " ", "locator", " ", "icon"}], "*)"}], 
   RowBox[{"ToExpression", "@", 
    RowBox[{"GraphicsBox", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"col", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
          RowBox[{"Antialiasing", "\[Rule]", "False"}], ",", 
          RowBox[{"LineBox", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "10"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "10"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "10"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", "0"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "0"}], "}"}]}], "}"}]}], "}"}], "]"}], ",", 
          RowBox[{"Antialiasing", "\[Rule]", "True"}], ",", 
          RowBox[{"CircleBox", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", "5"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
          RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
          RowBox[{"CircleBox", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", "3"}], "]"}]}], 
         "}"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "17"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.712621853174754*^9, 3.712621858351997*^9}, 
   3.712650745824437*^9, {3.712650812576333*^9, 3.712650826779421*^9}, {
   3.712650983434211*^9, 3.7126510047674637`*^9}, {3.712651146606094*^9, 
   3.712651270696479*^9}, {3.7126513046530247`*^9, 3.712651348650093*^9}, 
   3.7126597293858223`*^9, 3.712659940359516*^9, {3.712659983161488*^9, 
   3.712660003000044*^9}, {3.7126601720171843`*^9, 3.712660204881214*^9}, {
   3.7126602403666058`*^9, 3.712660290398259*^9}, {3.712660351314295*^9, 
   3.71266035895474*^9}, {3.7126868718863573`*^9, 3.712686907891822*^9}, {
   3.712733803282465*^9, 3.7127338243561907`*^9}, {3.712733933736865*^9, 
   3.712733994304962*^9}, {3.7127344153329372`*^9, 3.7127345671408377`*^9}, {
   3.7127345995292892`*^9, 3.712734633687956*^9}, {3.712735084756461*^9, 
   3.7127351127723007`*^9}, {3.712735170664446*^9, 3.712735172919551*^9}, {
   3.712735204955105*^9, 3.71273529932549*^9}, {3.712735342684273*^9, 
   3.7127353446284103`*^9}, {3.712735416279395*^9, 3.712735467296404*^9}, {
   3.712735865820312*^9, 3.7127358906436234`*^9}, {3.7127359455844507`*^9, 
   3.7127359513739443`*^9}, {3.712736129941674*^9, 3.712736132292326*^9}, {
   3.712736872732031*^9, 3.712736877792124*^9}, {3.712736959748145*^9, 
   3.712737004236784*^9}, {3.7127372531712503`*^9, 3.7127372534488287`*^9}, {
   3.7127373031803102`*^9, 3.712737312644376*^9}, {3.7127383624149714`*^9, 
   3.712738376540913*^9}, {3.712738522964571*^9, 3.7127385928543367`*^9}, {
   3.7127388238935432`*^9, 3.712738872704702*^9}, {3.7127393898400497`*^9, 
   3.712739399672284*^9}, {3.712739539089566*^9, 3.712739725354026*^9}, {
   3.712739759411626*^9, 3.712740035068359*^9}, {3.7127400768491163`*^9, 
   3.712740163908307*^9}, {3.712740202085061*^9, 3.712740204818551*^9}, {
   3.712740243549749*^9, 3.712740278136116*^9}, 3.712740559183835*^9, {
   3.712740603737501*^9, 3.712740656910798*^9}, {3.712740917010624*^9, 
   3.7127409211229763`*^9}, {3.712741084981913*^9, 3.71274111633981*^9}, 
   3.712741163364451*^9, {3.712741214182919*^9, 3.7127412232743*^9}, {
   3.712741266865041*^9, 3.7127413035486107`*^9}, {3.7127413541908083`*^9, 
   3.712741355148679*^9}, {3.71274166530585*^9, 3.712741738014649*^9}, {
   3.712741858670355*^9, 3.712741872501082*^9}, {3.7127419142077427`*^9, 
   3.712741942776183*^9}, {3.7127419783260403`*^9, 3.7127419818629208`*^9}, {
   3.712742022984776*^9, 3.712742026040448*^9}, 3.712742057623505*^9, 
   3.712742106572197*^9, 3.712742287885231*^9, 3.712744325076044*^9, {
   3.712744540843858*^9, 3.712744544777207*^9}, {3.712744588080348*^9, 
   3.7127446022068787`*^9}, {3.71274483053629*^9, 3.712744845521636*^9}, {
   3.712744967908514*^9, 3.712745035940843*^9}, {3.712745077563458*^9, 
   3.71274508321929*^9}, {3.712745216880636*^9, 3.712745259346052*^9}, {
   3.712745294631652*^9, 3.712745327433535*^9}, {3.712745426458592*^9, 
   3.712745454831151*^9}, 3.712745491782112*^9, {3.712745766263397*^9, 
   3.712745776853806*^9}, {3.7127458456753073`*^9, 3.712745847410563*^9}, {
   3.712745897458902*^9, 3.7127459059498577`*^9}, {3.712746174590583*^9, 
   3.712746235611372*^9}, {3.712746334550112*^9, 3.712746403053541*^9}, 
   3.712754015268705*^9, {3.712754059541668*^9, 3.7127540658464823`*^9}, {
   3.712754323631556*^9, 3.712754338214858*^9}, {3.712754416377592*^9, 
   3.712754419545517*^9}, 3.712754498472455*^9, {3.7127549814283047`*^9, 
   3.712755024725423*^9}, {3.7127555973287582`*^9, 3.712755600991796*^9}, {
   3.712755830194263*^9, 3.7127558623859787`*^9}, {3.712756014037532*^9, 
   3.712756077831493*^9}, {3.712756140345491*^9, 3.7127561757560797`*^9}, 
   3.712756257156393*^9, {3.7127563604745207`*^9, 3.712756422187972*^9}, {
   3.71275648022023*^9, 3.712756481147134*^9}, {3.712756590420414*^9, 
   3.712756598058182*^9}, 3.712756650573962*^9, 3.712756715525979*^9, {
   3.712756774480654*^9, 3.7127567749517317`*^9}, {3.712756991664147*^9, 
   3.7127570054717407`*^9}, {3.7127570582044353`*^9, 
   3.7127571754820557`*^9}, {3.712757208629757*^9, 3.712757371134172*^9}, {
   3.712757466419517*^9, 3.7127575510347443`*^9}},
 CellID->1697015281,ExpressionUUID->"ceee0ec9-c487-4682-be10-986d57d18a38"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection",ExpressionUUID->"afdf8610-1a8b-40f8-8b19-9aabaa31d6b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ptLAng", ",", "ptRAng", ",", "t1", ",", "t2", ",", "rA", ",", "lA", 
       ",", "lTable", ",", "rTable", ",", "totalTable"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "left", " ", "and", " ", "right", " ", "are", " ", "defined", " ", 
        "from", " ", "the", " ", "center", " ", "facing", " ", 
        RowBox[{"out", ".", "  ", "the"}], " ", "left"}], "  ", ">", "  ", 
       "right"}], "*)"}], "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"ptLAng", "=", 
       RowBox[{"ptToAng", "[", "ptLin", "]"}]}], ";", " ", 
      RowBox[{"ptRAng", "=", 
       RowBox[{"ptToAng", "[", "ptRin", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ptRAng", "=", 
         RowBox[{"ptRAng", "+", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ptRAng", "<", "0"}], ",", 
            RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"ptLAng", "<", " ", "ptRAng"}], ",", 
        RowBox[{"ptLAng", "=", 
         RowBox[{"ptLAng", "+", 
          RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"enforce", " ", "left"}], "  ", ">", "  ", "right"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ptRAng", "<", 
         RowBox[{"ptLAng", "-", 
          RowBox[{"2", "\[Pi]"}]}]}], ",", 
        RowBox[{"ptRAng", "=", 
         RowBox[{"ptRAng", "+", 
          RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"t1", " ", "=", 
       RowBox[{"\[Theta]", "+", "disp", "+", 
        RowBox[{"\[Pi]", "/", "2"}]}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"tangent", " ", "points"}], ",", " ", 
        RowBox[{
        "where", " ", "arc", " ", "can", " ", "break", " ", "away", " ", 
         "from", " ", "edge", " ", 
         RowBox[{"(", 
          RowBox[{"no", " ", "particles", " ", "left"}], ")"}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"t2", " ", "=", 
       RowBox[{"\[Theta]", "-", "disp", "+", 
        RowBox[{"3", 
         RowBox[{"\[Pi]", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rA", ",", "lA"}], "}"}], "=", 
       RowBox[{"projMath", "[", 
        RowBox[{"ptLAng", ",", "ptRAng", ",", "disp", ",", "\[Theta]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lTable", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Cos", "[", "i", "]"}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Sin", "[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "rA", ",", 
           RowBox[{"lA", "+", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"lA", "<", "rA"}], ",", 
              RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}], ",", "0.05"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rTable", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Cos", "[", "i", "]"}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Sin", "[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "ptRAng", ",", "ptLAng", ",", "0.05"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"totalTable", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"rTable", ",", "lTable"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Row", "[", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"drawDispArc", "[", 
                RowBox[{"a", ",", "disp", ",", "\[Theta]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "ptRAng", ",", "ptLAng", ",", 
                 FractionBox[
                  RowBox[{"ptLAng", "-", "ptRAng"}], 
                  RowBox[{"If", "[", 
                   RowBox[{"ShowPaths", ",", "10", ",", "1"}], "]"}]]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"draw", " ", "the", " ", "tangent", " ", 
                RowBox[{"points", ".", " ", "Empty"}], " ", "circles", " ", 
                "if", " ", "not", " ", "in", " ", "originating", " ", "arc"}],
                ",", " ", 
               RowBox[{"filled", " ", "otherwise"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"drawTangentPt", "[", 
              RowBox[{
              "ptLAng", ",", "ptRAng", ",", "t1", ",", "disp", ",", 
               "\[Theta]"}], "]"}], ",", 
             RowBox[{"drawTangentPt", "[", 
              RowBox[{
              "ptLAng", ",", "ptRAng", ",", "t2", ",", "disp", ",", 
               "\[Theta]"}], "]"}], ",", "\[IndentingNewLine]", 
             "drawCircleMask", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"LightBlue", ",", 
               RowBox[{"Polygon", "[", "totalTable", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"draw", " ", "projection"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "\[IndentingNewLine]", 
               RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", "1.04", ",", 
                 RowBox[{"{", 
                  RowBox[{"rA", ",", 
                   RowBox[{"lA", "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"lA", "<", "rA"}], ",", 
                    RowBox[{"2", "\[Pi]"}], ",", "0"}], "]"}]}]}], "}"}]}], 
                "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "arc", " ", "the", " ", "swarm", " ", "starts", " ", "on"}], 
              "*)"}], "Green", ",", 
             RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "1.01", ",", 
               RowBox[{"{", 
                RowBox[{"ptLAng", ",", " ", "ptRAng"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"draw", " ", "movement", " ", "vectors"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"drawMovementVectors", "[", 
              RowBox[{
               RowBox[{"angleToPt", "[", "ptLAng", "]"}], ",", "\[Theta]", 
               ",", "disp"}], "]"}], ",", 
             RowBox[{"drawMovementVectors", "[", 
              RowBox[{
               RowBox[{"angleToPt", "[", "ptRAng", "]"}], ",", "\[Theta]", 
               ",", "disp"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Locator", "[", 
              RowBox[{
               RowBox[{"angleToPt", "[", "ptLAng", "]"}], ",", 
               RowBox[{"loc", "[", "Blue", "]"}]}], "]"}], ",", 
             RowBox[{"Locator", "[", 
              RowBox[{
               RowBox[{"angleToPt", "[", "ptRAng", "]"}], ",", 
               RowBox[{"loc", "[", "Red", "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"1.25", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"simprojection", "[", 
            RowBox[{"ptLAng", ",", "ptRAng", ",", "disp", ",", "\[Phi]"}], 
            "]"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"simprojection", "[", 
             RowBox[{
              RowBox[{"ptToAng", "[", "ptLin", "]"}], ",", 
              RowBox[{"ptToAng", "[", "ptRin", "]"}], ",", "disp", ",", 
              "\[Phi]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]", ",", 
             RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", " ", 
           RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", ".9"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[Pi]"}], "-", ".1"}], ",", 
                RowBox[{"\[Pi]", "+", ".1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".3"}], ",", 
                RowBox[{
                 RowBox[{"2", "\[Pi]"}], "+", ".2"}]}], "}"}]}], "}"}]}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Arc Length\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Prolog", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Green", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "\[Pi]"}], ",", 
                   RowBox[{"ptLAng", "-", "ptRAng"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Pi]", ",", 
                   RowBox[{"ptLAng", "-", "ptRAng"}]}], "}"}]}], "}"}], 
               "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Epilog", "\[Rule]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Darker", "[", "Blue", "]"}], ",", "Dashed", ",", 
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<Min\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{
                    RowBox[{"4", " ", "disp"}], "-", ".2"}]}], "}"}]}], "]"}],
                 ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], ",", 
                    RowBox[{"4", " ", "disp"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Pi]", ",", 
                    RowBox[{"4", " ", "disp"}]}], "}"}]}], "}"}], "]"}], ",", 
                
                RowBox[{"Text", "[", 
                 RowBox[{"\"\<Max\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"\[Pi]", "+", 
                    RowBox[{"2", " ", "disp"}], "+", ".1"}]}], "}"}]}], "]"}],
                 ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Pi]"}], ",", 
                    RowBox[{"\[Pi]", "+", 
                    RowBox[{"2", " ", "disp"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Pi]", ",", 
                    RowBox[{"\[Pi]", "+", 
                    RowBox[{"2", " ", "disp"}]}]}], "}"}]}], "}"}], "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", "Red", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Theta]", ",", 
                   RowBox[{
                    RowBox[{"2", "\[Pi]"}], "-", ".2"}]}], "}"}]}], "}"}], 
               "]"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\<\[Theta]\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"\[Theta]", ",", 
                  RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "}"}]}]}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"disp", ",", ".1", ",", "\"\<\[Delta]\>\""}], "}"}], ",", 
         "0", ",", 
         RowBox[{
          RowBox[{"\[Pi]", "/", "2"}], "-", "0.001"}], ",", ".001", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "240"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", 
           RowBox[{"-", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"-", "3.142"}], ",", "3.142", ",", ".001", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "240"}]}], "}"}]}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ptLin", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", ".3"}], "}"}]}], "}"}], ",", "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ptRin", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", ".3"}]}], "}"}]}], "}"}], ",", "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Propagate\>\"", ",", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"left", ",", "right", ",", "ptRAng", ",", "ptLAng"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ptLAng", "=", 
            RowBox[{"ptToAng", "[", "ptLin", "]"}]}], ";", 
           RowBox[{"ptRAng", "=", 
            RowBox[{"ptToAng", "[", "ptRin", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"ptLAng", "<", " ", "ptRAng"}], ",", 
             RowBox[{"ptLAng", "=", 
              RowBox[{"ptLAng", "+", 
               RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";", " ", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"enforce", " ", "left"}], "  ", ">", "  ", "right"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ptRAng", "<", 
              RowBox[{"ptLAng", "-", 
               RowBox[{"2", "\[Pi]"}]}]}], ",", 
             RowBox[{"ptRAng", "=", 
              RowBox[{"ptRAng", "+", 
               RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"right", ",", "left"}], "}"}], "=", 
            RowBox[{"projMath", "[", 
             RowBox[{"ptLAng", ",", "ptRAng", ",", "disp", ",", "\[Theta]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"ptLin", "=", 
            RowBox[{"angleToPt", "[", "left", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ptRin", "=", 
            RowBox[{"angleToPt", "[", "right", "]"}]}]}]}], "]"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ShowPaths", ",", "False", ",", "\"\<Show Paths\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.712757376174015*^9, {3.712757694859412*^9, 3.7127578218580112`*^9}, {
   3.7131448260628505`*^9, 3.713144871547446*^9}, {3.713145152111251*^9, 
   3.713145213862577*^9}, {3.7131453034062753`*^9, 3.7131453597336645`*^9}, {
   3.7131454223870535`*^9, 3.713145449309023*^9}, {3.7131455550546*^9, 
   3.7131455697007227`*^9}, {3.713145620161696*^9, 
   3.7131456248489904`*^9}},ExpressionUUID->"f3c7711a-74e1-4f15-b675-\
6e7136e64797"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`disp$$ = 
    0.8230000000000001, $CellContext`ptLin$$ = {
    1, 0.3}, $CellContext`ptRin$$ = {1, -0.3}, $CellContext`ShowPaths$$ = 
    False, $CellContext`\[Theta]$$ = -3.142, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`disp$$], 0.1, "\[Delta]"}, 0, 1.5697963267948967`, 
      0.001}, {{
       Hold[$CellContext`\[Theta]$$], -Pi}, -3.142, 3.142, 0.001}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ptLin$$], {1, 0.3}}, Automatic}, {{
       Hold[$CellContext`ptRin$$], {1, -0.3}}, Automatic}, {{
       Hold[$CellContext`ShowPaths$$], False, "Show Paths"}, {True, False}}, {
     
      Hold[
       Row[{
         Button["Propagate", 
          
          Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
           While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
           If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
              Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
              2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {147., 153.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`disp$234760$$ = 0, $CellContext`\[Theta]$234761$$ = 
    0, $CellContext`ShowPaths$234762$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`disp$$ = 
        0.1, $CellContext`ptLin$$ = {1, 0.3}, $CellContext`ptRin$$ = {
         1, -0.3}, $CellContext`ShowPaths$$ = 
        False, $CellContext`\[Theta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`disp$$, $CellContext`disp$234760$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$234761$$, 0], 
        Hold[$CellContext`ShowPaths$$, $CellContext`ShowPaths$234762$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`ptLAng$, $CellContext`ptRAng$, $CellContext`t1$, \
$CellContext`t2$, $CellContext`rA$, $CellContext`lA$, $CellContext`lTable$, \
$CellContext`rTable$, $CellContext`totalTable$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
        While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
        If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
           Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
           2 Pi]; $CellContext`t1$ = $CellContext`\[Theta]$$ + \
$CellContext`disp$$ + 
          Pi/2; $CellContext`t2$ = $CellContext`\[Theta]$$ - \
$CellContext`disp$$ + 
          3 (Pi/2); {$CellContext`rA$, $CellContext`lA$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`lTable$ = Table[{
            N[
             Cos[$CellContext`i]], 
            N[
             
             Sin[$CellContext`i]]}, {$CellContext`i, $CellContext`rA$, \
$CellContext`lA$ + If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0], 
            0.05}]; $CellContext`rTable$ = Table[{
            N[
             Cos[$CellContext`i]], 
            N[
             
             Sin[$CellContext`i]]}, {$CellContext`i, $CellContext`ptRAng$, \
$CellContext`ptLAng$, 0.05}]; $CellContext`totalTable$ = 
         Join[$CellContext`rTable$, $CellContext`lTable$]; Row[{
           Graphics[{
             Table[
              $CellContext`drawDispArc[$CellContext`a, $CellContext`disp$$, \
$CellContext`\[Theta]$$], {$CellContext`a, $CellContext`ptRAng$, \
$CellContext`ptLAng$, ($CellContext`ptLAng$ - $CellContext`ptRAng$)/
               If[$CellContext`ShowPaths$$, 10, 1]}], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t1$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t2$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], $CellContext`drawCircleMask, {LightBlue, 
              Polygon[$CellContext`totalTable$]}, {Blue, 
              Thickness[0.02], 
              
              Circle[{0, 0}, 
               1.04, {$CellContext`rA$, $CellContext`lA$ + 
                If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0]}]}, Green, 
             Thickness[0.01], 
             
             Circle[{0, 0}, 
              1.01, {$CellContext`ptLAng$, $CellContext`ptRAng$}], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptLAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptRAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptLAng$], 
              $CellContext`loc[Blue]], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptRAng$], 
              $CellContext`loc[Red]]}, PlotRange -> 1.25 {{-1, 1}, {-1, 1}}, 
            ImageSize -> 300], 
           Plot[
            $CellContext`simprojection[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`disp$$, $CellContext`\[Phi]], \
{$CellContext`\[Phi], -Pi, Pi}, PlotStyle -> Blue, ImageSize -> 300, 
            AspectRatio -> 0.9, 
            PlotRange -> {{-Pi - 0.1, Pi + 0.1}, {-0.3, 2 Pi + 0.2}}, 
            PlotLabel -> "Arc Length", Prolog -> {Green, 
              
              Line[{{-Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}, {
                Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}}]}, 
            Epilog -> {{
               Darker[Blue], Dashed, 
               Text["Min", {-3, 4 $CellContext`disp$$ - 0.2}], 
               
               Line[{{-Pi, 4 $CellContext`disp$$}, {
                 Pi, 4 $CellContext`disp$$}}], 
               Text["Max", {-3, Pi + 2 $CellContext`disp$$ + 0.1}], 
               
               Line[{{-Pi, Pi + 2 $CellContext`disp$$}, {
                 Pi, Pi + 2 $CellContext`disp$$}}]}, Red, 
              
              Line[{{$CellContext`\[Theta]$$, 0}, {$CellContext`\[Theta]$$, 
                 2 Pi - 0.2}}], 
              Text["\[Theta]", {$CellContext`\[Theta]$$, 2 Pi}]}]}]], 
      "Specifications" :> {{{$CellContext`disp$$, 0.1, "\[Delta]"}, 0, 
         1.5697963267948967`, 0.001, Appearance -> "Labeled", ImageSize -> 
         240, ControlPlacement -> 1}, {{$CellContext`\[Theta]$$, -Pi}, -3.142,
          3.142, 0.001, Appearance -> "Labeled", ImageSize -> 240, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`ptLin$$, {1, 0.3}}, Automatic,
          ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ptRin$$, {1, -0.3}}, Automatic, ControlType -> 
         Locator, Appearance -> 
         None}, {{$CellContext`ShowPaths$$, False, "Show Paths"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Button["Propagate", 
           
           Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
            While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
            If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
               Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
               2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
          Manipulate`Place[3]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{659., {211., 217.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ptToAng[
         Pattern[$CellContext`ptin, 
          Blank[]]] := 
       Module[{$CellContext`pt}, $CellContext`pt = 
          If[Norm[$CellContext`ptin] > 0, $CellContext`ptin/
            Norm[$CellContext`ptin], {1, 0}]; ArcTan[
           Part[$CellContext`pt, 1], 
           Part[$CellContext`pt, 2]]], $CellContext`projMath[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aLhL, $CellContext`aLhR, $CellContext`aRhL, \
$CellContext`aRhR, $CellContext`t1, $CellContext`t2, $CellContext`rA, \
$CellContext`lA}, {$CellContext`aLhL, $CellContext`aLhR} = \
$CellContext`angToDispArc[$CellContext`ptLAng, $CellContext`disp, \
$CellContext`\[Theta]]; {$CellContext`aRhL, $CellContext`aRhR} = \
$CellContext`angToDispArc[$CellContext`ptRAng, $CellContext`disp, \
$CellContext`\[Theta]]; If[
           And[
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhL], 
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhR]], $CellContext`rA = $CellContext`aRhR; $CellContext`lA = \
$CellContext`aRhL, 
           If[
            And[
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhL], 
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhR]], $CellContext`rA = $CellContext`aLhR; $CellContext`lA = \
$CellContext`aLhL, 
            If[
             And[
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhL], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhL]], $CellContext`rA = $CellContext`aRhR; \
$CellContext`lA = $CellContext`aLhL, $CellContext`rA = $CellContext`aLhR; \
$CellContext`lA = $CellContext`aRhL]]]; $CellContext`t1 = $CellContext`\
\[Theta] + $CellContext`disp + 
           Pi/2; $CellContext`t2 = $CellContext`\[Theta] - $CellContext`disp + 
           3 (Pi/2); $CellContext`rA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t2], $CellContext`t2, $CellContext`rA]; \
$CellContext`lA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t1], $CellContext`t1, $CellContext`lA]; \
$CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA > 2 Pi + $CellContext`rA, (-2) Pi, 
             0]; {$CellContext`rA, $CellContext`lA}], \
$CellContext`angToDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`\[Beta]L, $CellContext`\[Beta]R, $CellContext`aL, \
$CellContext`aR}, $CellContext`\[Beta]L = $CellContext`\[Theta] + \
$CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]L = $CellContext`\
\[Beta]L + If[$CellContext`\[Beta]L > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]L < -Pi, 2 Pi, 0]; $CellContext`aL = 
          If[Abs[$CellContext`\[Beta]L] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng - (Pi - 
            2 $CellContext`\[Beta]L)]; $CellContext`\[Beta]R = $CellContext`\
\[Theta] - $CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]R = $CellContext`\
\[Beta]R + If[$CellContext`\[Beta]R > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]R < -Pi, 2 Pi, 0]; $CellContext`aR = 
          If[Abs[$CellContext`\[Beta]R] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng + (Pi + 
             2 $CellContext`\[Beta]R)]; $CellContext`aR = $CellContext`aR + 
           If[$CellContext`aR > $CellContext`aL, (-2) Pi, 0]; If[
           
           Or[$CellContext`aR < -Pi, $CellContext`aL < -
             Pi], $CellContext`aR = $CellContext`aR + 
             2 Pi; $CellContext`aL = $CellContext`aL + 2 Pi]; 
         Return[{$CellContext`aL, $CellContext`aR}]], \
$CellContext`isAngleInArc[
         Pattern[$CellContext`aLin, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`\[Epsilon] = 
          0.001}, $CellContext`aL = $CellContext`aLin + 
           If[$CellContext`aLin < $CellContext`aR, 2 Pi, 0]; 
         Or[$CellContext`aR - $CellContext`\[Epsilon] <= \
$CellContext`\[Alpha] <= $CellContext`aL + $CellContext`\[Epsilon], \
$CellContext`aR - $CellContext`\[Epsilon] <= $CellContext`\[Alpha] - 2 
            Pi <= $CellContext`aL + $CellContext`\[Epsilon], $CellContext`aR - \
$CellContext`\[Epsilon] <= $CellContext`\[Alpha] + 
            2 Pi <= $CellContext`aL + $CellContext`\[Epsilon]]], \
$CellContext`drawDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`aR}, {$CellContext`aL, \
$CellContext`aR} = $CellContext`angToDispArc[$CellContext`ptAng, \
$CellContext`disp, $CellContext`\[Theta]]; {
           PointSize[Large], {Blue, 
            Opacity[0.3], 
            Disk[
             $CellContext`angleToPt[$CellContext`ptAng], 
             5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, {Orange, Thick, 
            Circle[{0, 0}, 0.98, {$CellContext`aR, $CellContext`aL}]}, {Green, 
            Point[0.98 {
               Cos[$CellContext`aL], 
               Sin[$CellContext`aL]}]}, {Purple, 
            Point[0.98 {
               Cos[$CellContext`aR], 
               Sin[$CellContext`aR]}]}}], $CellContext`angleToPt[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {
         Cos[$CellContext`\[Theta]], 
         Sin[$CellContext`\[Theta]]}, $CellContext`drawTangentPt[
         Pattern[$CellContext`aL, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`tp, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := Module[{$CellContext`pt = {
            Cos[$CellContext`tp], 
            Sin[$CellContext`tp]}}, 
         If[
          $CellContext`isAngleInArc[$CellContext`aL, $CellContext`aR, \
$CellContext`tp], {
           $CellContext`drawDispArc[$CellContext`tp, $CellContext`disp, \
$CellContext`\[Theta]], 
           PointSize[Large], 
           Point[$CellContext`pt]}, {
           Circle[$CellContext`pt, 1/50]}]], $CellContext`drawCircleMask = {
         GrayLevel[0.85], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         FilledCurve[{{
            Line[{{2, -2}, {2, 2}, {-2, 2}, {-2, -2}}]}, {
            
            BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, SplineDegree -> 2, 
             SplineKnots -> {0, 0, 0, 1/4, 1/2, 1/2, 3/4, 1, 1, 1}, 
             SplineWeights -> {
              1, 0.5, 0.5, 1, 0.5, 0.5, 
               1}]}}]}, $CellContext`drawMovementVectors[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]]] := {{
          Opacity[0.5], Red, 
          
          Disk[$CellContext`pt, 1/
           5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, Black, 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] + \
$CellContext`disp/2]], 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] - \
$CellContext`disp/2]], Red, 
         Arrow[{$CellContext`pt, $CellContext`pt + (1/3) {
              Cos[$CellContext`\[Theta]], 
              Sin[$CellContext`\[Theta]]}}]}, $CellContext`loc[
         Pattern[$CellContext`col, 
          Blank[]]] := ToExpression[
         GraphicsBox[{$CellContext`col, {
            AbsoluteThickness[1], Antialiasing -> False, 
            
            LineBox[{{{0, -10}, {0, -2}}, {{0, 2}, {0, 10}}, {{-10, 0}, {-2, 
             0}}, {{2, 0}, {10, 0}}}], Antialiasing -> True, 
            CircleBox[{-0.5, 0.5}, 5]}, {
            AbsoluteThickness[3], 
            Opacity[0.3], 
            CircleBox[{-0.5, 0.5}, 3]}}, ImageSize -> 17, 
          PlotRange -> {{-8, 8}, {-8, 8}}]], $CellContext`simprojection[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAngIn, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`rA, $CellContext`lA}, {$CellContext`rA, \
$CellContext`lA} = $CellContext`projMath[$CellContext`ptLAng, \
$CellContext`ptRAngIn, $CellContext`disp, $CellContext`\[Theta]]; \
$CellContext`lA - $CellContext`rA]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7127573774344587`*^9, 3.7127575301512136`*^9, {3.7127576971241903`*^9, 
   3.7127577608106747`*^9}, {3.712757803665715*^9, 3.7127578224929247`*^9}, 
   3.713142949722847*^9, 3.7131453617550817`*^9, {3.713145432532158*^9, 
   3.713145450272139*^9}, {3.7131455588283296`*^9, 3.7131455701088505`*^9}, 
   3.7131456252598577`*^9},
 CellID->94645224,ExpressionUUID->"6c347b13-7dd2-4606-a1e2-2e9334cbb478"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   143,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131456369185066`*^9},
 CellID->854421818,ExpressionUUID->"d2746c54-0cd7-4da2-a4e4-d0bf381f7ed0"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   144,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713145637008009*^9},
 CellID->918647566,ExpressionUUID->"ea4164cd-7b24-4c2b-8c9d-fa8c819440e9"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   145,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.71314563711551*^9},
 CellID->150879156,ExpressionUUID->"ae93545d-0a7b-4611-9e18-8e33c8f6f493"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,8,146,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131456372315097`*^9},
 CellID->239022261,ExpressionUUID->"bfc14f6b-512e-4b43-8eca-60a1143f1c07"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   147,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.71314564139951*^9},
 CellID->469530015,ExpressionUUID->"89068e97-6c77-4191-be50-820ef414b44b"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   148,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131456414965105`*^9},
 CellID->306177792,ExpressionUUID->"f64c4cbf-892c-46e7-b590-773e8d079a73"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   149,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713145641600009*^9},
 CellID->307422428,ExpressionUUID->"cf020f9f-74ca-4dee-bbd9-ff1b2a54b9da"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,8,150,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713145641709509*^9},
 CellID->210517265,ExpressionUUID->"4f1aa3b1-4368-4b32-90ba-97f2eb93ee90"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   151,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713145645306014*^9},
 CellID->7696884,ExpressionUUID->"ca6440e7-eb56-4214-bc34-10e42346a640"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   152,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131456454090104`*^9},
 CellID->233641333,ExpressionUUID->"812714fa-c46b-4c43-b7e2-6bcc8e2d6a2f"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   153,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131456455070105`*^9},
 CellID->66559220,ExpressionUUID->"c6b5a930-15f4-4e87-a540-66158c4e46df"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,8,154,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131456456050105`*^9},
 CellID->49562577,ExpressionUUID->"10955c6f-fadb-46ea-821f-1667c5b30e36"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection",ExpressionUUID->"2e32c3e3-1da4-44cf-a963-d4b135b3c009"],

Cell[TextData[{
 "This Demonstration examines pushing particles inside a disc workspace, \
perhaps magnetized particles inside a Petri dish pushed by an external \
magnetic field. The particles start along the green arc, bounded by red and \
blue locators. When ",
 StyleBox["propagated",
  FontSlant->"Italic"],
 ", particles are pushed in the direction \[Theta] and end up along the arc \
drawn in blue. Often particles cannot be controlled perfectly, which is \
modelled by movement \[PlusMinus]\[Delta] to either side of \[Theta]. This \
demonstration shows the maxmimum and minimum particle spread (arc length) to \
which the particles can be manipulated."
}], "ManipulateCaption",
 CellChangeTimes->{{3.712757869861171*^9, 3.712758175850383*^9}, {
  3.7127582640297527`*^9, 
  3.712758276092718*^9}},ExpressionUUID->"4acebaef-65f3-478c-b7b5-\
41462e3c4267"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection",ExpressionUUID->"7218a0ce-9931-4504-a6c1-df086322257c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`disp$$ = 0.519, $CellContext`ptLin$$ = {
    1, 0.3}, $CellContext`ptRin$$ = {
    0.9159999999999999, -0.58}, $CellContext`ShowPaths$$ = 
    True, $CellContext`\[Theta]$$ = 2.8160000000000003`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`disp$$], 0.1, "\[Delta]"}, 0, 1.5697963267948967`, 
      0.001}, {{
       Hold[$CellContext`\[Theta]$$], -Pi}, -3.142, 3.142, 0.001}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ptLin$$], {1, 0.3}}, Automatic}, {{
       Hold[$CellContext`ptRin$$], {1, -0.3}}, Automatic}, {{
       Hold[$CellContext`ShowPaths$$], False, "Show Paths"}, {True, False}}, {
     
      Hold[
       Row[{
         Button["Propagate", 
          
          Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
           While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
           If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
              Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
              2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {147., 153.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`disp$10365364$$ = 
    0, $CellContext`\[Theta]$10365365$$ = 
    0, $CellContext`ShowPaths$10365366$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`disp$$ = 
        0.1, $CellContext`ptLin$$ = {1, 0.3}, $CellContext`ptRin$$ = {
         1, -0.3}, $CellContext`ShowPaths$$ = 
        False, $CellContext`\[Theta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`disp$$, $CellContext`disp$10365364$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$10365365$$, 0], 
        Hold[$CellContext`ShowPaths$$, $CellContext`ShowPaths$10365366$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`ptLAng$, $CellContext`ptRAng$, $CellContext`t1$, \
$CellContext`t2$, $CellContext`rA$, $CellContext`lA$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
        While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
        If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
           Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
           2 Pi]; $CellContext`t1$ = $CellContext`\[Theta]$$ + \
$CellContext`disp$$ + 
          Pi/2; $CellContext`t2$ = $CellContext`\[Theta]$$ - \
$CellContext`disp$$ + 
          3 (Pi/2); {$CellContext`rA$, $CellContext`lA$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; Row[{
           Graphics[{
             Table[
              $CellContext`drawDispArc[$CellContext`a, $CellContext`disp$$, \
$CellContext`\[Theta]$$], {$CellContext`a, $CellContext`ptRAng$, \
$CellContext`ptLAng$, ($CellContext`ptLAng$ - $CellContext`ptRAng$)/
               If[$CellContext`ShowPaths$$, 10, 1]}], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t1$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t2$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], $CellContext`drawCircleMask, {Blue, 
              Thickness[0.02], 
              
              Circle[{0, 0}, 
               1.04, {$CellContext`rA$, $CellContext`lA$ + 
                If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0]}]}, Green, 
             Thickness[0.01], 
             
             Circle[{0, 0}, 
              1.01, {$CellContext`ptLAng$, $CellContext`ptRAng$}], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptLAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptRAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptLAng$], 
              $CellContext`loc[Blue]], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptRAng$], 
              $CellContext`loc[Red]]}, PlotRange -> 1.25 {{-1, 1}, {-1, 1}}, 
            ImageSize -> 300], 
           Plot[
            $CellContext`simprojection[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`disp$$, $CellContext`\[Phi]], \
{$CellContext`\[Phi], -Pi, Pi}, PlotStyle -> Blue, ImageSize -> 300, 
            AspectRatio -> 0.9, 
            PlotRange -> {{-Pi - 0.1, Pi + 0.1}, {-0.3, 2 Pi + 0.2}}, 
            PlotLabel -> "Arc Length", Prolog -> {Green, 
              
              Line[{{-Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}, {
                Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}}]}, 
            Epilog -> {{
               Darker[Blue], Dashed, 
               Text["Min", {-3, 4 $CellContext`disp$$ - 0.2}], 
               Line[{{-Pi, 4 $CellContext`disp$$}, {
                 Pi, 4 $CellContext`disp$$}}], 
               Text["Max", {-3, Pi + 2 $CellContext`disp$$ + 0.1}], 
               
               Line[{{-Pi, Pi + 2 $CellContext`disp$$}, {
                 Pi, Pi + 2 $CellContext`disp$$}}]}, Red, 
              
              Line[{{$CellContext`\[Theta]$$, 0}, {$CellContext`\[Theta]$$, 
                 2 Pi - 0.2}}], 
              Text["\[Theta]", {$CellContext`\[Theta]$$, 2 Pi}]}]}]], 
      "Specifications" :> {{{$CellContext`disp$$, 0.1, "\[Delta]"}, 0, 
         1.5697963267948967`, 0.001, Appearance -> "Labeled", ImageSize -> 
         240, ControlPlacement -> 1}, {{$CellContext`\[Theta]$$, -Pi}, -3.142,
          3.142, 0.001, Appearance -> "Labeled", ImageSize -> 240, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`ptLin$$, {1, 0.3}}, Automatic,
          ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ptRin$$, {1, -0.3}}, Automatic, ControlType -> 
         Locator, Appearance -> 
         None}, {{$CellContext`ShowPaths$$, False, "Show Paths"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Button["Propagate", 
           
           Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
            While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
            If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
               Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
               2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
          Manipulate`Place[3]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{659., {211., 217.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ptToAng[
         Pattern[$CellContext`ptin, 
          Blank[]]] := 
       Module[{$CellContext`pt}, $CellContext`pt = 
          If[Norm[$CellContext`ptin] > 0, $CellContext`ptin/
            Norm[$CellContext`ptin], {1, 0}]; ArcTan[
           Part[$CellContext`pt, 1], 
           Part[$CellContext`pt, 2]]], $CellContext`projMath[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aLhL, $CellContext`aLhR, $CellContext`aRhL, \
$CellContext`aRhR, $CellContext`t1, $CellContext`t2, $CellContext`rA, \
$CellContext`lA}, {$CellContext`aLhL, $CellContext`aLhR} = \
$CellContext`angToDispArc[$CellContext`ptLAng, $CellContext`disp, \
$CellContext`\[Theta]]; {$CellContext`aRhL, $CellContext`aRhR} = \
$CellContext`angToDispArc[$CellContext`ptRAng, $CellContext`disp, \
$CellContext`\[Theta]]; If[
           And[
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhL], 
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhR]], $CellContext`rA = $CellContext`aRhR; $CellContext`lA = \
$CellContext`aRhL, 
           If[
            And[
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhL], 
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhR]], $CellContext`rA = $CellContext`aLhR; $CellContext`lA = \
$CellContext`aLhL, 
            If[
             And[
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhL], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhL]], $CellContext`rA = $CellContext`aRhR; \
$CellContext`lA = $CellContext`aLhL, $CellContext`rA = $CellContext`aLhR; \
$CellContext`lA = $CellContext`aRhL]]]; $CellContext`t1 = $CellContext`\
\[Theta] + $CellContext`disp + 
           Pi/2; $CellContext`t2 = $CellContext`\[Theta] - $CellContext`disp + 
           3 (Pi/2); $CellContext`rA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t2], $CellContext`t2, $CellContext`rA]; \
$CellContext`lA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t1], $CellContext`t1, $CellContext`lA]; \
$CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA > 2 Pi + $CellContext`rA, (-2) Pi, 
             0]; {$CellContext`rA, $CellContext`lA}], \
$CellContext`angToDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`\[Beta]L, $CellContext`\[Beta]R, $CellContext`aL, \
$CellContext`aR}, $CellContext`\[Beta]L = $CellContext`\[Theta] + \
$CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]L = $CellContext`\
\[Beta]L + If[$CellContext`\[Beta]L > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]L < -Pi, 2 Pi, 0]; $CellContext`aL = 
          If[Abs[$CellContext`\[Beta]L] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng - (Pi - 
            2 $CellContext`\[Beta]L)]; $CellContext`\[Beta]R = $CellContext`\
\[Theta] - $CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]R = $CellContext`\
\[Beta]R + If[$CellContext`\[Beta]R > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]R < -Pi, 2 Pi, 0]; $CellContext`aR = 
          If[Abs[$CellContext`\[Beta]R] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng + (Pi + 
             2 $CellContext`\[Beta]R)]; $CellContext`aR = $CellContext`aR + 
           If[$CellContext`aR > $CellContext`aL, (-2) Pi, 0]; If[
           
           Or[$CellContext`aR < -Pi, $CellContext`aL < -
             Pi], $CellContext`aR = $CellContext`aR + 
             2 Pi; $CellContext`aL = $CellContext`aL + 2 Pi]; 
         Return[{$CellContext`aL, $CellContext`aR}]], \
$CellContext`isAngleInArc[
         Pattern[$CellContext`aLin, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`\[Epsilon] = 
          0.001}, $CellContext`aL = $CellContext`aLin + 
           If[$CellContext`aLin < $CellContext`aR, 2 Pi, 0]; 
         Or[$CellContext`aR - $CellContext`\[Epsilon] <= \
$CellContext`\[Alpha] <= $CellContext`aL + $CellContext`\[Epsilon], \
$CellContext`aR - $CellContext`\[Epsilon] <= $CellContext`\[Alpha] - 2 
            Pi <= $CellContext`aL + $CellContext`\[Epsilon], $CellContext`aR - \
$CellContext`\[Epsilon] <= $CellContext`\[Alpha] + 
            2 Pi <= $CellContext`aL + $CellContext`\[Epsilon]]], \
$CellContext`drawDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`aR}, {$CellContext`aL, \
$CellContext`aR} = $CellContext`angToDispArc[$CellContext`ptAng, \
$CellContext`disp, $CellContext`\[Theta]]; {
           PointSize[Large], {Blue, 
            Opacity[0.3], 
            Disk[
             $CellContext`angleToPt[$CellContext`ptAng], 
             5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, {Orange, Thick, 
            Circle[{0, 0}, 0.98, {$CellContext`aR, $CellContext`aL}]}, {Green, 
            Point[0.98 {
               Cos[$CellContext`aL], 
               Sin[$CellContext`aL]}]}, {Purple, 
            Point[0.98 {
               Cos[$CellContext`aR], 
               Sin[$CellContext`aR]}]}}], $CellContext`angleToPt[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {
         Cos[$CellContext`\[Theta]], 
         Sin[$CellContext`\[Theta]]}, $CellContext`drawTangentPt[
         Pattern[$CellContext`aL, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`tp, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := Module[{$CellContext`pt = {
            Cos[$CellContext`tp], 
            Sin[$CellContext`tp]}}, 
         If[
          $CellContext`isAngleInArc[$CellContext`aL, $CellContext`aR, \
$CellContext`tp], {
           $CellContext`drawDispArc[$CellContext`tp, $CellContext`disp, \
$CellContext`\[Theta]], 
           PointSize[Large], 
           Point[$CellContext`pt]}, {
           Circle[$CellContext`pt, 1/50]}]], $CellContext`drawCircleMask = {
         GrayLevel[0.85], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         FilledCurve[{{
            Line[{{2, -2}, {2, 2}, {-2, 2}, {-2, -2}}]}, {
            
            BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, SplineDegree -> 2, 
             SplineKnots -> {0, 0, 0, 1/4, 1/2, 1/2, 3/4, 1, 1, 1}, 
             SplineWeights -> {
              1, 0.5, 0.5, 1, 0.5, 0.5, 
               1}]}}]}, $CellContext`drawMovementVectors[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]]] := {{
          Opacity[0.5], Red, 
          
          Disk[$CellContext`pt, 1/
           5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, Black, 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] + \
$CellContext`disp/2]], 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] - \
$CellContext`disp/2]], Red, 
         Arrow[{$CellContext`pt, $CellContext`pt + (1/3) {
              Cos[$CellContext`\[Theta]], 
              Sin[$CellContext`\[Theta]]}}]}, $CellContext`loc[
         Pattern[$CellContext`col, 
          Blank[]]] := ToExpression[
         GraphicsBox[{$CellContext`col, {
            AbsoluteThickness[1], Antialiasing -> False, 
            
            LineBox[{{{0, -10}, {0, -2}}, {{0, 2}, {0, 10}}, {{-10, 0}, {-2, 
             0}}, {{2, 0}, {10, 0}}}], Antialiasing -> True, 
            CircleBox[{-0.5, 0.5}, 5]}, {
            AbsoluteThickness[3], 
            Opacity[0.3], 
            CircleBox[{-0.5, 0.5}, 3]}}, ImageSize -> 17, 
          PlotRange -> {{-8, 8}, {-8, 8}}]], $CellContext`simprojection[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAngIn, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`rA, $CellContext`lA}, {$CellContext`rA, \
$CellContext`lA} = $CellContext`projMath[$CellContext`ptLAng, \
$CellContext`ptRAngIn, $CellContext`disp, $CellContext`\[Theta]]; \
$CellContext`lA - $CellContext`rA]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7127573774344587`*^9, 3.7127575301512136`*^9, {3.7127576971241903`*^9, 
   3.7127577608106747`*^9}, {3.712757803665715*^9, 3.7127578224929247`*^9}},
 CellID->1753136171,ExpressionUUID->"c5a70e15-62e4-48d4-a573-76ed41e632e8"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   5,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429156112723`*^9},
 CellID->1651158,ExpressionUUID->"865fa889-3b10-4d22-b90a-183ae3a49aae"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   6,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142915717276*^9},
 CellID->1267751,ExpressionUUID->"7da7116e-8a1a-4471-a65b-103cac75da94"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   7,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142915834773*^9},
 CellID->354455774,ExpressionUUID->"c0e19c4e-22a8-463a-b937-36ba309352a6"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,1,8,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429159487724`*^9},
 CellID->463893046,ExpressionUUID->"f00e9348-a81a-42ed-9e90-760431260769"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,7,
   131,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131455704978657`*^9},
 CellID->194516143,ExpressionUUID->"244c972d-b145-4afc-b443-27b82b8765ae"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,7,
   132,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131455705783653`*^9},
 CellID->107688974,ExpressionUUID->"b10fdf52-34d7-4910-b9e5-c92777cf6054"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,7,
   133,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713145570677867*^9},
 CellID->237531221,ExpressionUUID->"7b47bad0-6684-4c5f-95db-fdbaf7a1d913"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,7,134,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131455707668753`*^9},
 CellID->135124677,ExpressionUUID->"ea11fa47-3e3d-426e-8c01-d2bc39ab12e8"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   155,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713145649159511*^9},
 CellID->38161266,ExpressionUUID->"6ebe9979-632b-45a0-8fde-789b373791b2"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   156,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713145649242014*^9},
 CellID->60656107,ExpressionUUID->"abe2abb4-5a5e-441f-a1aa-4620eb21555f"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,8,
   157,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131456493470135`*^9},
 CellID->56676395,ExpressionUUID->"a420a3cc-df55-4269-b282-a9bbf237895b"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,8,158,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713145649455013*^9},
 CellID->2625238,ExpressionUUID->"be27c981-41c6-46e6-abcc-b8e0e8ec983e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection",ExpressionUUID->"4a09725b-cbd4-4a15-be3b-0094e5587242"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`disp$$ = 0.075, $CellContext`ptLin$$ = {
    1, 0.3}, $CellContext`ptRin$$ = {
    0.9159999999999999, -0.58}, $CellContext`ShowPaths$$ = 
    True, $CellContext`\[Theta]$$ = 2.8160000000000003`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`disp$$], 0.1, "\[Delta]"}, 0, 1.5697963267948967`, 
      0.001}, {{
       Hold[$CellContext`\[Theta]$$], -Pi}, -3.142, 3.142, 0.001}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ptLin$$], {1, 0.3}}, Automatic}, {{
       Hold[$CellContext`ptRin$$], {1, -0.3}}, Automatic}, {{
       Hold[$CellContext`ShowPaths$$], False, "Show Paths"}, {True, False}}, {
     
      Hold[
       Row[{
         Button["Propagate", 
          
          Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
           While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
           If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
              Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
              2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {147., 153.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`disp$10365364$$ = 
    0, $CellContext`\[Theta]$10365365$$ = 
    0, $CellContext`ShowPaths$10365366$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`disp$$ = 
        0.1, $CellContext`ptLin$$ = {1, 0.3}, $CellContext`ptRin$$ = {
         1, -0.3}, $CellContext`ShowPaths$$ = 
        False, $CellContext`\[Theta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`disp$$, $CellContext`disp$10365364$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$10365365$$, 0], 
        Hold[$CellContext`ShowPaths$$, $CellContext`ShowPaths$10365366$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`ptLAng$, $CellContext`ptRAng$, $CellContext`t1$, \
$CellContext`t2$, $CellContext`rA$, $CellContext`lA$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
        While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
        If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
           Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
           2 Pi]; $CellContext`t1$ = $CellContext`\[Theta]$$ + \
$CellContext`disp$$ + 
          Pi/2; $CellContext`t2$ = $CellContext`\[Theta]$$ - \
$CellContext`disp$$ + 
          3 (Pi/2); {$CellContext`rA$, $CellContext`lA$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; Row[{
           Graphics[{
             Table[
              $CellContext`drawDispArc[$CellContext`a, $CellContext`disp$$, \
$CellContext`\[Theta]$$], {$CellContext`a, $CellContext`ptRAng$, \
$CellContext`ptLAng$, ($CellContext`ptLAng$ - $CellContext`ptRAng$)/
               If[$CellContext`ShowPaths$$, 10, 1]}], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t1$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t2$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], $CellContext`drawCircleMask, {Blue, 
              Thickness[0.02], 
              
              Circle[{0, 0}, 
               1.04, {$CellContext`rA$, $CellContext`lA$ + 
                If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0]}]}, Green, 
             Thickness[0.01], 
             
             Circle[{0, 0}, 
              1.01, {$CellContext`ptLAng$, $CellContext`ptRAng$}], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptLAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptRAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptLAng$], 
              $CellContext`loc[Blue]], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptRAng$], 
              $CellContext`loc[Red]]}, PlotRange -> 1.25 {{-1, 1}, {-1, 1}}, 
            ImageSize -> 300], 
           Plot[
            $CellContext`simprojection[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`disp$$, $CellContext`\[Phi]], \
{$CellContext`\[Phi], -Pi, Pi}, PlotStyle -> Blue, ImageSize -> 300, 
            AspectRatio -> 0.9, 
            PlotRange -> {{-Pi - 0.1, Pi + 0.1}, {-0.3, 2 Pi + 0.2}}, 
            PlotLabel -> "Arc Length", Prolog -> {Green, 
              
              Line[{{-Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}, {
                Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}}]}, 
            Epilog -> {{
               Darker[Blue], Dashed, 
               Text["Min", {-3, 4 $CellContext`disp$$ - 0.2}], 
               Line[{{-Pi, 4 $CellContext`disp$$}, {
                 Pi, 4 $CellContext`disp$$}}], 
               Text["Max", {-3, Pi + 2 $CellContext`disp$$ + 0.1}], 
               
               Line[{{-Pi, Pi + 2 $CellContext`disp$$}, {
                 Pi, Pi + 2 $CellContext`disp$$}}]}, Red, 
              
              Line[{{$CellContext`\[Theta]$$, 0}, {$CellContext`\[Theta]$$, 
                 2 Pi - 0.2}}], 
              Text["\[Theta]", {$CellContext`\[Theta]$$, 2 Pi}]}]}]], 
      "Specifications" :> {{{$CellContext`disp$$, 0.1, "\[Delta]"}, 0, 
         1.5697963267948967`, 0.001, Appearance -> "Labeled", ImageSize -> 
         240, ControlPlacement -> 1}, {{$CellContext`\[Theta]$$, -Pi}, -3.142,
          3.142, 0.001, Appearance -> "Labeled", ImageSize -> 240, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`ptLin$$, {1, 0.3}}, Automatic,
          ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ptRin$$, {1, -0.3}}, Automatic, ControlType -> 
         Locator, Appearance -> 
         None}, {{$CellContext`ShowPaths$$, False, "Show Paths"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Button["Propagate", 
           
           Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
            While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
            If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
               Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
               2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
          Manipulate`Place[3]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{659., {211., 217.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ptToAng[
         Pattern[$CellContext`ptin, 
          Blank[]]] := 
       Module[{$CellContext`pt}, $CellContext`pt = 
          If[Norm[$CellContext`ptin] > 0, $CellContext`ptin/
            Norm[$CellContext`ptin], {1, 0}]; ArcTan[
           Part[$CellContext`pt, 1], 
           Part[$CellContext`pt, 2]]], $CellContext`projMath[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aLhL, $CellContext`aLhR, $CellContext`aRhL, \
$CellContext`aRhR, $CellContext`t1, $CellContext`t2, $CellContext`rA, \
$CellContext`lA}, {$CellContext`aLhL, $CellContext`aLhR} = \
$CellContext`angToDispArc[$CellContext`ptLAng, $CellContext`disp, \
$CellContext`\[Theta]]; {$CellContext`aRhL, $CellContext`aRhR} = \
$CellContext`angToDispArc[$CellContext`ptRAng, $CellContext`disp, \
$CellContext`\[Theta]]; If[
           And[
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhL], 
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhR]], $CellContext`rA = $CellContext`aRhR; $CellContext`lA = \
$CellContext`aRhL, 
           If[
            And[
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhL], 
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhR]], $CellContext`rA = $CellContext`aLhR; $CellContext`lA = \
$CellContext`aLhL, 
            If[
             And[
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhL], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhL]], $CellContext`rA = $CellContext`aRhR; \
$CellContext`lA = $CellContext`aLhL, $CellContext`rA = $CellContext`aLhR; \
$CellContext`lA = $CellContext`aRhL]]]; $CellContext`t1 = $CellContext`\
\[Theta] + $CellContext`disp + 
           Pi/2; $CellContext`t2 = $CellContext`\[Theta] - $CellContext`disp + 
           3 (Pi/2); $CellContext`rA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t2], $CellContext`t2, $CellContext`rA]; \
$CellContext`lA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t1], $CellContext`t1, $CellContext`lA]; \
$CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA > 2 Pi + $CellContext`rA, (-2) Pi, 
             0]; {$CellContext`rA, $CellContext`lA}], \
$CellContext`angToDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`\[Beta]L, $CellContext`\[Beta]R, $CellContext`aL, \
$CellContext`aR}, $CellContext`\[Beta]L = $CellContext`\[Theta] + \
$CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]L = $CellContext`\
\[Beta]L + If[$CellContext`\[Beta]L > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]L < -Pi, 2 Pi, 0]; $CellContext`aL = 
          If[Abs[$CellContext`\[Beta]L] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng - (Pi - 
            2 $CellContext`\[Beta]L)]; $CellContext`\[Beta]R = $CellContext`\
\[Theta] - $CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]R = $CellContext`\
\[Beta]R + If[$CellContext`\[Beta]R > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]R < -Pi, 2 Pi, 0]; $CellContext`aR = 
          If[Abs[$CellContext`\[Beta]R] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng + (Pi + 
             2 $CellContext`\[Beta]R)]; $CellContext`aR = $CellContext`aR + 
           If[$CellContext`aR > $CellContext`aL, (-2) Pi, 0]; If[
           
           Or[$CellContext`aR < -Pi, $CellContext`aL < -
             Pi], $CellContext`aR = $CellContext`aR + 
             2 Pi; $CellContext`aL = $CellContext`aL + 2 Pi]; 
         Return[{$CellContext`aL, $CellContext`aR}]], \
$CellContext`isAngleInArc[
         Pattern[$CellContext`aLin, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`\[Epsilon] = 
          0.001}, $CellContext`aL = $CellContext`aLin + 
           If[$CellContext`aLin < $CellContext`aR, 2 Pi, 0]; 
         Or[$CellContext`aR - $CellContext`\[Epsilon] <= \
$CellContext`\[Alpha] <= $CellContext`aL + $CellContext`\[Epsilon], \
$CellContext`aR - $CellContext`\[Epsilon] <= $CellContext`\[Alpha] - 2 
            Pi <= $CellContext`aL + $CellContext`\[Epsilon], $CellContext`aR - \
$CellContext`\[Epsilon] <= $CellContext`\[Alpha] + 
            2 Pi <= $CellContext`aL + $CellContext`\[Epsilon]]], \
$CellContext`drawDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`aR}, {$CellContext`aL, \
$CellContext`aR} = $CellContext`angToDispArc[$CellContext`ptAng, \
$CellContext`disp, $CellContext`\[Theta]]; {
           PointSize[Large], {Blue, 
            Opacity[0.3], 
            Disk[
             $CellContext`angleToPt[$CellContext`ptAng], 
             5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, {Orange, Thick, 
            Circle[{0, 0}, 0.98, {$CellContext`aR, $CellContext`aL}]}, {Green, 
            Point[0.98 {
               Cos[$CellContext`aL], 
               Sin[$CellContext`aL]}]}, {Purple, 
            Point[0.98 {
               Cos[$CellContext`aR], 
               Sin[$CellContext`aR]}]}}], $CellContext`angleToPt[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {
         Cos[$CellContext`\[Theta]], 
         Sin[$CellContext`\[Theta]]}, $CellContext`drawTangentPt[
         Pattern[$CellContext`aL, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`tp, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := Module[{$CellContext`pt = {
            Cos[$CellContext`tp], 
            Sin[$CellContext`tp]}}, 
         If[
          $CellContext`isAngleInArc[$CellContext`aL, $CellContext`aR, \
$CellContext`tp], {
           $CellContext`drawDispArc[$CellContext`tp, $CellContext`disp, \
$CellContext`\[Theta]], 
           PointSize[Large], 
           Point[$CellContext`pt]}, {
           Circle[$CellContext`pt, 1/50]}]], $CellContext`drawCircleMask = {
         GrayLevel[0.85], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         FilledCurve[{{
            Line[{{2, -2}, {2, 2}, {-2, 2}, {-2, -2}}]}, {
            
            BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, SplineDegree -> 2, 
             SplineKnots -> {0, 0, 0, 1/4, 1/2, 1/2, 3/4, 1, 1, 1}, 
             SplineWeights -> {
              1, 0.5, 0.5, 1, 0.5, 0.5, 
               1}]}}]}, $CellContext`drawMovementVectors[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]]] := {{
          Opacity[0.5], Red, 
          
          Disk[$CellContext`pt, 1/
           5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, Black, 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] + \
$CellContext`disp/2]], 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] - \
$CellContext`disp/2]], Red, 
         Arrow[{$CellContext`pt, $CellContext`pt + (1/3) {
              Cos[$CellContext`\[Theta]], 
              Sin[$CellContext`\[Theta]]}}]}, $CellContext`loc[
         Pattern[$CellContext`col, 
          Blank[]]] := ToExpression[
         GraphicsBox[{$CellContext`col, {
            AbsoluteThickness[1], Antialiasing -> False, 
            
            LineBox[{{{0, -10}, {0, -2}}, {{0, 2}, {0, 10}}, {{-10, 0}, {-2, 
             0}}, {{2, 0}, {10, 0}}}], Antialiasing -> True, 
            CircleBox[{-0.5, 0.5}, 5]}, {
            AbsoluteThickness[3], 
            Opacity[0.3], 
            CircleBox[{-0.5, 0.5}, 3]}}, ImageSize -> 17, 
          PlotRange -> {{-8, 8}, {-8, 8}}]], $CellContext`simprojection[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAngIn, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`rA, $CellContext`lA}, {$CellContext`rA, \
$CellContext`lA} = $CellContext`projMath[$CellContext`ptLAng, \
$CellContext`ptRAngIn, $CellContext`disp, $CellContext`\[Theta]]; \
$CellContext`lA - $CellContext`rA]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7127573774344587`*^9, 3.7127575301512136`*^9, {3.7127576971241903`*^9, 
   3.7127577608106747`*^9}, {3.712757803665715*^9, 3.7127578224929247`*^9}},
 CellID->1483989157,ExpressionUUID->"106e7cec-282b-4212-b11e-56a704cf8533"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`disp$$ = 
    0.075, $CellContext`ptLin$$ = {-0.9979984767915432, \
-0.06323796582559867}, $CellContext`ptRin$$ = {-0.46014119692540845`, 
    0.88784575174523}, $CellContext`ShowPaths$$ = 
    True, $CellContext`\[Theta]$$ = -0.33899999999999997`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`disp$$], 0.1, "\[Delta]"}, 0, 1.5697963267948967`, 
      0.001}, {{
       Hold[$CellContext`\[Theta]$$], -Pi}, -3.142, 3.142, 0.001}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ptLin$$], {1, 0.3}}, Automatic}, {{
       Hold[$CellContext`ptRin$$], {1, -0.3}}, Automatic}, {{
       Hold[$CellContext`ShowPaths$$], False, "Show Paths"}, {True, False}}, {
     
      Hold[
       Row[{
         Button["Propagate", 
          
          Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
           While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
           If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
              Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
              2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {148., 152.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`disp$10365364$$ = 
    0, $CellContext`\[Theta]$10365365$$ = 
    0, $CellContext`ShowPaths$10365366$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`disp$$ = 
        0.1, $CellContext`ptLin$$ = {1, 0.3}, $CellContext`ptRin$$ = {
         1, -0.3}, $CellContext`ShowPaths$$ = 
        False, $CellContext`\[Theta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`disp$$, $CellContext`disp$10365364$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$10365365$$, 0], 
        Hold[$CellContext`ShowPaths$$, $CellContext`ShowPaths$10365366$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`ptLAng$, $CellContext`ptRAng$, $CellContext`t1$, \
$CellContext`t2$, $CellContext`rA$, $CellContext`lA$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
        While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
        If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
           Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
           2 Pi]; $CellContext`t1$ = $CellContext`\[Theta]$$ + \
$CellContext`disp$$ + 
          Pi/2; $CellContext`t2$ = $CellContext`\[Theta]$$ - \
$CellContext`disp$$ + 
          3 (Pi/2); {$CellContext`rA$, $CellContext`lA$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; Row[{
           Graphics[{
             Table[
              $CellContext`drawDispArc[$CellContext`a, $CellContext`disp$$, \
$CellContext`\[Theta]$$], {$CellContext`a, $CellContext`ptRAng$, \
$CellContext`ptLAng$, ($CellContext`ptLAng$ - $CellContext`ptRAng$)/
               If[$CellContext`ShowPaths$$, 10, 1]}], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t1$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t2$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], $CellContext`drawCircleMask, {Blue, 
              Thickness[0.02], 
              
              Circle[{0, 0}, 
               1.04, {$CellContext`rA$, $CellContext`lA$ + 
                If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0]}]}, Green, 
             Thickness[0.01], 
             
             Circle[{0, 0}, 
              1.01, {$CellContext`ptLAng$, $CellContext`ptRAng$}], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptLAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptRAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptLAng$], 
              $CellContext`loc[Blue]], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptRAng$], 
              $CellContext`loc[Red]]}, PlotRange -> 1.25 {{-1, 1}, {-1, 1}}, 
            ImageSize -> 300], 
           Plot[
            $CellContext`simprojection[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`disp$$, $CellContext`\[Phi]], \
{$CellContext`\[Phi], -Pi, Pi}, PlotStyle -> Blue, ImageSize -> 300, 
            AspectRatio -> 0.9, 
            PlotRange -> {{-Pi - 0.1, Pi + 0.1}, {-0.3, 2 Pi + 0.2}}, 
            PlotLabel -> "Arc Length", Prolog -> {Green, 
              
              Line[{{-Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}, {
                Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}}]}, 
            Epilog -> {{
               Darker[Blue], Dashed, 
               Text["Min", {-3, 4 $CellContext`disp$$ - 0.2}], 
               
               Line[{{-Pi, 4 $CellContext`disp$$}, {
                 Pi, 4 $CellContext`disp$$}}], 
               Text["Max", {-3, Pi + 2 $CellContext`disp$$ + 0.1}], 
               
               Line[{{-Pi, Pi + 2 $CellContext`disp$$}, {
                 Pi, Pi + 2 $CellContext`disp$$}}]}, Red, 
              
              Line[{{$CellContext`\[Theta]$$, 0}, {$CellContext`\[Theta]$$, 
                 2 Pi - 0.2}}], 
              Text["\[Theta]", {$CellContext`\[Theta]$$, 2 Pi}]}]}]], 
      "Specifications" :> {{{$CellContext`disp$$, 0.1, "\[Delta]"}, 0, 
         1.5697963267948967`, 0.001, Appearance -> "Labeled", ImageSize -> 
         240, ControlPlacement -> 1}, {{$CellContext`\[Theta]$$, -Pi}, -3.142,
          3.142, 0.001, Appearance -> "Labeled", ImageSize -> 240, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`ptLin$$, {1, 0.3}}, Automatic,
          ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ptRin$$, {1, -0.3}}, Automatic, ControlType -> 
         Locator, Appearance -> 
         None}, {{$CellContext`ShowPaths$$, False, "Show Paths"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Button["Propagate", 
           
           Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
            While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
            If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
               Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
               2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
          Manipulate`Place[3]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{659., {211., 217.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ptToAng[
         Pattern[$CellContext`ptin, 
          Blank[]]] := 
       Module[{$CellContext`pt}, $CellContext`pt = 
          If[Norm[$CellContext`ptin] > 0, $CellContext`ptin/
            Norm[$CellContext`ptin], {1, 0}]; ArcTan[
           Part[$CellContext`pt, 1], 
           Part[$CellContext`pt, 2]]], $CellContext`projMath[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aLhL, $CellContext`aLhR, $CellContext`aRhL, \
$CellContext`aRhR, $CellContext`t1, $CellContext`t2, $CellContext`rA, \
$CellContext`lA}, {$CellContext`aLhL, $CellContext`aLhR} = \
$CellContext`angToDispArc[$CellContext`ptLAng, $CellContext`disp, \
$CellContext`\[Theta]]; {$CellContext`aRhL, $CellContext`aRhR} = \
$CellContext`angToDispArc[$CellContext`ptRAng, $CellContext`disp, \
$CellContext`\[Theta]]; If[
           And[
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhL], 
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhR]], $CellContext`rA = $CellContext`aRhR; $CellContext`lA = \
$CellContext`aRhL, 
           If[
            And[
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhL], 
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhR]], $CellContext`rA = $CellContext`aLhR; $CellContext`lA = \
$CellContext`aLhL, 
            If[
             And[
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhL], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhL]], $CellContext`rA = $CellContext`aRhR; \
$CellContext`lA = $CellContext`aLhL, $CellContext`rA = $CellContext`aLhR; \
$CellContext`lA = $CellContext`aRhL]]]; $CellContext`t1 = $CellContext`\
\[Theta] + $CellContext`disp + 
           Pi/2; $CellContext`t2 = $CellContext`\[Theta] - $CellContext`disp + 
           3 (Pi/2); $CellContext`rA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t2], $CellContext`t2, $CellContext`rA]; \
$CellContext`lA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t1], $CellContext`t1, $CellContext`lA]; \
$CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA > 2 Pi + $CellContext`rA, (-2) Pi, 
             0]; {$CellContext`rA, $CellContext`lA}], \
$CellContext`angToDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`\[Beta]L, $CellContext`\[Beta]R, $CellContext`aL, \
$CellContext`aR}, $CellContext`\[Beta]L = $CellContext`\[Theta] + \
$CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]L = $CellContext`\
\[Beta]L + If[$CellContext`\[Beta]L > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]L < -Pi, 2 Pi, 0]; $CellContext`aL = 
          If[Abs[$CellContext`\[Beta]L] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng - (Pi - 
            2 $CellContext`\[Beta]L)]; $CellContext`\[Beta]R = $CellContext`\
\[Theta] - $CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]R = $CellContext`\
\[Beta]R + If[$CellContext`\[Beta]R > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]R < -Pi, 2 Pi, 0]; $CellContext`aR = 
          If[Abs[$CellContext`\[Beta]R] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng + (Pi + 
             2 $CellContext`\[Beta]R)]; $CellContext`aR = $CellContext`aR + 
           If[$CellContext`aR > $CellContext`aL, (-2) Pi, 0]; If[
           
           Or[$CellContext`aR < -Pi, $CellContext`aL < -
             Pi], $CellContext`aR = $CellContext`aR + 
             2 Pi; $CellContext`aL = $CellContext`aL + 2 Pi]; 
         Return[{$CellContext`aL, $CellContext`aR}]], \
$CellContext`isAngleInArc[
         Pattern[$CellContext`aLin, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`\[Epsilon] = 
          0.001}, $CellContext`aL = $CellContext`aLin + 
           If[$CellContext`aLin < $CellContext`aR, 2 Pi, 0]; 
         Or[$CellContext`aR - $CellContext`\[Epsilon] <= \
$CellContext`\[Alpha] <= $CellContext`aL + $CellContext`\[Epsilon], \
$CellContext`aR - $CellContext`\[Epsilon] <= $CellContext`\[Alpha] - 2 
            Pi <= $CellContext`aL + $CellContext`\[Epsilon], $CellContext`aR - \
$CellContext`\[Epsilon] <= $CellContext`\[Alpha] + 
            2 Pi <= $CellContext`aL + $CellContext`\[Epsilon]]], \
$CellContext`drawDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`aR}, {$CellContext`aL, \
$CellContext`aR} = $CellContext`angToDispArc[$CellContext`ptAng, \
$CellContext`disp, $CellContext`\[Theta]]; {
           PointSize[Large], {Blue, 
            Opacity[0.3], 
            Disk[
             $CellContext`angleToPt[$CellContext`ptAng], 
             5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, {Orange, Thick, 
            Circle[{0, 0}, 0.98, {$CellContext`aR, $CellContext`aL}]}, {Green, 
            Point[0.98 {
               Cos[$CellContext`aL], 
               Sin[$CellContext`aL]}]}, {Purple, 
            Point[0.98 {
               Cos[$CellContext`aR], 
               Sin[$CellContext`aR]}]}}], $CellContext`angleToPt[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {
         Cos[$CellContext`\[Theta]], 
         Sin[$CellContext`\[Theta]]}, $CellContext`drawTangentPt[
         Pattern[$CellContext`aL, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`tp, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := Module[{$CellContext`pt = {
            Cos[$CellContext`tp], 
            Sin[$CellContext`tp]}}, 
         If[
          $CellContext`isAngleInArc[$CellContext`aL, $CellContext`aR, \
$CellContext`tp], {
           $CellContext`drawDispArc[$CellContext`tp, $CellContext`disp, \
$CellContext`\[Theta]], 
           PointSize[Large], 
           Point[$CellContext`pt]}, {
           Circle[$CellContext`pt, 1/50]}]], $CellContext`drawCircleMask = {
         GrayLevel[0.85], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         FilledCurve[{{
            Line[{{2, -2}, {2, 2}, {-2, 2}, {-2, -2}}]}, {
            
            BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, SplineDegree -> 2, 
             SplineKnots -> {0, 0, 0, 1/4, 1/2, 1/2, 3/4, 1, 1, 1}, 
             SplineWeights -> {
              1, 0.5, 0.5, 1, 0.5, 0.5, 
               1}]}}]}, $CellContext`drawMovementVectors[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]]] := {{
          Opacity[0.5], Red, 
          
          Disk[$CellContext`pt, 1/
           5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, Black, 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] + \
$CellContext`disp/2]], 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] - \
$CellContext`disp/2]], Red, 
         Arrow[{$CellContext`pt, $CellContext`pt + (1/3) {
              Cos[$CellContext`\[Theta]], 
              Sin[$CellContext`\[Theta]]}}]}, $CellContext`loc[
         Pattern[$CellContext`col, 
          Blank[]]] := ToExpression[
         GraphicsBox[{$CellContext`col, {
            AbsoluteThickness[1], Antialiasing -> False, 
            
            LineBox[{{{0, -10}, {0, -2}}, {{0, 2}, {0, 10}}, {{-10, 0}, {-2, 
             0}}, {{2, 0}, {10, 0}}}], Antialiasing -> True, 
            CircleBox[{-0.5, 0.5}, 5]}, {
            AbsoluteThickness[3], 
            Opacity[0.3], 
            CircleBox[{-0.5, 0.5}, 3]}}, ImageSize -> 17, 
          PlotRange -> {{-8, 8}, {-8, 8}}]], $CellContext`simprojection[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAngIn, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`rA, $CellContext`lA}, {$CellContext`rA, \
$CellContext`lA} = $CellContext`projMath[$CellContext`ptLAng, \
$CellContext`ptRAngIn, $CellContext`disp, $CellContext`\[Theta]]; \
$CellContext`lA - $CellContext`rA]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7127573774344587`*^9, 3.7127575301512136`*^9, {3.7127576971241903`*^9, 
   3.7127577608106747`*^9}, {3.712757803665715*^9, 3.7127578224929247`*^9}},
 CellID->530685441,ExpressionUUID->"62fb91c3-e1fa-4eba-ac4b-99c121a3f41b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`disp$$ = 
    0.388, $CellContext`ptLin$$ = {-0.5991396091220528, -0.8006445708184586}, \
$CellContext`ptRin$$ = {0.5694575243468091, 
    0.8220207588405559}, $CellContext`ShowPaths$$ = 
    False, $CellContext`\[Theta]$$ = 2.8160000000000003`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`disp$$], 0.1, "\[Delta]"}, 0, 1.5697963267948967`, 
      0.001}, {{
       Hold[$CellContext`\[Theta]$$], -Pi}, -3.142, 3.142, 0.001}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ptLin$$], {1, 0.3}}, Automatic}, {{
       Hold[$CellContext`ptRin$$], {1, -0.3}}, Automatic}, {{
       Hold[$CellContext`ShowPaths$$], False, "Show Paths"}, {True, False}}, {
     
      Hold[
       Row[{
         Button["Propagate", 
          
          Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
           While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
           If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
              Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
              2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {147., 153.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`disp$10365364$$ = 
    0, $CellContext`\[Theta]$10365365$$ = 
    0, $CellContext`ShowPaths$10365366$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`disp$$ = 
        0.1, $CellContext`ptLin$$ = {1, 0.3}, $CellContext`ptRin$$ = {
         1, -0.3}, $CellContext`ShowPaths$$ = 
        False, $CellContext`\[Theta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`disp$$, $CellContext`disp$10365364$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$10365365$$, 0], 
        Hold[$CellContext`ShowPaths$$, $CellContext`ShowPaths$10365366$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`ptLAng$, $CellContext`ptRAng$, $CellContext`t1$, \
$CellContext`t2$, $CellContext`rA$, $CellContext`lA$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
        While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
        If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
           Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
           2 Pi]; $CellContext`t1$ = $CellContext`\[Theta]$$ + \
$CellContext`disp$$ + 
          Pi/2; $CellContext`t2$ = $CellContext`\[Theta]$$ - \
$CellContext`disp$$ + 
          3 (Pi/2); {$CellContext`rA$, $CellContext`lA$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; Row[{
           Graphics[{
             Table[
              $CellContext`drawDispArc[$CellContext`a, $CellContext`disp$$, \
$CellContext`\[Theta]$$], {$CellContext`a, $CellContext`ptRAng$, \
$CellContext`ptLAng$, ($CellContext`ptLAng$ - $CellContext`ptRAng$)/
               If[$CellContext`ShowPaths$$, 10, 1]}], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t1$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t2$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], $CellContext`drawCircleMask, {Blue, 
              Thickness[0.02], 
              
              Circle[{0, 0}, 
               1.04, {$CellContext`rA$, $CellContext`lA$ + 
                If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0]}]}, Green, 
             Thickness[0.01], 
             
             Circle[{0, 0}, 
              1.01, {$CellContext`ptLAng$, $CellContext`ptRAng$}], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptLAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptRAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptLAng$], 
              $CellContext`loc[Blue]], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptRAng$], 
              $CellContext`loc[Red]]}, PlotRange -> 1.25 {{-1, 1}, {-1, 1}}, 
            ImageSize -> 300], 
           Plot[
            $CellContext`simprojection[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`disp$$, $CellContext`\[Phi]], \
{$CellContext`\[Phi], -Pi, Pi}, PlotStyle -> Blue, ImageSize -> 300, 
            AspectRatio -> 0.9, 
            PlotRange -> {{-Pi - 0.1, Pi + 0.1}, {-0.3, 2 Pi + 0.2}}, 
            PlotLabel -> "Arc Length", Prolog -> {Green, 
              
              Line[{{-Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}, {
                Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}}]}, 
            Epilog -> {{
               Darker[Blue], Dashed, 
               Text["Min", {-3, 4 $CellContext`disp$$ - 0.2}], 
               
               Line[{{-Pi, 4 $CellContext`disp$$}, {
                 Pi, 4 $CellContext`disp$$}}], 
               Text["Max", {-3, Pi + 2 $CellContext`disp$$ + 0.1}], 
               
               Line[{{-Pi, Pi + 2 $CellContext`disp$$}, {
                 Pi, Pi + 2 $CellContext`disp$$}}]}, Red, 
              
              Line[{{$CellContext`\[Theta]$$, 0}, {$CellContext`\[Theta]$$, 
                 2 Pi - 0.2}}], 
              Text["\[Theta]", {$CellContext`\[Theta]$$, 2 Pi}]}]}]], 
      "Specifications" :> {{{$CellContext`disp$$, 0.1, "\[Delta]"}, 0, 
         1.5697963267948967`, 0.001, Appearance -> "Labeled", ImageSize -> 
         240, ControlPlacement -> 1}, {{$CellContext`\[Theta]$$, -Pi}, -3.142,
          3.142, 0.001, Appearance -> "Labeled", ImageSize -> 240, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`ptLin$$, {1, 0.3}}, Automatic,
          ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ptRin$$, {1, -0.3}}, Automatic, ControlType -> 
         Locator, Appearance -> 
         None}, {{$CellContext`ShowPaths$$, False, "Show Paths"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Button["Propagate", 
           
           Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
            While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
            If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
               Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
               2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
          Manipulate`Place[3]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{659., {211., 217.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ptToAng[
         Pattern[$CellContext`ptin, 
          Blank[]]] := 
       Module[{$CellContext`pt}, $CellContext`pt = 
          If[Norm[$CellContext`ptin] > 0, $CellContext`ptin/
            Norm[$CellContext`ptin], {1, 0}]; ArcTan[
           Part[$CellContext`pt, 1], 
           Part[$CellContext`pt, 2]]], $CellContext`projMath[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aLhL, $CellContext`aLhR, $CellContext`aRhL, \
$CellContext`aRhR, $CellContext`t1, $CellContext`t2, $CellContext`rA, \
$CellContext`lA}, {$CellContext`aLhL, $CellContext`aLhR} = \
$CellContext`angToDispArc[$CellContext`ptLAng, $CellContext`disp, \
$CellContext`\[Theta]]; {$CellContext`aRhL, $CellContext`aRhR} = \
$CellContext`angToDispArc[$CellContext`ptRAng, $CellContext`disp, \
$CellContext`\[Theta]]; If[
           And[
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhL], 
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhR]], $CellContext`rA = $CellContext`aRhR; $CellContext`lA = \
$CellContext`aRhL, 
           If[
            And[
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhL], 
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhR]], $CellContext`rA = $CellContext`aLhR; $CellContext`lA = \
$CellContext`aLhL, 
            If[
             And[
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhL], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhL]], $CellContext`rA = $CellContext`aRhR; \
$CellContext`lA = $CellContext`aLhL, $CellContext`rA = $CellContext`aLhR; \
$CellContext`lA = $CellContext`aRhL]]]; $CellContext`t1 = $CellContext`\
\[Theta] + $CellContext`disp + 
           Pi/2; $CellContext`t2 = $CellContext`\[Theta] - $CellContext`disp + 
           3 (Pi/2); $CellContext`rA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t2], $CellContext`t2, $CellContext`rA]; \
$CellContext`lA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t1], $CellContext`t1, $CellContext`lA]; \
$CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA > 2 Pi + $CellContext`rA, (-2) Pi, 
             0]; {$CellContext`rA, $CellContext`lA}], \
$CellContext`angToDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`\[Beta]L, $CellContext`\[Beta]R, $CellContext`aL, \
$CellContext`aR}, $CellContext`\[Beta]L = $CellContext`\[Theta] + \
$CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]L = $CellContext`\
\[Beta]L + If[$CellContext`\[Beta]L > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]L < -Pi, 2 Pi, 0]; $CellContext`aL = 
          If[Abs[$CellContext`\[Beta]L] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng - (Pi - 
            2 $CellContext`\[Beta]L)]; $CellContext`\[Beta]R = $CellContext`\
\[Theta] - $CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]R = $CellContext`\
\[Beta]R + If[$CellContext`\[Beta]R > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]R < -Pi, 2 Pi, 0]; $CellContext`aR = 
          If[Abs[$CellContext`\[Beta]R] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng + (Pi + 
             2 $CellContext`\[Beta]R)]; $CellContext`aR = $CellContext`aR + 
           If[$CellContext`aR > $CellContext`aL, (-2) Pi, 0]; If[
           
           Or[$CellContext`aR < -Pi, $CellContext`aL < -
             Pi], $CellContext`aR = $CellContext`aR + 
             2 Pi; $CellContext`aL = $CellContext`aL + 2 Pi]; 
         Return[{$CellContext`aL, $CellContext`aR}]], \
$CellContext`isAngleInArc[
         Pattern[$CellContext`aLin, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`\[Epsilon] = 
          0.001}, $CellContext`aL = $CellContext`aLin + 
           If[$CellContext`aLin < $CellContext`aR, 2 Pi, 0]; 
         Or[$CellContext`aR - $CellContext`\[Epsilon] <= \
$CellContext`\[Alpha] <= $CellContext`aL + $CellContext`\[Epsilon], \
$CellContext`aR - $CellContext`\[Epsilon] <= $CellContext`\[Alpha] - 2 
            Pi <= $CellContext`aL + $CellContext`\[Epsilon], $CellContext`aR - \
$CellContext`\[Epsilon] <= $CellContext`\[Alpha] + 
            2 Pi <= $CellContext`aL + $CellContext`\[Epsilon]]], \
$CellContext`drawDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`aR}, {$CellContext`aL, \
$CellContext`aR} = $CellContext`angToDispArc[$CellContext`ptAng, \
$CellContext`disp, $CellContext`\[Theta]]; {
           PointSize[Large], {Blue, 
            Opacity[0.3], 
            Disk[
             $CellContext`angleToPt[$CellContext`ptAng], 
             5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, {Orange, Thick, 
            Circle[{0, 0}, 0.98, {$CellContext`aR, $CellContext`aL}]}, {Green, 
            Point[0.98 {
               Cos[$CellContext`aL], 
               Sin[$CellContext`aL]}]}, {Purple, 
            Point[0.98 {
               Cos[$CellContext`aR], 
               Sin[$CellContext`aR]}]}}], $CellContext`angleToPt[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {
         Cos[$CellContext`\[Theta]], 
         Sin[$CellContext`\[Theta]]}, $CellContext`drawTangentPt[
         Pattern[$CellContext`aL, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`tp, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := Module[{$CellContext`pt = {
            Cos[$CellContext`tp], 
            Sin[$CellContext`tp]}}, 
         If[
          $CellContext`isAngleInArc[$CellContext`aL, $CellContext`aR, \
$CellContext`tp], {
           $CellContext`drawDispArc[$CellContext`tp, $CellContext`disp, \
$CellContext`\[Theta]], 
           PointSize[Large], 
           Point[$CellContext`pt]}, {
           Circle[$CellContext`pt, 1/50]}]], $CellContext`drawCircleMask = {
         GrayLevel[0.85], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         FilledCurve[{{
            Line[{{2, -2}, {2, 2}, {-2, 2}, {-2, -2}}]}, {
            
            BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, SplineDegree -> 2, 
             SplineKnots -> {0, 0, 0, 1/4, 1/2, 1/2, 3/4, 1, 1, 1}, 
             SplineWeights -> {
              1, 0.5, 0.5, 1, 0.5, 0.5, 
               1}]}}]}, $CellContext`drawMovementVectors[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]]] := {{
          Opacity[0.5], Red, 
          
          Disk[$CellContext`pt, 1/
           5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, Black, 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] + \
$CellContext`disp/2]], 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] - \
$CellContext`disp/2]], Red, 
         Arrow[{$CellContext`pt, $CellContext`pt + (1/3) {
              Cos[$CellContext`\[Theta]], 
              Sin[$CellContext`\[Theta]]}}]}, $CellContext`loc[
         Pattern[$CellContext`col, 
          Blank[]]] := ToExpression[
         GraphicsBox[{$CellContext`col, {
            AbsoluteThickness[1], Antialiasing -> False, 
            
            LineBox[{{{0, -10}, {0, -2}}, {{0, 2}, {0, 10}}, {{-10, 0}, {-2, 
             0}}, {{2, 0}, {10, 0}}}], Antialiasing -> True, 
            CircleBox[{-0.5, 0.5}, 5]}, {
            AbsoluteThickness[3], 
            Opacity[0.3], 
            CircleBox[{-0.5, 0.5}, 3]}}, ImageSize -> 17, 
          PlotRange -> {{-8, 8}, {-8, 8}}]], $CellContext`simprojection[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAngIn, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`rA, $CellContext`lA}, {$CellContext`rA, \
$CellContext`lA} = $CellContext`projMath[$CellContext`ptLAng, \
$CellContext`ptRAngIn, $CellContext`disp, $CellContext`\[Theta]]; \
$CellContext`lA - $CellContext`rA]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7127573774344587`*^9, 3.7127575301512136`*^9, {3.7127576971241903`*^9, 
   3.7127577608106747`*^9}, {3.712757803665715*^9, 3.7127578224929247`*^9}},
 CellID->722475178,ExpressionUUID->"d2516638-41cd-4a9f-a01c-adf40a926758"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`disp$$ = 
    0.8190000000000001, $CellContext`ptLin$$ = {0.16599999999999993`, 
    0.9500000000000002}, $CellContext`ptRin$$ = {
    0.3500000000000001, -1.055}, $CellContext`ShowPaths$$ = 
    True, $CellContext`\[Theta]$$ = -Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`disp$$], 0.1, "\[Delta]"}, 0, 1.5697963267948967`, 
      0.001}, {{
       Hold[$CellContext`\[Theta]$$], -Pi}, -3.142, 3.142, 0.001}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`ptLin$$], {1, 0.3}}, Automatic}, {{
       Hold[$CellContext`ptRin$$], {1, -0.3}}, Automatic}, {{
       Hold[$CellContext`ShowPaths$$], False, "Show Paths"}, {True, False}}, {
     
      Hold[
       Row[{
         Button["Propagate", 
          
          Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
           While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
           If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
              Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
              2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
         Manipulate`Place[3]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {148., 152.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`disp$10365364$$ = 
    0, $CellContext`\[Theta]$10365365$$ = 
    0, $CellContext`ShowPaths$10365366$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`disp$$ = 
        0.1, $CellContext`ptLin$$ = {1, 0.3}, $CellContext`ptRin$$ = {
         1, -0.3}, $CellContext`ShowPaths$$ = 
        False, $CellContext`\[Theta]$$ = -Pi}, "ControllerVariables" :> {
        Hold[$CellContext`disp$$, $CellContext`disp$10365364$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$10365365$$, 0], 
        Hold[$CellContext`ShowPaths$$, $CellContext`ShowPaths$10365366$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`ptLAng$, $CellContext`ptRAng$, $CellContext`t1$, \
$CellContext`t2$, $CellContext`rA$, $CellContext`lA$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
        While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
        If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
           Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
           2 Pi]; $CellContext`t1$ = $CellContext`\[Theta]$$ + \
$CellContext`disp$$ + 
          Pi/2; $CellContext`t2$ = $CellContext`\[Theta]$$ - \
$CellContext`disp$$ + 
          3 (Pi/2); {$CellContext`rA$, $CellContext`lA$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; Row[{
           Graphics[{
             Table[
              $CellContext`drawDispArc[$CellContext`a, $CellContext`disp$$, \
$CellContext`\[Theta]$$], {$CellContext`a, $CellContext`ptRAng$, \
$CellContext`ptLAng$, ($CellContext`ptLAng$ - $CellContext`ptRAng$)/
               If[$CellContext`ShowPaths$$, 10, 1]}], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t1$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], 
             $CellContext`drawTangentPt[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`t2$, $CellContext`disp$$, $CellContext`\
\[Theta]$$], $CellContext`drawCircleMask, {Blue, 
              Thickness[0.02], 
              
              Circle[{0, 0}, 
               1.04, {$CellContext`rA$, $CellContext`lA$ + 
                If[$CellContext`lA$ < $CellContext`rA$, 2 Pi, 0]}]}, Green, 
             Thickness[0.01], 
             
             Circle[{0, 0}, 
              1.01, {$CellContext`ptLAng$, $CellContext`ptRAng$}], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptLAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             $CellContext`drawMovementVectors[
              $CellContext`angleToPt[$CellContext`ptRAng$], $CellContext`\
\[Theta]$$, $CellContext`disp$$], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptLAng$], 
              $CellContext`loc[Blue]], 
             Locator[
              $CellContext`angleToPt[$CellContext`ptRAng$], 
              $CellContext`loc[Red]]}, PlotRange -> 1.25 {{-1, 1}, {-1, 1}}, 
            ImageSize -> 300], 
           Plot[
            $CellContext`simprojection[$CellContext`ptLAng$, \
$CellContext`ptRAng$, $CellContext`disp$$, $CellContext`\[Phi]], \
{$CellContext`\[Phi], -Pi, Pi}, PlotStyle -> Blue, ImageSize -> 300, 
            AspectRatio -> 0.9, 
            PlotRange -> {{-Pi - 0.1, Pi + 0.1}, {-0.3, 2 Pi + 0.2}}, 
            PlotLabel -> "Arc Length", Prolog -> {Green, 
              
              Line[{{-Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}, {
                Pi, $CellContext`ptLAng$ - $CellContext`ptRAng$}}]}, 
            Epilog -> {{
               Darker[Blue], Dashed, 
               Text["Min", {-3, 4 $CellContext`disp$$ - 0.2}], 
               Line[{{-Pi, 4 $CellContext`disp$$}, {
                 Pi, 4 $CellContext`disp$$}}], 
               Text["Max", {-3, Pi + 2 $CellContext`disp$$ + 0.1}], 
               
               Line[{{-Pi, Pi + 2 $CellContext`disp$$}, {
                 Pi, Pi + 2 $CellContext`disp$$}}]}, Red, 
              
              Line[{{$CellContext`\[Theta]$$, 0}, {$CellContext`\[Theta]$$, 
                 2 Pi - 0.2}}], 
              Text["\[Theta]", {$CellContext`\[Theta]$$, 2 Pi}]}]}]], 
      "Specifications" :> {{{$CellContext`disp$$, 0.1, "\[Delta]"}, 0, 
         1.5697963267948967`, 0.001, Appearance -> "Labeled", ImageSize -> 
         240, ControlPlacement -> 1}, {{$CellContext`\[Theta]$$, -Pi}, -3.142,
          3.142, 0.001, Appearance -> "Labeled", ImageSize -> 240, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`ptLin$$, {1, 0.3}}, Automatic,
          ControlType -> Locator, Appearance -> 
         None}, {{$CellContext`ptRin$$, {1, -0.3}}, Automatic, ControlType -> 
         Locator, Appearance -> 
         None}, {{$CellContext`ShowPaths$$, False, "Show Paths"}, {
         True, False}, ControlPlacement -> 3}, 
        Row[{
          Button["Propagate", 
           
           Module[{$CellContext`left$, $CellContext`right$, \
$CellContext`ptRAng$, $CellContext`ptLAng$}, $CellContext`ptLAng$ = \
$CellContext`ptToAng[$CellContext`ptLin$$]; $CellContext`ptRAng$ = \
$CellContext`ptToAng[$CellContext`ptRin$$]; 
            While[$CellContext`ptLAng$ < $CellContext`ptRAng$, \
$CellContext`ptLAng$ = $CellContext`ptLAng$ + 2 Pi]; 
            If[$CellContext`ptRAng$ < $CellContext`ptLAng$ - 2 
               Pi, $CellContext`ptRAng$ = $CellContext`ptRAng$ + 
               2 Pi]; {$CellContext`right$, $CellContext`left$} = \
$CellContext`projMath[$CellContext`ptLAng$, $CellContext`ptRAng$, \
$CellContext`disp$$, $CellContext`\[Theta]$$]; $CellContext`ptLin$$ = \
$CellContext`angleToPt[$CellContext`left$]; $CellContext`ptRin$$ = \
$CellContext`angleToPt[$CellContext`right$]], ImageSize -> 500], 
          Manipulate`Place[3]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{659., {211., 217.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`ptToAng[
         Pattern[$CellContext`ptin, 
          Blank[]]] := 
       Module[{$CellContext`pt}, $CellContext`pt = 
          If[Norm[$CellContext`ptin] > 0, $CellContext`ptin/
            Norm[$CellContext`ptin], {1, 0}]; ArcTan[
           Part[$CellContext`pt, 1], 
           Part[$CellContext`pt, 2]]], $CellContext`projMath[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aLhL, $CellContext`aLhR, $CellContext`aRhL, \
$CellContext`aRhR, $CellContext`t1, $CellContext`t2, $CellContext`rA, \
$CellContext`lA}, {$CellContext`aLhL, $CellContext`aLhR} = \
$CellContext`angToDispArc[$CellContext`ptLAng, $CellContext`disp, \
$CellContext`\[Theta]]; {$CellContext`aRhL, $CellContext`aRhR} = \
$CellContext`angToDispArc[$CellContext`ptRAng, $CellContext`disp, \
$CellContext`\[Theta]]; If[
           And[
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhL], 
            $CellContext`isAngleInArc[$CellContext`aRhL, $CellContext`aRhR, \
$CellContext`aLhR]], $CellContext`rA = $CellContext`aRhR; $CellContext`lA = \
$CellContext`aRhL, 
           If[
            And[
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhL], 
             $CellContext`isAngleInArc[$CellContext`aLhL, $CellContext`aLhR, \
$CellContext`aRhR]], $CellContext`rA = $CellContext`aLhR; $CellContext`lA = \
$CellContext`aLhL, 
            If[
             And[
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhL], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aRhR], 
              $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`aLhL]], $CellContext`rA = $CellContext`aRhR; \
$CellContext`lA = $CellContext`aLhL, $CellContext`rA = $CellContext`aLhR; \
$CellContext`lA = $CellContext`aRhL]]]; $CellContext`t1 = $CellContext`\
\[Theta] + $CellContext`disp + 
           Pi/2; $CellContext`t2 = $CellContext`\[Theta] - $CellContext`disp + 
           3 (Pi/2); $CellContext`rA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t2], $CellContext`t2, $CellContext`rA]; \
$CellContext`lA = If[
            $CellContext`isAngleInArc[$CellContext`ptLAng, \
$CellContext`ptRAng, $CellContext`t1], $CellContext`t1, $CellContext`lA]; \
$CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA < $CellContext`rA, 2 Pi, 
             0]; $CellContext`lA = $CellContext`lA + 
           If[$CellContext`lA > 2 Pi + $CellContext`rA, (-2) Pi, 
             0]; {$CellContext`rA, $CellContext`lA}], \
$CellContext`angToDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`\[Beta]L, $CellContext`\[Beta]R, $CellContext`aL, \
$CellContext`aR}, $CellContext`\[Beta]L = $CellContext`\[Theta] + \
$CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]L = $CellContext`\
\[Beta]L + If[$CellContext`\[Beta]L > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]L < -Pi, 2 Pi, 0]; $CellContext`aL = 
          If[Abs[$CellContext`\[Beta]L] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng - (Pi - 
            2 $CellContext`\[Beta]L)]; $CellContext`\[Beta]R = $CellContext`\
\[Theta] - $CellContext`disp + 
           Pi - $CellContext`ptAng; $CellContext`\[Beta]R = $CellContext`\
\[Beta]R + If[$CellContext`\[Beta]R > Pi, (-2) Pi, 0] + 
           If[$CellContext`\[Beta]R < -Pi, 2 Pi, 0]; $CellContext`aR = 
          If[Abs[$CellContext`\[Beta]R] >= 
            Pi/2, $CellContext`ptAng, $CellContext`ptAng + (Pi + 
             2 $CellContext`\[Beta]R)]; $CellContext`aR = $CellContext`aR + 
           If[$CellContext`aR > $CellContext`aL, (-2) Pi, 0]; If[
           
           Or[$CellContext`aR < -Pi, $CellContext`aL < -
             Pi], $CellContext`aR = $CellContext`aR + 
             2 Pi; $CellContext`aL = $CellContext`aL + 2 Pi]; 
         Return[{$CellContext`aL, $CellContext`aR}]], \
$CellContext`isAngleInArc[
         Pattern[$CellContext`aLin, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`\[Epsilon] = 
          0.001}, $CellContext`aL = $CellContext`aLin + 
           If[$CellContext`aLin < $CellContext`aR, 2 Pi, 0]; 
         Or[$CellContext`aR - $CellContext`\[Epsilon] <= \
$CellContext`\[Alpha] <= $CellContext`aL + $CellContext`\[Epsilon], \
$CellContext`aR - $CellContext`\[Epsilon] <= $CellContext`\[Alpha] - 2 
            Pi <= $CellContext`aL + $CellContext`\[Epsilon], $CellContext`aR - \
$CellContext`\[Epsilon] <= $CellContext`\[Alpha] + 
            2 Pi <= $CellContext`aL + $CellContext`\[Epsilon]]], \
$CellContext`drawDispArc[
         Pattern[$CellContext`ptAng, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`aL, $CellContext`aR}, {$CellContext`aL, \
$CellContext`aR} = $CellContext`angToDispArc[$CellContext`ptAng, \
$CellContext`disp, $CellContext`\[Theta]]; {
           PointSize[Large], {Blue, 
            Opacity[0.3], 
            Disk[
             $CellContext`angleToPt[$CellContext`ptAng], 
             5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, {Orange, Thick, 
            Circle[{0, 0}, 0.98, {$CellContext`aR, $CellContext`aL}]}, {Green, 
            Point[0.98 {
               Cos[$CellContext`aL], 
               Sin[$CellContext`aL]}]}, {Purple, 
            Point[0.98 {
               Cos[$CellContext`aR], 
               Sin[$CellContext`aR]}]}}], $CellContext`angleToPt[
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := {
         Cos[$CellContext`\[Theta]], 
         Sin[$CellContext`\[Theta]]}, $CellContext`drawTangentPt[
         Pattern[$CellContext`aL, 
          Blank[]], 
         Pattern[$CellContext`aR, 
          Blank[]], 
         Pattern[$CellContext`tp, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := Module[{$CellContext`pt = {
            Cos[$CellContext`tp], 
            Sin[$CellContext`tp]}}, 
         If[
          $CellContext`isAngleInArc[$CellContext`aL, $CellContext`aR, \
$CellContext`tp], {
           $CellContext`drawDispArc[$CellContext`tp, $CellContext`disp, \
$CellContext`\[Theta]], 
           PointSize[Large], 
           Point[$CellContext`pt]}, {
           Circle[$CellContext`pt, 1/50]}]], $CellContext`drawCircleMask = {
         GrayLevel[0.85], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         FilledCurve[{{
            Line[{{2, -2}, {2, 2}, {-2, 2}, {-2, -2}}]}, {
            
            BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, SplineDegree -> 2, 
             SplineKnots -> {0, 0, 0, 1/4, 1/2, 1/2, 3/4, 1, 1, 1}, 
             SplineWeights -> {
              1, 0.5, 0.5, 1, 0.5, 0.5, 
               1}]}}]}, $CellContext`drawMovementVectors[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]]] := {{
          Opacity[0.5], Red, 
          
          Disk[$CellContext`pt, 1/
           5, {$CellContext`\[Theta] - $CellContext`disp, $CellContext`\
\[Theta] + $CellContext`disp}]}, Black, 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] + \
$CellContext`disp/2]], 
         Text[
         "\[Delta]", $CellContext`pt + (1/
            7) $CellContext`angleToPt[$CellContext`\[Theta] - \
$CellContext`disp/2]], Red, 
         Arrow[{$CellContext`pt, $CellContext`pt + (1/3) {
              Cos[$CellContext`\[Theta]], 
              Sin[$CellContext`\[Theta]]}}]}, $CellContext`loc[
         Pattern[$CellContext`col, 
          Blank[]]] := ToExpression[
         GraphicsBox[{$CellContext`col, {
            AbsoluteThickness[1], Antialiasing -> False, 
            
            LineBox[{{{0, -10}, {0, -2}}, {{0, 2}, {0, 10}}, {{-10, 0}, {-2, 
             0}}, {{2, 0}, {10, 0}}}], Antialiasing -> True, 
            CircleBox[{-0.5, 0.5}, 5]}, {
            AbsoluteThickness[3], 
            Opacity[0.3], 
            CircleBox[{-0.5, 0.5}, 3]}}, ImageSize -> 17, 
          PlotRange -> {{-8, 8}, {-8, 8}}]], $CellContext`simprojection[
         Pattern[$CellContext`ptLAng, 
          Blank[]], 
         Pattern[$CellContext`ptRAngIn, 
          Blank[]], 
         Pattern[$CellContext`disp, 
          Blank[]], 
         Pattern[$CellContext`\[Theta], 
          Blank[]]] := 
       Module[{$CellContext`rA, $CellContext`lA}, {$CellContext`rA, \
$CellContext`lA} = $CellContext`projMath[$CellContext`ptLAng, \
$CellContext`ptRAngIn, $CellContext`disp, $CellContext`\[Theta]]; \
$CellContext`lA - $CellContext`rA]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7127573774344587`*^9, 3.7127575301512136`*^9, {3.7127576971241903`*^9, 
   3.7127577608106747`*^9}, {3.712757803665715*^9, 3.7127578224929247`*^9}},
 CellID->1270197132,ExpressionUUID->"6ad4d215-a315-4c68-bc13-c222d7ddfbd7"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   9,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429207483187`*^9},
 CellID->75644595,ExpressionUUID->"ad831d71-8d8c-40a6-be9a-16527498c58e"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   10,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142920872317*^9},
 CellID->526668773,ExpressionUUID->"003f1706-a68e-4b5c-a89e-5cc1ba096d44"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   11,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142920974827*^9},
 CellID->200566274,ExpressionUUID->"d0aa664f-e6f4-4802-a696-bf89f21f3b6e"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,1,12,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429210905066`*^9},
 CellID->116373377,ExpressionUUID->"1ce5efc0-6c1c-48d5-a473-db08c3ee577a"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   13,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429316968403`*^9},
 CellID->105237640,ExpressionUUID->"e244f8a8-c29b-4d07-a0a3-2741030cf9b3"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   14,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429318368764`*^9},
 CellID->654770800,ExpressionUUID->"e69014a1-94d8-4e2b-9a84-fa49656fbe63"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,1,
   15,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429319393473`*^9},
 CellID->239454240,ExpressionUUID->"93cd3755-65d4-4aaf-9e44-d4827e0fa287"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,1,16,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142932052343*^9},
 CellID->115116314,ExpressionUUID->"df309417-e9c2-4ba2-b7e7-3f34a634c0c3"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   25,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.71314296423359*^9},
 CellID->285892936,ExpressionUUID->"48f84d0e-c6f9-47ab-a3db-518b18734f66"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   26,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142964316592*^9},
 CellID->313167365,ExpressionUUID->"73b82e79-69a8-4a1f-a133-b3b984b8fa6a"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,2,
   27,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713142964424093*^9},
 CellID->1134390,ExpressionUUID->"07f97153-b5bd-4de1-ad9b-1d01898677d9"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"$IterationLimit\\\", \\\
\"::\\\", \\\"itlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,2,28,19072710553210490175,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7131429645350914`*^9},
 CellID->94438515,ExpressionUUID->"63ed6564-f945-4d52-b339-002954b42f43"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection",ExpressionUUID->"2079d5a8-d109-46f1-ae78-ae5a88e3ee71"],

Cell["", "DetailNotes",
 CellChangeTimes->{{3.712758535854062*^9, 3.712758549818181*^9}},
 CellID->1190852696,ExpressionUUID->"3c9fda4b-34cc-48bd-89d1-965f04edc5b9"],

Cell["\<\
We assume at least one global input has been applied, so the particles start \
in an arc along a boundary. The left image shows the current particle \
distribution in green, and in blue the distribution they will achieve if they \
are propagated in the current \[Theta] direction. The \[Theta] direction is \
shown by two red arrows, each starting from either the left or right endpoint \
of the arc.  The particle dispersion \[PlusMinus]\[Delta] is shown with \
transparent circle sectors, and the path from their current position to an \
ending arc is shown with a transparent blue sector, which ends along an \
orange arc whose extent are highlighted by green and purple points.  If \
\"Show Paths\" is selected, additional starting points along the current arc \
are shown.\
\>", "DetailNotes",
 CellChangeTimes->{{3.712758551644495*^9, 3.71275891950762*^9}},
 CellID->829621493,ExpressionUUID->"3b842aaf-a4e7-4386-bc88-6c652fb76782"],

Cell["The arc may be initialized to be of longth 0 to 2\[Pi] radians.", \
"DetailNotes",
 CellChangeTimes->{{3.712758535854062*^9, 3.712758549804687*^9}, {
  3.712758941132319*^9, 3.712759000628985*^9}},
 CellID->110179048,ExpressionUUID->"db98cb73-8b72-474a-98ea-1f104148e19c"],

Cell[TextData[{
 "Any initial distribution can be steered to a minimum arc length of \
4\[Delta], and a maximum arc length of \[Pi] +2\[Delta]. Once the arc length \
exceeds the minimum, it can never be reduced to less than 4\[Delta].  \
Similarly, if the arc length is ever less than the maximum, it can never be \
increased to  more than \[Pi] +2\[Delta]. \nEvery propagation step can add no \
more than 2\[Delta] to the arc length, or decrease the arc length by ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"current", "-", "min"}], "2"], TraditionalForm]],ExpressionUUID->
  "25269be6-2aa2-45bf-9bdb-0689a297236e"],
 ". "
}], "DetailNotes",
 CellChangeTimes->{{3.712758535854062*^9, 3.712758549804687*^9}, {
  3.712758941132319*^9, 3.712759147752969*^9}},
 CellID->2037994890,ExpressionUUID->"05acbba4-b717-4204-8031-b0bca28f1097"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection",ExpressionUUID->"67bbc1b5-e9f4-4d23-968f-8a98633ed6b0"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Resize Images",ExpressionUUID->"1c5bb472-1d6e-4749-a4cf-0f1a09cccca8"]}],
  
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\""]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "ResizeImages",ExpressionUUID->"73b4da2f-73a2-40c4-94b9-8ed215e348ea"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Rotate and Zoom in 3D",ExpressionUUID->
    "5e6f9431-36ca-4bd1-be1d-6f751653d6be"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" on Mac) and drag up and down to zoom.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "RotateAndZoomIn3D",ExpressionUUID->"05451c8f-774b-469b-b19f-3b0e0921d6fc"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Drag Locators",ExpressionUUID->"15573844-f9a2-4645-b70f-f4955bb0621f"]}],
  
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}]]], "ControlSuggestions",
 CellChangeTimes->{3.712759154217491*^9},
 FontFamily->"Verdana",
 CellTags->
  "DragLocators",ExpressionUUID->"c6c20001-3247-479d-82fa-6ff1d734cbdd"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Create and Delete Locators",ExpressionUUID->
    "c7b0bae1-32dd-4298-a111-02904d7b0fcb"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "CreateAndDeleteLocators",ExpressionUUID->"3d123bc0-427f-40a1-8b82-\
2039f53c14eb"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Slider Zoom",ExpressionUUID->"efc2a8bd-8c4e-4a70-9158-1680c8c510f0"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" to make ever finer adjustments.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "SliderZoom",ExpressionUUID->"9f035a4d-1eff-4ba9-b24b-ae21c52d9bc5"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Gamepad Controls",ExpressionUUID->
    "4f72d486-c45b-4a54-b499-148c4f8bec47"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\""]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->
  "GamepadControls",ExpressionUUID->"1cb2367a-fe83-4105-bfea-9b7626b5022d"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Automatic Animation",ExpressionUUID->
    "20965c94-607b-45d0-b610-a616d6d3a657"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "AutomaticAnimation",ExpressionUUID->"ce65a927-30ed-4203-bbaa-66b0345fbc57"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Bookmark Animation",ExpressionUUID->
    "35e6b63a-ba86-40f4-807c-863d4652f9b0"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "BookmarkAnimation",ExpressionUUID->"728b049a-d5cb-4f7a-b303-31f603082db4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection",ExpressionUUID->"b08418f2-f677-4841-8149-6614c5cd485c"],

Cell["particle spread", "SearchTerms",
 CellChangeTimes->{{3.712758502335486*^9, 3.712758505154503*^9}},
 CellID->714373906,ExpressionUUID->"4959e003-dabd-48b7-b23e-abff9dddcb5c"],

Cell["global input", "SearchTerms",
 CellChangeTimes->{{3.712758502335486*^9, 3.712758511185615*^9}},
 CellID->1078969133,ExpressionUUID->"cee7ac23-0310-4390-8f9d-53d1eff7d9bd"],

Cell["particle manipulation", "SearchTerms",
 CellChangeTimes->{{3.712758502335486*^9, 3.712758516409938*^9}},
 CellID->1651977216,ExpressionUUID->"4baba22d-b3c9-47a4-b5be-5a15acc57bb1"],

Cell["billiards", "SearchTerms",
 CellChangeTimes->{{3.712758502335486*^9, 3.712758516403821*^9}, {
  3.712759184146854*^9, 3.712759185265789*^9}},
 CellID->119283221,ExpressionUUID->"ae0c3702-61c6-48e6-b6d1-846e695075ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection",ExpressionUUID->"4d03ae82-835b-4d25-99a6-ace9cbfcf558"],

Cell[TextData[ButtonBox["Circle",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/Circle.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/Circle.html"]], "RelatedLinks",
 CellChangeTimes->{{3.7127592152137337`*^9, 3.71275922331411*^9}},
 CellID->1836540886,ExpressionUUID->"001ec2cc-ce49-485d-91d3-cdaf6b0fceb4"],

Cell[TextData[ButtonBox["Billiards",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/Billiards.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/Billiards.html"]], "RelatedLinks",
 CellChangeTimes->{{3.7127592453919487`*^9, 3.712759263941943*^9}},
 CellID->960212671,ExpressionUUID->"9c6bca4b-d412-4c97-90b5-e95f84e79d7d"],

Cell[TextData[ButtonBox["Illumination Problem",
 BaseStyle->"Hyperlink",
 ButtonData->{
  "", "http://mathworld.wolfram.com/IlluminationProblem.html"}]], \
"RelatedLinks",
 CellChangeTimes->{{3.712759356914119*^9, 3.7127593726149*^9}},
 CellID->309414417,ExpressionUUID->"2f877372-ed2b-4862-a8b9-1e2dca1f0298"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection",ExpressionUUID->"631fa904-8b4d-477a-9757-c8c115c4fe0f"],

Cell["Contributed by: Daniel Bao and Tate Song and Aaron T. Becker", "Author",
 CellChangeTimes->{
  3.35696210375764*^9, {3.432333043774981*^9, 3.432333045441087*^9}, {
   3.712758475696752*^9, 
   3.712758488454652*^9}},ExpressionUUID->"ac625d49-8669-4905-8a67-\
5a315f3ad8ae"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1368, 829},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[180359, 4031, 410, 10, 
  29, "ControlSuggestions", "ExpressionUUID" -> "
   73b4da2f-73a2-40c4-94b9-8ed215e348ea",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[180772, 4043, 783, 19, 
  29, "ControlSuggestions", "ExpressionUUID" -> "05451c8f-774b-469b-
   b19f-3b0e0921d6fc",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[181558, 4064, 479, 14, 
  29, "ControlSuggestions", "ExpressionUUID" -> "
   c6c20001-3247-479d-82fa-6ff1d734cbdd",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[182040, 4080, 739, 18, 
  29, "ControlSuggestions", "ExpressionUUID" -> "
   3d123bc0-427f-40a1-8b82-2039f53c14eb",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[182782, 4100, 944, 23, 
  29, "ControlSuggestions", "ExpressionUUID" -> "9f035a4d-1eff-4ba9-b24b-
   ae21c52d9bc5",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[183729, 4125, 469, 11, 
  29, "ControlSuggestions", "ExpressionUUID" -> "1cb2367a-fe83-4105-
   bfea-9b7626b5022d",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[184201, 4138, 1564, 33, 
  29, "ControlSuggestions", "ExpressionUUID" -> "ce65a927-30ed-4203-
   bbaa-66b0345fbc57",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[185768, 4173, 1008, 23, 
  29, "ControlSuggestions", "ExpressionUUID" -> "728b049a-d5cb-4f7a-
   b303-31f603082db4",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 189621, 4274},
 {"RotateAndZoomIn3D", 189799, 4279},
 {"DragLocators", 189977, 4284},
 {"CreateAndDeleteLocators", 190161, 4289},
 {"SliderZoom", 190343, 4294},
 {"GamepadControls", 190517, 4299},
 {"AutomaticAnimation", 190699, 4304},
 {"BookmarkAnimation", 190884, 4309}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 271, 6, 104, "DemoTitle", "ExpressionUUID" -> \
"1116befa-872b-4c73-8b24-383d1725f14b"],
Cell[CellGroupData[{
Cell[876, 32, 88, 0, 275, "InitializationSection", "ExpressionUUID" -> \
"b9ba872a-72c7-434e-b555-ee4310277ffd"],
Cell[967, 34, 31295, 769, 1682, "Input", "ExpressionUUID" -> \
"ceee0ec9-c487-4682-be10-986d57d18a38",
 CellID->1697015281]
}, Open  ]],
Cell[CellGroupData[{
Cell[32299, 808, 84, 0, 231, "ManipulateSection", "ExpressionUUID" -> \
"afdf8610-1a8b-40f8-8b19-9aabaa31d6b2"],
Cell[CellGroupData[{
Cell[32408, 812, 17490, 426, 1057, "Input", "ExpressionUUID" -> \
"f3c7711a-74e1-4f15-b675-6e7136e64797"],
Cell[49901, 1240, 19672, 408, 440, "Output", "ExpressionUUID" -> \
"6c347b13-7dd2-4606-a1e2-2e9334cbb478",
 CellID->94645224],
Cell[69576, 1650, 333, 7, 19, "Message", "ExpressionUUID" -> \
"d2746c54-0cd7-4da2-a4e4-d0bf381f7ed0",
 CellID->854421818],
Cell[69912, 1659, 331, 7, 19, "Message", "ExpressionUUID" -> \
"ea4164cd-7b24-4c2b-8c9d-fa8c819440e9",
 CellID->918647566],
Cell[70246, 1668, 330, 7, 19, "Message", "ExpressionUUID" -> \
"ae93545d-0a7b-4611-9e18-8e33c8f6f493",
 CellID->150879156],
Cell[70579, 1677, 426, 8, 19, "Message", "ExpressionUUID" -> \
"bfc14f6b-512e-4b43-8eca-60a1143f1c07",
 CellID->239022261],
Cell[71008, 1687, 330, 7, 19, "Message", "ExpressionUUID" -> \
"89068e97-6c77-4191-be50-820ef414b44b",
 CellID->469530015],
Cell[71341, 1696, 333, 7, 19, "Message", "ExpressionUUID" -> \
"f64c4cbf-892c-46e7-b590-773e8d079a73",
 CellID->306177792],
Cell[71677, 1705, 331, 7, 19, "Message", "ExpressionUUID" -> \
"cf020f9f-74ca-4dee-bbd9-ff1b2a54b9da",
 CellID->307422428],
Cell[72011, 1714, 424, 8, 19, "Message", "ExpressionUUID" -> \
"4f1aa3b1-4368-4b32-90ba-97f2eb93ee90",
 CellID->210517265],
Cell[72438, 1724, 329, 7, 19, "Message", "ExpressionUUID" -> \
"ca6440e7-eb56-4214-bc34-10e42346a640",
 CellID->7696884],
Cell[72770, 1733, 333, 7, 19, "Message", "ExpressionUUID" -> \
"812714fa-c46b-4c43-b7e2-6bcc8e2d6a2f",
 CellID->233641333],
Cell[73106, 1742, 332, 7, 19, "Message", "ExpressionUUID" -> \
"c6b5a930-15f4-4e87-a540-66158c4e46df",
 CellID->66559220],
Cell[73441, 1751, 425, 8, 19, "Message", "ExpressionUUID" -> \
"10955c6f-fadb-46ea-821f-1667c5b30e36",
 CellID->49562577]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73915, 1765, 91, 0, 169, "ManipulateCaptionSection", "ExpressionUUID" -> \
"2e32c3e3-1da4-44cf-a963-d4b135b3c009"],
Cell[74009, 1767, 863, 16, 52, "ManipulateCaption", "ExpressionUUID" -> \
"4acebaef-65f3-478c-b7b5-41462e3c4267"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74909, 1788, 83, 0, 172, "ThumbnailSection", "ExpressionUUID" -> \
"7218a0ce-9931-4504-a6c1-df086322257c"],
Cell[74995, 1790, 18800, 389, 440, "Output", "ExpressionUUID" -> \
"c5a70e15-62e4-48d4-a573-76ed41e632e8",
 CellID->1753136171],
Cell[93798, 2181, 329, 7, 19, "Message", "ExpressionUUID" -> \
"865fa889-3b10-4d22-b90a-183ae3a49aae",
 CellID->1651158],
Cell[94130, 2190, 327, 7, 19, "Message", "ExpressionUUID" -> \
"7da7116e-8a1a-4471-a65b-103cac75da94",
 CellID->1267751],
Cell[94460, 2199, 329, 7, 19, "Message", "ExpressionUUID" -> \
"c0e19c4e-22a8-463a-b937-36ba309352a6",
 CellID->354455774],
Cell[94792, 2208, 424, 8, 19, "Message", "ExpressionUUID" -> \
"f00e9348-a81a-42ed-9e90-760431260769",
 CellID->463893046],
Cell[95219, 2218, 333, 7, 19, "Message", "ExpressionUUID" -> \
"244c972d-b145-4afc-b443-27b82b8765ae",
 CellID->194516143],
Cell[95555, 2227, 333, 7, 19, "Message", "ExpressionUUID" -> \
"b10fdf52-34d7-4910-b9e5-c92777cf6054",
 CellID->107688974],
Cell[95891, 2236, 331, 7, 19, "Message", "ExpressionUUID" -> \
"7b47bad0-6684-4c5f-95db-fdbaf7a1d913",
 CellID->237531221],
Cell[96225, 2245, 426, 8, 19, "Message", "ExpressionUUID" -> \
"ea11fa47-3e3d-426e-8c01-d2bc39ab12e8",
 CellID->135124677],
Cell[96654, 2255, 330, 7, 19, "Message", "ExpressionUUID" -> \
"6ebe9979-632b-45a0-8fde-789b373791b2",
 CellID->38161266],
Cell[96987, 2264, 330, 7, 19, "Message", "ExpressionUUID" -> \
"abe2abb4-5a5e-441f-a1aa-4620eb21555f",
 CellID->60656107],
Cell[97320, 2273, 332, 7, 19, "Message", "ExpressionUUID" -> \
"a420a3cc-df55-4269-b282-a9bbf237895b",
 CellID->56676395],
Cell[97655, 2282, 422, 8, 19, "Message", "ExpressionUUID" -> \
"be27c981-41c6-46e6-abcc-b8e0e8ec983e",
 CellID->2625238]
}, Open  ]],
Cell[CellGroupData[{
Cell[98114, 2295, 83, 0, 142, "SnapshotsSection", "ExpressionUUID" -> \
"4a09725b-cbd4-4a15-be3b-0094e5587242"],
Cell[98200, 2297, 18800, 389, 440, "Output", "ExpressionUUID" -> \
"106e7cec-282b-4212-b11e-56a704cf8533",
 CellID->1483989157],
Cell[117003, 2688, 18868, 391, 440, "Output", "ExpressionUUID" -> \
"62fb91c3-e1fa-4eba-ac4b-99c121a3f41b",
 CellID->530685441],
Cell[135874, 3081, 18865, 391, 440, "Output", "ExpressionUUID" -> \
"d2516638-41cd-4a9f-a01c-adf40a926758",
 CellID->722475178],
Cell[154742, 3474, 18837, 390, 440, "Output", "ExpressionUUID" -> \
"6ad4d215-a315-4c68-bc13-c222d7ddfbd7",
 CellID->1270197132],
Cell[173582, 3866, 330, 7, 19, "Message", "ExpressionUUID" -> \
"ad831d71-8d8c-40a6-be9a-16527498c58e",
 CellID->75644595],
Cell[173915, 3875, 330, 7, 19, "Message", "ExpressionUUID" -> \
"003f1706-a68e-4b5c-a89e-5cc1ba096d44",
 CellID->526668773],
Cell[174248, 3884, 330, 7, 19, "Message", "ExpressionUUID" -> \
"d0aa664f-e6f4-4802-a696-bf89f21f3b6e",
 CellID->200566274],
Cell[174581, 3893, 425, 8, 19, "Message", "ExpressionUUID" -> \
"1ce5efc0-6c1c-48d5-a473-db08c3ee577a",
 CellID->116373377],
Cell[175009, 3903, 332, 7, 19, "Message", "ExpressionUUID" -> \
"e244f8a8-c29b-4d07-a0a3-2741030cf9b3",
 CellID->105237640],
Cell[175344, 3912, 332, 7, 19, "Message", "ExpressionUUID" -> \
"e69014a1-94d8-4e2b-9a84-fa49656fbe63",
 CellID->654770800],
Cell[175679, 3921, 332, 7, 19, "Message", "ExpressionUUID" -> \
"93cd3755-65d4-4aaf-9e44-d4827e0fa287",
 CellID->239454240],
Cell[176014, 3930, 423, 8, 19, "Message", "ExpressionUUID" -> \
"df309417-e9c2-4ba2-b7e7-3f34a634c0c3",
 CellID->115116314],
Cell[176440, 3940, 329, 7, 19, "Message", "ExpressionUUID" -> \
"48f84d0e-c6f9-47ab-a3db-518b18734f66",
 CellID->285892936],
Cell[176772, 3949, 330, 7, 19, "Message", "ExpressionUUID" -> \
"73b82e79-69a8-4a1f-a133-b3b984b8fa6a",
 CellID->313167365],
Cell[177105, 3958, 328, 7, 19, "Message", "ExpressionUUID" -> \
"07f97153-b5bd-4de1-ad9b-1d01898677d9",
 CellID->1134390],
Cell[177436, 3967, 424, 8, 19, "Message", "ExpressionUUID" -> \
"63ed6564-f945-4d52-b339-002954b42f43",
 CellID->94438515]
}, Open  ]],
Cell[CellGroupData[{
Cell[177897, 3980, 81, 0, 357, "DetailsSection", "ExpressionUUID" -> \
"2079d5a8-d109-46f1-ae78-ae5a88e3ee71"],
Cell[177981, 3982, 165, 2, 23, "DetailNotes", "ExpressionUUID" -> \
"3c9fda4b-34cc-48bd-89d1-965f04edc5b9",
 CellID->1190852696],
Cell[178149, 3986, 948, 14, 103, "DetailNotes", "ExpressionUUID" -> \
"3b842aaf-a4e7-4386-bc88-6c652fb76782",
 CellID->829621493],
Cell[179100, 4002, 278, 4, 23, "DetailNotes", "ExpressionUUID" -> \
"db98cb73-8b72-474a-98ea-1f104148e19c",
 CellID->110179048],
Cell[179381, 4008, 846, 16, 80, "DetailNotes", "ExpressionUUID" -> \
"05acbba4-b717-4204-8031-b0bca28f1097",
 CellID->2037994890]
}, Open  ]],
Cell[CellGroupData[{
Cell[180264, 4029, 92, 0, 131, "ControlSuggestionsSection", "ExpressionUUID" \
-> "67bbc1b5-e9f4-4d23-968f-8a98633ed6b0"],
Cell[180359, 4031, 410, 10, 29, "ControlSuggestions", "ExpressionUUID" -> \
"73b4da2f-73a2-40c4-94b9-8ed215e348ea",
 CellTags->"ResizeImages"],
Cell[180772, 4043, 783, 19, 29, "ControlSuggestions", "ExpressionUUID" -> \
"05451c8f-774b-469b-b19f-3b0e0921d6fc",
 CellTags->"RotateAndZoomIn3D"],
Cell[181558, 4064, 479, 14, 29, "ControlSuggestions", "ExpressionUUID" -> \
"c6c20001-3247-479d-82fa-6ff1d734cbdd",
 CellTags->"DragLocators"],
Cell[182040, 4080, 739, 18, 29, "ControlSuggestions", "ExpressionUUID" -> \
"3d123bc0-427f-40a1-8b82-2039f53c14eb",
 CellTags->"CreateAndDeleteLocators"],
Cell[182782, 4100, 944, 23, 29, "ControlSuggestions", "ExpressionUUID" -> \
"9f035a4d-1eff-4ba9-b24b-ae21c52d9bc5",
 CellTags->"SliderZoom"],
Cell[183729, 4125, 469, 11, 29, "ControlSuggestions", "ExpressionUUID" -> \
"1cb2367a-fe83-4105-bfea-9b7626b5022d",
 CellTags->"GamepadControls"],
Cell[184201, 4138, 1564, 33, 29, "ControlSuggestions", "ExpressionUUID" -> \
"ce65a927-30ed-4203-bbaa-66b0345fbc57",
 CellTags->"AutomaticAnimation"],
Cell[185768, 4173, 1008, 23, 29, "ControlSuggestions", "ExpressionUUID" -> \
"728b049a-d5cb-4f7a-b303-31f603082db4",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186813, 4201, 85, 0, 165, "SearchTermsSection", "ExpressionUUID" -> \
"b08418f2-f677-4841-8149-6614c5cd485c"],
Cell[186901, 4203, 179, 2, 23, "SearchTerms", "ExpressionUUID" -> \
"4959e003-dabd-48b7-b23e-abff9dddcb5c",
 CellID->714373906],
Cell[187083, 4207, 177, 2, 23, "SearchTerms", "ExpressionUUID" -> \
"cee7ac23-0310-4390-8f9d-53d1eff7d9bd",
 CellID->1078969133],
Cell[187263, 4211, 186, 2, 23, "SearchTerms", "ExpressionUUID" -> \
"4baba22d-b3c9-47a4-b5be-5a15acc57bb1",
 CellID->1651977216],
Cell[187452, 4215, 222, 3, 23, "SearchTerms", "ExpressionUUID" -> \
"ae0c3702-61c6-48e6-b6d1-846e695075ff",
 CellID->119283221]
}, Open  ]],
Cell[CellGroupData[{
Cell[187711, 4223, 86, 0, 149, "RelatedLinksSection", "ExpressionUUID" -> \
"4d03ae82-835b-4d25-99a6-ace9cbfcf558"],
Cell[187800, 4225, 350, 6, 23, "RelatedLinks", "ExpressionUUID" -> \
"001ec2cc-ce49-485d-91d3-cdaf6b0fceb4",
 CellID->1836540886],
Cell[188153, 4233, 359, 6, 23, "RelatedLinks", "ExpressionUUID" -> \
"9c6bca4b-d412-4c97-90b5-e95f84e79d7d",
 CellID->960212671],
Cell[188515, 4241, 310, 6, 23, "RelatedLinks", "ExpressionUUID" -> \
"2f877372-ed2b-4862-a8b9-1e2dca1f0298",
 CellID->309414417]
}, Open  ]],
Cell[CellGroupData[{
Cell[188862, 4252, 80, 0, 149, "AuthorSection", "ExpressionUUID" -> \
"631fa904-8b4d-477a-9757-c8c115c4fe0f"],
Cell[188945, 4254, 279, 5, 23, "Author", "ExpressionUUID" -> \
"ac625d49-8669-4905-8a67-5a315f3ad8ae"]
}, Open  ]]
}, Open  ]]
}
]
*)

